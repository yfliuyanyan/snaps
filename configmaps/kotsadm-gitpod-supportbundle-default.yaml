apiVersion: v1
data:
  support-bundle-spec: |
    apiVersion: troubleshoot.sh/v1beta2
    kind: SupportBundle
    metadata:
      creationTimestamp: null
      name: default-supportbundle
    spec:
      afterCollection:
      - uploadResultsTo:
          method: PUT
          redactUri: http://kotsadm.gitpod.svc.cluster.local:3000/api/v1/troubleshoot/supportbundle/wvb9vwmhn5flxqh6446j5b74kvhz4z4b/redactions
          uri: http://kotsadm.gitpod.svc.cluster.local:3000/api/v1/troubleshoot/2PYBlnJIwzeU5PexCIXQbMKTtUe/wvb9vwmhn5flxqh6446j5b74kvhz4z4b
      analyzers:
      - clusterVersion:
          outcomes:
          - fail:
              message: The Admin Console requires at least Kubernetes 1.16.0
              when: < 1.16.0
          - pass:
              message: Your cluster meets the recommended and required versions of Kubernetes
      - containerRuntime:
          outcomes:
          - fail:
              message: The Admin Console does not support using the gvisor runtime
              when: == gvisor
          - pass:
              message: A supported container runtime is present on all nodes
      - clusterPodStatuses:
          namespaces:
          - gitpod
          - ""
          outcomes:
          - fail:
              message: 'Status: {{ .Status.Reason }}'
              when: '!= Healthy'
      - statefulsetStatus:
          name: ""
          namespaces:
          - gitpod
          - ""
          outcomes: null
      - deploymentStatus:
          name: ""
          namespaces:
          - gitpod
          - ""
          outcomes: null
      - jobStatus:
          name: ""
          namespaces:
          - gitpod
          - ""
          outcomes: null
      - replicasetStatus:
          name: ""
          namespaces:
          - gitpod
          - ""
          outcomes: null
          selector: null
      - textAnalyze:
          checkName: Inter-pod Networking
          exclude: ""
          fileName: kots/goldpinger/*/kotsadm-*/goldpinger-statistics-stdout.txt
          ignoreIfNoFiles: true
          outcomes:
          - fail:
              message: Some nodes have pod communication issues
              when: OK = false
          - pass:
              message: Goldpinger can communicate properly
          regexGroups: '"OK": ?(?P<OK>\w+)'
      - nodeResources:
          checkName: Node status check
          outcomes:
          - fail:
              message: Not all nodes are online.
              when: nodeCondition(Ready) == False
          - fail:
              message: Not all nodes are online.
              when: nodeCondition(Ready) == Unknown
          - pass:
              message: All nodes are online.
      - clusterPodStatuses:
          checkName: contour pods unhealthy
          namespaces:
          - projectcontour
          outcomes:
          - fail:
              message: A Contour pod, {{ .Name }}, is unhealthy with a status of {{ .Status.Reason
                }}. Restarting the pod may fix the issue.
              when: '!= Healthy'
      - deploymentStatus:
          name: kotsadm
          namespace: gitpod
          outcomes:
          - pass:
              message: At least 1 replica of the Admin Console API is running and ready
              when: '> 0'
          - fail:
              message: There are no replicas of the Admin Console API running and ready
              when: = 0
      - textAnalyze:
          checkName: NFS Client Package
          fileName: kots/admin_console/fs-minio-events.yaml
          ignoreIfNoFiles: true
          outcomes:
          - fail:
              message: An NFS client package might be missing. Refer to the [documentation](https://docs.replicated.com/enterprise/snapshots-configuring-nfs)
                on how to configure NFS snapshots.
              uri: https://docs.replicated.com/enterprise/snapshots-configuring-nfs
              when: "true"
          - pass:
              message: No NFS client errors were found.
              when: "false"
          regex: bad option; for several filesystems \(e\.g\. nfs, cifs\) you might need
            a \/sbin\/mount\..+type.+ helper program\.
      collectors:
      - clusterInfo: {}
      - clusterResources: {}
      - exec:
          args:
          - -U
          - kotsadm
          collectorName: kotsadm-postgres-db
          command:
          - pg_dump
          containerName: kotsadm-postgres
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-postgres
          timeout: 10s
      - exec:
          collectorName: kotsadm-rqlite-db
          command:
          - sh
          - -c
          - "wget -qO- kotsadm:${RQLITE_PASSWORD}@localhost:4001/db/backup?fmt=sql  \n"
          containerName: rqlite
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-rqlite
          timeout: 10s
      - exec:
          args:
          - http://localhost:3030/goroutines
          collectorName: kotsadm-goroutines
          command:
          - curl
          containerName: kotsadm
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm
          timeout: 10s
      - exec:
          args:
          - http://localhost:3030/goroutines
          collectorName: kotsadm-operator-goroutines
          command:
          - curl
          containerName: kotsadm-operator
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-operator
          timeout: 10s
      - logs:
          collectorName: kotsadm-postgres-db
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-postgres
      - logs:
          collectorName: kotsadm-rqlite-db
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-rqlite
      - logs:
          collectorName: kotsadm-api
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-api
      - logs:
          collectorName: kotsadm-operator
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-operator
      - logs:
          collectorName: kotsadm
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm
      - logs:
          collectorName: kurl-proxy-kotsadm
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kurl-proxy-kotsadm
      - logs:
          collectorName: kotsadm-dex
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-dex
      - logs:
          collectorName: kotsadm-fs-minio
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-fs-minio
      - logs:
          collectorName: kotsadm-s3-ops
          name: kots/admin_console
          namespace: gitpod
          selector:
          - app=kotsadm-s3-ops
      - secret:
          collectorName: kotsadm-replicated-registry
          key: .dockerconfigjson
          name: kotsadm-replicated-registry
          namespace: gitpod
      - logs:
          collectorName: kube-flannel
          name: kots/kurl/flannel
          namespace: kube-flannel
          selector:
          - app=flannel
      - exec:
          args:
          - http://goldpinger.kurl.svc.cluster.local:80/check_all
          collectorName: goldpinger-statistics
          command:
          - curl
          containerName: kotsadm
          name: kots/goldpinger
          namespace: gitpod
          selector:
          - app=kotsadm
          timeout: 10s
      - data:
          collectorName: license.yaml
          data: |
            apiVersion: kots.io/v1beta1
            kind: License
            metadata:
              creationTimestamp: null
              name: community
            spec:
              appSlug: gitpod
              channelID: 259YYBILXTa30S1Soli9YcWcPTb
              channelName: Stable
              customerName: Community
              endpoint: https://replicated.app
              entitlements:
                customerId:
                  title: Customer ID
                  value: ""
                  valueType: String
                domain:
                  title: Domain
                  value: ""
                  valueType: String
                expires_at:
                  description: License Expiration
                  title: Expiration
                  value: ""
                  valueType: String
                levelId:
                  isHidden: true
                  title: License level
                  value: 1
                  valueType: Integer
                seats:
                  title: User seats
                  value: 10
                  valueType: Integer
              isGitOpsSupported: true
              isIdentityServiceSupported: true
              isSemverRequired: true
              isSnapshotSupported: true
              licenseID: 273WZe6zHEcVHGOuIAviuyGXbgm
              licenseSequence: 11
              licenseType: community
              signature: eyJsaWNlbnNlRGF0YSI6ImV5SmhjR2xXWlhKemFXOXVJam9pYTI5MGN5NXBieTkyTVdKbGRHRXhJaXdpYTJsdVpDSTZJa3hwWTJWdWMyVWlMQ0p0WlhSaFpHRjBZU0k2ZXlKdVlXMWxJam9pWTI5dGJYVnVhWFI1SW4wc0luTndaV01pT25zaWJHbGpaVzV6WlVsRUlqb2lNamN6VjFwbE5ucElSV05XU0VkUGRVbEJkbWwxZVVkWVltZHRJaXdpYkdsalpXNXpaVlI1Y0dVaU9pSmpiMjF0ZFc1cGRIa2lMQ0pqZFhOMGIyMWxjazVoYldVaU9pSkRiMjF0ZFc1cGRIa2lMQ0poY0hCVGJIVm5Jam9pWjJsMGNHOWtJaXdpWTJoaGJtNWxiRWxFSWpvaU1qVTVXVmxDU1V4WVZHRXpNRk14VTI5c2FUbFpZMWRqVUZSaUlpd2lZMmhoYm01bGJFNWhiV1VpT2lKVGRHRmliR1VpTENKc2FXTmxibk5sVTJWeGRXVnVZMlVpT2pFeExDSmxibVJ3YjJsdWRDSTZJbWgwZEhCek9pOHZjbVZ3YkdsallYUmxaQzVoY0hBaUxDSmxiblJwZEd4bGJXVnVkSE1pT25zaVkzVnpkRzl0WlhKSlpDSTZleUowYVhSc1pTSTZJa04xYzNSdmJXVnlJRWxFSWl3aWRtRnNkV1VpT2lJaUxDSjJZV3gxWlZSNWNHVWlPaUpUZEhKcGJtY2lMQ0p6YVdkdVlYUjFjbVVpT250OWZTd2laRzl0WVdsdUlqcDdJblJwZEd4bElqb2lSRzl0WVdsdUlpd2lkbUZzZFdVaU9pSWlMQ0oyWVd4MVpWUjVjR1VpT2lKVGRISnBibWNpTENKemFXZHVZWFIxY21VaU9udDlmU3dpWlhod2FYSmxjMTloZENJNmV5SjBhWFJzWlNJNklrVjRjR2x5WVhScGIyNGlMQ0prWlhOamNtbHdkR2x2YmlJNklreHBZMlZ1YzJVZ1JYaHdhWEpoZEdsdmJpSXNJblpoYkhWbElqb2lJaXdpZG1Gc2RXVlVlWEJsSWpvaVUzUnlhVzVuSWl3aWMybG5ibUYwZFhKbElqcDdmWDBzSW14bGRtVnNTV1FpT25zaWRHbDBiR1VpT2lKTWFXTmxibk5sSUd4bGRtVnNJaXdpZG1Gc2RXVWlPakVzSW5aaGJIVmxWSGx3WlNJNklrbHVkR1ZuWlhJaUxDSnBjMGhwWkdSbGJpSTZkSEoxWlN3aWMybG5ibUYwZFhKbElqcDdmWDBzSW5ObFlYUnpJanA3SW5ScGRHeGxJam9pVlhObGNpQnpaV0YwY3lJc0luWmhiSFZsSWpveE1Dd2lkbUZzZFdWVWVYQmxJam9pU1c1MFpXZGxjaUlzSW5OcFoyNWhkSFZ5WlNJNmUzMTlmU3dpYVhOSGFYUlBjSE5UZFhCd2IzSjBaV1FpT25SeWRXVXNJbWx6U1dSbGJuUnBkSGxUWlhKMmFXTmxVM1Z3Y0c5eWRHVmtJanAwY25WbExDSnBjMU51WVhCemFHOTBVM1Z3Y0c5eWRHVmtJanAwY25WbExDSnBjMDVsZDB0dmRITlZhVVZ1WVdKc1pXUWlPblJ5ZFdVc0ltbHpVMlZ0ZG1WeVVtVnhkV2x5WldRaU9uUnlkV1Y5ZlE9PSIsImlubmVyU2lnbmF0dXJlIjoiZXlKc2FXTmxibk5sVTJsbmJtRjBkWEpsSWpvaVYxTmlWMkpyV2xKdGRHVjNWMlJIWVdVMVdrRTFiV0pCVDNwWE1GbEJNRzFYV21OUVJtNXFjV05HU0VoSVVHcDZRbVUzVTNNM1VsYzJkSE5CZEZodWEwVTNVVkJRVUZSa2FtZEVUMU5zWjJzNFltTkpiRFJoU21FMWNTczBRM05aWmpkaVEwRktkbEJ4SzAxd0syNDBkV3Q0VTJ4RVduSklTVkF5U0VOa2R6RjBWMmhhTWs5b1pTdDFlWE0xYkVKS09GZFhaa3RFY21sU1FrSmFXVkkwUm5reWFTczVOVU5oYjNwdFRGb3hTblZwVHpBdlpsaDFUR0ZETWxwM0x6VTVObVJ3VG1ReWQySjNOaTlEVkV4RlNrcGFVMVp4U0M5aGNqaHRha3hhT0VKT2RtMXFMeTlDT0djMlYwMUdTR1YxYmxKU1IwdFJkbFJWYjBNckwyTlVNSEl2VDJwVlZXUnpZWEJPVm1SQ1EySmxWMVU0VmpkNFVIWmhkV2xKTlV0bFREaHFTbWx5TTNnMmJYcGxZMWgxZVVaWWQzbEJiVE4yZDJZeWVVMDNWblUyVEhJeWVsRXpkMHRsYUdOc2FuWm9WMlZDVms5M1BUMGlMQ0p3ZFdKc2FXTkxaWGtpT2lJdExTMHRMVUpGUjBsT0lGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dVRVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVGdk5XNTZPVmxFUzFOUlJtVndiMkphVmpBNWQxeHVXRXRsTjNSc1RGVlZWVzVUWlRnd01FZERTMVJEVkZwemJtOXFkVUpoZVdwcFMyUjNXa1F6VlZSS2NUQkVhVzlCY2xoVmEyaEVOR3RtZEROdFJGUTNSbHh1WWtGeWVGZEVWWFJyTjFkelZqRm1iRWh2Y0d0aVdGcEljRWh5VDNkMldHWlRRa2hpT1ZGQmFVazBkMXBEZG1sQ1pqZE9NSFZsVFdsb1VESmthM0JzYlZ4dU5tWklMekZUYkdwa1pWVlNNV1ZKY21WV04yUkRRWEJpYVc1eU5rOVVTREZqVTA0MVZtTlplSE4yVWpoVU9UZ3JVVWxITDBaV2FtTTNhM05yU21KeU0xeHVkMEpUZEdoalVsaEtia3R0WmtvemVXVnhkMmRsTmtGQlEyZG5WMVpRVERSR2FuWm9OQzlSTW5SeFdrZENjV3hQV1hWNEx6UklWM1pUVTJWWVMxaDJjbHh1WVVSYWNrTm5TWEZPTVhCUlJWa3dhbTB5Wmt4SFpFOURSV2hGZGxSeFpFNDBkVzluYkUwMWNpc3lkVWxZYm5WRWFFb3ZRM1pMZEdkVFJXWklNM0JrZFZ4dWNsRkpSRUZSUVVKY2JpMHRMUzB0UlU1RUlGQlZRa3hKUXlCTFJWa3RMUzB0TFZ4dUlpd2lhMlY1VTJsbmJtRjBkWEpsSWpvaVpYbEtlbUZYWkhWWldGSXhZMjFWYVU5cFNsQk9SMnhVVFhwYVYxTlZNV3hSYlhoTFRqTk9kRlpXWjNsYVJXeHlZek5TVTFWSWNFMVJNbWMwVm0xME5Ga3lUakJaYkZaUFN6RmFTa3N6YUUxUmFsVjZWMGQzZWxOR2FEVk9SV3hHWld0MFJtTlVUbFpOTTBKTFQwaFdkMDlFVWxkak1VWTBWMjVzYTFSVlJuaGpibXhMV2taak5Wb3hiSFZhU0VaWlZqTmFiMVpIV1RSaWFsVTFZekZ3VEZaR1ZteFNNVll5Vm0xRk0yUnVSVFZSV0ZJeFUxTnplbHBIY0hSUFYxRjNaRmQ0UmxOdVRYZGlWMFpOVVZjNVZsSlVaSE5PYkc5Mll6TkpkbUZEY3pGamVscEZVV3RhV21FeFZrNU5ibXhJWWxaVk1tUXdWbmRXVlU1MFUxWnNhR05zU2xWWlZHaFBaVVpXYTFZeVJsbGlNVTV6VWpKd1JGUklhRzVQUlVwc1lXdFplVk5XYkZoa01HUlJWVlZ3YW1GcVdtMWhWRlpTVTBkNFZtTkdaSFpqVldoeVpXMDRNV1F3UmxKT1IyaHZWbFJDVkZVeFpIaGhTRW8xVFVWd2JtSkZiRmRXUjBVMVpGZHNRbU5ZWkZaaVNFNVRWbnBHVUUxdVZsUlVSM2hLWVVoc01VMVhUblJhTTFaUFlsaFdNRkV3VFhKWFZsWjZaVmQwVjFOV1RteFRiRnBGVTBaR1JVNVdhekpXVjFseVMzcGtNazFUZEVSTlYzUjNXbXRSZUU5SWNGSlBSM0JFVTI1b1IxVkdSbE5oV0doRlkzcEZjbVZ0WXpsUVUwbHpTVzFrYzJJeVNtaGlSWFJzWlZWc2EwbHFiMmxaYlZKc1dsUlZNazVVV1hkWk1scHBUa1JPYWs5WFNYbFBSMHB0VDFSb2JGbFhUbWhhYlVVeVRrUlphV1pSUFQwaWZRPT0ifQ==
            status: {}
          name: kots/admin_console
      - data:
          collectorName: app-info.json
          data: |-
            {
              "instance_id": "2PYBlnJIwzeU5PexCIXQbMKTtUe",
              "cluster_id": "ausathkyhuawlfpmdujgypodrjcuiqsn",
              "downstream": {
                "cursor": "27",
                "channel_id": "259YYBILXTa30S1Soli9YcWcPTb",
                "channel_name": "Stable",
                "sequence": 1,
                "source": "Config Change",
                "status": "deploying",
                "preflight_state": "fail",
                "skip_preflights": false,
                "repl_helm_installs": 1,
                "native_helm_installs": 0
              },
              "app_status": "ready",
              "is_kurl": false,
              "kurl_node_count_total": 0,
              "kurl_node_count_ready": 0,
              "k8s_version": "v1.26.4+k3s1",
              "kots_version": "v1.98.3",
              "kots_install_id": "2PYBPgqqVdRdn12kvBqesNkukdl",
              "kurl_install_id": "",
              "is_gitops_enabled": false,
              "gitops_provider": ""
            }
          name: kots/admin_console
      - data:
          collectorName: namespace.txt
          data: gitpod
          name: kots/admin_console
      - secret:
          collectorName: gitpod-registry
          key: .dockerconfigjson
          name: gitpod-registry
          namespace: gitpod
      - copy:
          collectorName: spec-gitpod
          containerName: kotsadm
          containerPath: /tmp/app-version-archive1539755525/gitpod.tar
          name: kots/admin_console/app/gitpod
          namespace: gitpod
          selector:
          - app=kotsadm
    status: {}
kind: ConfigMap
metadata:
  creationTimestamp: "2023-05-09T09:24:49Z"
  labels:
    kots.io/backup: velero
    kots.io/kotsadm: "true"
    troubleshoot.io/kind: support-bundle
  name: kotsadm-gitpod-supportbundle-default
  namespace: gitpod
  resourceVersion: "7546"
  uid: 81c2f5ee-e4a2-4956-a02a-c25eeaa5aae4
