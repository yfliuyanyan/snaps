apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 1b66e69dcd3e87b7ddd3507e9224d356e2732de2436f80fab49cecdc3bb7b81e
    cni.projectcalico.org/podIP: 192.168.132.247/32
    cni.projectcalico.org/podIPs: 192.168.132.247/32
    gitpod.io/checksum_config: 35e84cbb015525dc3afe0e755135f4848843569bae5fa8667c78961296a47eca
  creationTimestamp: "2023-05-09T09:31:14Z"
  generateName: openvsx-proxy-
  labels:
    app: gitpod
    component: openvsx-proxy
    controller-revision-hash: openvsx-proxy-78b6996b4d
    statefulset.kubernetes.io/pod-name: openvsx-proxy-0
  name: openvsx-proxy-0
  namespace: gitpod
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: openvsx-proxy
    uid: 2556e431-c788-4331-a9cf-50a3b6e309ee
  resourceVersion: "4693"
  uid: 75498f0f-6745-4212-b318-c9938e3da246
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: gitpod.io/workload_ide
            operator: Exists
  containers:
  - args:
    - /config/config.json
    env:
    - name: GITPOD_DOMAIN
      value: ide-lyy.one
    - name: GITPOD_INSTALLATION_SHORTNAME
      value: default
    - name: GITPOD_REGION
      value: local
    - name: HOST_URL
      value: https://ide-lyy.one
    - name: KUBE_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: KUBE_DOMAIN
      value: svc.cluster.local
    - name: LOG_LEVEL
      value: info
    image: eu.gcr.io/gitpod-core-dev/build/openvsx-proxy:commit-668e50f9f635342acb4eb52115be71fa0dee2a51
    imagePullPolicy: IfNotPresent
    name: openvsx-proxy
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    - containerPort: 9500
      name: metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /openvsx-proxy-status
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 1m
        memory: 150Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /config
      name: config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-lhnb2
      readOnly: true
  - command:
    - redis-server
    - /config/redis.conf
    env:
    - name: MASTER
      value: "true"
    image: docker.io/library/redis:6.2
    imagePullPolicy: IfNotPresent
    name: redis
    ports:
    - containerPort: 6379
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 150Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /config
      name: config
    - mountPath: /data
      name: redis-data
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-lhnb2
      readOnly: true
  - args:
    - --logtostderr
    - --insecure-listen-address=[$(IP)]:9500
    - --upstream=http://127.0.0.1:9500/
    env:
    - name: IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    image: quay.io/brancz/kube-rbac-proxy:v0.12.0
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 9500
      name: metrics
      protocol: TCP
    resources:
      requests:
        cpu: 1m
        memory: 30Mi
    securityContext:
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-lhnb2
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  hostname: openvsx-proxy-0
  nodeName: vultr
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: openvsx-proxy
  serviceAccountName: openvsx-proxy
  subdomain: openvsx-proxy
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: redis-data
    persistentVolumeClaim:
      claimName: redis-data-openvsx-proxy-0
  - configMap:
      defaultMode: 420
      name: openvsx-proxy-config
    name: config
  - name: kube-api-access-lhnb2
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-05-09T09:31:41Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-05-09T09:31:58Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-05-09T09:31:58Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-05-09T09:31:41Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://a835595ebed7ee90d9c3a2cc740a18b4033b120c0ca8449d7ae14ca5543624c3
    image: quay.io/brancz/kube-rbac-proxy:v0.12.0
    imageID: quay.io/brancz/kube-rbac-proxy@sha256:12b82e47da1a2f5094966d4239811a5ae5c37b47e4224b1b35e57a7f02edd57a
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-05-09T09:31:57Z"
  - containerID: containerd://136bdba9a9d3e9f1ce5eebc838f57bd3d46d8a20471c2dce713fc0eeff567d38
    image: eu.gcr.io/gitpod-core-dev/build/openvsx-proxy:commit-668e50f9f635342acb4eb52115be71fa0dee2a51
    imageID: eu.gcr.io/gitpod-core-dev/build/openvsx-proxy@sha256:c14fe7ed46b473b074cd3d5d5b5f630e6f66e6afbf6e214b79607e50bf444694
    lastState: {}
    name: openvsx-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-05-09T09:31:51Z"
  - containerID: containerd://a72f07ea6ab302f75e36cda4ca0c3f52102092113add7baa1f72080783457fad
    image: docker.io/library/redis:6.2
    imageID: docker.io/library/redis@sha256:aef3c16ffbd805da1d5bdc531f29d2a49744ec0ff33c2cd9483e398e917501f4
    lastState: {}
    name: redis
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2023-05-09T09:31:56Z"
  hostIP: 45.77.41.206
  phase: Running
  podIP: 192.168.132.247
  podIPs:
  - ip: 192.168.132.247
  qosClass: Burstable
  startTime: "2023-05-09T09:31:41Z"
