leeway build components/blobserve:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade:lib         [90m(version 3cdcdfade35391f36ac6fd3e6c86f4b2828501c7)[0m
[33mðŸ”§  build[0m           components/blobserve:app               [90m(version e1dd254cb7467e674d3f91f0beae9dfe96fc5ad3)[0m
[33mðŸ”§  build[0m           components/blobserve:docker            [90m(version 5b31377e75dd6afa190482aef968c208d1378d89)[0m

[90m[components/blobserve:app] [0m[33mbuild started[0m [0;90m(version e1dd254cb7467e674d3f91f0beae9dfe96fc5ad3)[0m
[90m[components/blobserve:app] [0mlevel=error msg="[linters_context] typechecking error: pattern ./...: directory prefix . does not contain main module or its selected dependencies"
[90m[components/blobserve:app] [0m[0;31mpackage build failed[0m
[90m[components/blobserve:app] [0m[1;37mReason:[0m exit status 7
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:18:39Z" level=fatal msg="build failed"
leeway build components/content-service:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:app         [90m(version 25c6cb5f713184ff9b94816e93dea1355853c5b3)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:docker      [90m(version 443b35412e30887a5b822a7010fc4d61fae353b1)[0m


[0;32mbuild succeded[0m
leeway build components/dashboard:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/dashboard:app                  [90m(version 233658a99c71723d4ffa1a7532f40e117e077b21)[0m
[32mðŸ“¦  cached locally[0m  components/dashboard:docker               [90m(version 78a9596e0620c4b1f5d08c919127808fcd0f8d00)[0m
[32mðŸ“¦  cached locally[0m  components/dashboard:static               [90m(version 2d00d42621cbdebb16d73809e4272b784e1131f0)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:lib            [90m(version f89cd89f0266c6b19b4387d1e4f85d4f073fa0a6)[0m
[32mðŸ“¦  cached locally[0m  components/public-api/typescript:lib      [90m(version 00b470a6b57d72bc0ac974d35187056220f02623)[0m


[0;32mbuild succeded[0m
leeway build components/docker-up:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib              [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/docker-up:app              [90m(version 764e0ef59f57e162f1b3fee5540988be30990f98)[0m
[32mðŸ“¦  cached locally[0m  components/docker-up:bin-docker-up    [90m(version 042320da820a0a4f3d6e054c2386fc33ad1f5319)[0m
[32mðŸ“¦  cached locally[0m  components/docker-up:bin-runc-facade  [90m(version 66fd8a4621cb4009a8239bde3c9f9af41c956b92)[0m
[32mðŸ“¦  cached locally[0m  components/docker-up:docker           [90m(version 2a76b806a59cacbcc7cbbc116d50c1517fdf77ea)[0m


[0;32mbuild succeded[0m
leeway build components/ee/agent-smith:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/ee/agent-smith:app             [90m(version 8403821be0bf0063ced84ce3b5e51c545de9ae08)[0m
[33mðŸ”§  build[0m           components/ee/agent-smith:docker          [90m(version 1eb241689c03beba52761580dbc5dacae2e1f03f)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m

[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:18:43Z" level=fatal msg="build failed"
leeway build components/gitpod-db:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/gitpod-db:docker      [90m(version 3e174c9e8de64f2135b261b1ed38db56268dcc93)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-db:migrations  [90m(version 2243f9c70f9109a1a33f915619112f413285981d)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:lib   [90m(version f89cd89f0266c6b19b4387d1e4f85d4f073fa0a6)[0m


[0;32mbuild succeded[0m
leeway build components/ide-metrics:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib           [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/ide-metrics-api/go:lib  [90m(version 43739a74f977f0038f18a99dcccb29f7544529da)[0m
[32mðŸ“¦  cached locally[0m  components/ide-metrics:app         [90m(version 15ad8fc9a1367c0d76a821a8c79222aaf8a999ba)[0m
[32mðŸ“¦  cached locally[0m  components/ide-metrics:docker      [90m(version 6b027298965dd5651c5e8cce62c50a35a6dfac7e)[0m


[0;32mbuild succeded[0m
leeway build components/ide-proxy:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib          [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/ide-proxy:docker               [90m(version 6bf4ab67c43169524678a1fa5691dccd4610b381)[0m
[33mðŸ”§  build[0m           components/local-app-api/go:lib           [90m(version a7dffae2a5acd72984d8c017d1edc73bb130e8cb)[0m
[33mðŸ”§  build[0m           components/local-app:app                  [90m(version 60423782a4676bdcc42a27925efe34c35e486c1e)[0m
[33mðŸ”§  build[0m           components/local-app:app-darwin-amd64     [90m(version b801b06af13534f03f3930ca4b703aec97e2eb3f)[0m
[33mðŸ”§  build[0m           components/local-app:app-darwin-arm64     [90m(version 32a77d63f7cddee2e2d9027c512ded3ef72bd1c1)[0m
[33mðŸ”§  build[0m           components/local-app:app-linux-amd64      [90m(version 52605827eb222d32bb3fe9489372c2fd9f17eb17)[0m
[33mðŸ”§  build[0m           components/local-app:app-linux-arm64      [90m(version 9546f113bd2b1c1fab75e3bf458ed5307e90eea3)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-386      [90m(version 5a2bd787d407da0acc92c86c1ed37142bd734381)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-amd64    [90m(version cfcd10693b21789cd10f2700f5813bf026e1f4e0)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-arm64    [90m(version 3add8e08ba93f291c1d2622f2eae9c397bb6903c)[0m

[90m[components/local-app-api/go:lib] [0m[33mbuild started[0m [0;90m(version a7dffae2a5acd72984d8c017d1edc73bb130e8cb)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:18:46Z" level=fatal msg="build failed"
leeway build components/ide-service:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/ide-service-api/go:lib         [90m(version 90b4e3228eaaee7d21ceaead677fcfae50600a15)[0m
[33mðŸ”§  build[0m           components/ide-service:app                [90m(version be06e30c138d25c81825f75560e0ecaa971528c3)[0m
[33mðŸ”§  build[0m           components/ide-service:docker             [90m(version 00b2deaf6f1359d4ac3bc361171757cd229d5c8c)[0m

[90m[components/ide-service-api/go:lib] [0m[33mbuild started[0m [0;90m(version 90b4e3228eaaee7d21ceaead677fcfae50600a15)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:18:48Z" level=fatal msg="build failed"
leeway build components/ide/code-desktop:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/ide/code-desktop/status:app  [90m(version 042c4c31ff5cd278592bafd4f34f34e7242d0899)[0m
[32mðŸ“¦  cached locally[0m  components/ide/code-desktop:docker      [90m(version 7c1f966927f0193445369566782c824956fbb16b)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib        [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m


[0;32mbuild succeded[0m
leeway build components/ide/code/codehelper:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib          [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/ide/code/codehelper:app        [90m(version 4c0d1a47abf9124aa3970cf9979e2a8f034a3672)[0m
[33mðŸ”§  build[0m           components/ide/code/codehelper:docker     [90m(version c2c05987a889a8ef8fcefd6a76d2dff268c4aa4c)[0m

[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:18:51Z" level=fatal msg="build failed"
leeway build components/ide/code:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/ide/code:docker  [90m(version 5912fa94865b13685b461768b77d559e56278084)[0m


[0;32mbuild succeded[0m
leeway build components/ide/jetbrains/backend-plugin:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol/java:lib                    [90m(version f7fc52eee93431f8e696fc74e8c49f4579b1e463)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/backend-plugin:docker         [90m(version e58161e6118f5f8af683da19bf4dc9d347e99b5a)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/backend-plugin:latest         [90m(version a318dfbf4b0eb0ddb9c117a88d2be64e31da9bb6)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/backend-plugin:plugin-latest  [90m(version 277ec2152b2318d662dd5829e0b1f14f0ee3e01c)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/backend-plugin:plugin-stable  [90m(version 3bd93b17cab9bcaf7339e5366f0613344e9a09b5)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/backend-plugin:stable         [90m(version b5ef8e09353a60a99ff1dad3730fcfefd4d0ed66)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/java:lib                     [90m(version 8c9c6b73fb31dfb1e467e748cbf03475f50358ee)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api:java                         [90m(version 1fbeb5ad9e367d2b74b7eacf457ee2fead32525e)[0m


[0;32mbuild succeded[0m
leeway build components/ide/jetbrains/image:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/cli:app                         [90m(version 98dbd4752e88ebdcf0ffecb1cf09020b2e9bb44b)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-goland           [90m(version 02e48fee3ef18f447471cd65465c5e5f89b54250)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-goland-latest    [90m(version 34f604db27d2dc8a797f8d63bb1f4c5ab6087858)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-intellij-latest  [90m(version 8966f4bd819be6780b6696ab88f8de782a95db9f)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-phpstorm         [90m(version 182b63ac85886810c7a94cca02f61f1b200c5638)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-phpstorm-latest  [90m(version ef8d4139a426e7b94d91cd8ae2c65d81255a4436)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-pycharm          [90m(version 59d832528f3d9897f07d21b822d1156b9c8306a6)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-rider            [90m(version b6e094d0f76ff71b45f2c56593aa32e7b9172162)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-rubymine         [90m(version 4af6e3b249cef5f644f536c5d9ccdf7ed54850f0)[0m
[32mðŸ“¦  cached locally[0m  components/ide/jetbrains/image:download-webstorm         [90m(version 65ee79244b4a6ea1242f038a7df460d225422ec7)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:clion                     [90m(version 0ded723ad5c9591b20ad54531e11105cb959efbf)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:clion-latest              [90m(version cdebc78e7fe3ce4b236d600f00dd471141ceefcd)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:docker                    [90m(version 98b1d97c4cffe82e203defc7c2e26c75c5cb4c7a)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-clion            [90m(version 1db7c72e133ce48c0fd8bf373fec4c23e0ee96c8)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-clion-latest     [90m(version 3981a10dcd37d27aab4bde617a51ea51a7d43758)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-intellij         [90m(version 27157dda329f733eab077b64b4d7c1efa0a385a0)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-pycharm-latest   [90m(version 28cd13bd8356dbcef22ce3c1da21b6c73b6000dd)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-rider-latest     [90m(version 88317463fb3bc24cfbe633f2727380580a52a0cc)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-rubymine-latest  [90m(version 62da7e11089ebb1ebf0c3d01bae3a17e0ccd5a7f)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:download-webstorm-latest  [90m(version cd742e4f391d72218f90de4a58a421c403a34f15)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:goland                    [90m(version 85c6ef0f55c61b5292156eac3e18d7b9b2680ddb)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:goland-latest             [90m(version 3412009c5b7f2da24dceae46e3998545e464aa6a)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:intellij                  [90m(version 07954e93a7e006ca98912e547f90db484ed217ef)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:intellij-latest           [90m(version 643f9fb26ef314e7452f9c2f48cb8ca2bb891e90)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:phpstorm                  [90m(version e7933b41308d880eea3185ae249513c16ea0c42d)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:phpstorm-latest           [90m(version b7cccbeb535cc9474a40e942e68f3c76bddf0d00)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:pycharm                   [90m(version 85990b672680e4fa460b09fb984338d65f0b0790)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:pycharm-latest            [90m(version 9f62448654ed5bfbafafca953dc5d8cec564334e)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:rider                     [90m(version c62c9e19295650708383eb43d3a82931dc5938e7)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:rider-latest              [90m(version becfc7a68981acd53fc9043115ef3b5293c66f63)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:rubymine                  [90m(version 0753bd260f59ceeeef4c664bfd568c24386c6b4d)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:rubymine-latest           [90m(version 7664d17c5fa557a3308d02338937c9ae96a5384e)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:webstorm                  [90m(version 37f9ac6d8a3d3b28785cd018d2953f293e38f909)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/image:webstorm-latest           [90m(version 73e49213a99e581806a7da6161c449ed08bcfb8a)[0m

[90m[components/ide/jetbrains/image:download-rider-latest] [0m[33mbuild started[0m [0;90m(version 88317463fb3bc24cfbe633f2727380580a52a0cc)[0m
[90m[components/ide/jetbrains/image:download-rubymine-latest] [0m[33mbuild started[0m [0;90m(version 62da7e11089ebb1ebf0c3d01bae3a17e0ccd5a7f)[0m
[90m[components/ide/jetbrains/image:download-intellij] [0m[33mbuild started[0m [0;90m(version 27157dda329f733eab077b64b4d7c1efa0a385a0)[0m
[90m[components/ide/jetbrains/image:download-clion] [0m[33mbuild started[0m [0;90m(version 1db7c72e133ce48c0fd8bf373fec4c23e0ee96c8)[0m
[90m[components/ide/jetbrains/image:rubymine] [0m[33mbuild started[0m [0;90m(version 0753bd260f59ceeeef4c664bfd568c24386c6b4d)[0m
[90m[components/ide/jetbrains/image:download-clion-latest] [0m[33mbuild started[0m [0;90m(version 3981a10dcd37d27aab4bde617a51ea51a7d43758)[0m
[90m[components/ide/jetbrains/image:phpstorm] [0m[33mbuild started[0m [0;90m(version e7933b41308d880eea3185ae249513c16ea0c42d)[0m
[90m[components/ide/jetbrains/image:download-pycharm-latest] [0m[33mbuild started[0m [0;90m(version 28cd13bd8356dbcef22ce3c1da21b6c73b6000dd)[0m
[90m[components/ide/jetbrains/image:pycharm] [0m[33mbuild started[0m [0;90m(version 85990b672680e4fa460b09fb984338d65f0b0790)[0m
[90m[components/ide/jetbrains/image:goland] [0m[33mbuild started[0m [0;90m(version 85c6ef0f55c61b5292156eac3e18d7b9b2680ddb)[0m
[90m[components/ide/jetbrains/image:rider] [0m[33mbuild started[0m [0;90m(version c62c9e19295650708383eb43d3a82931dc5938e7)[0m
[90m[components/ide/jetbrains/image:intellij-latest] [0m[33mbuild started[0m [0;90m(version 643f9fb26ef314e7452f9c2f48cb8ca2bb891e90)[0m
[90m[components/ide/jetbrains/image:goland-latest] [0m[33mbuild started[0m [0;90m(version 3412009c5b7f2da24dceae46e3998545e464aa6a)[0m
[90m[components/ide/jetbrains/image:download-webstorm-latest] [0m[33mbuild started[0m [0;90m(version cd742e4f391d72218f90de4a58a421c403a34f15)[0m
[90m[components/ide/jetbrains/image:phpstorm-latest] [0m[33mbuild started[0m [0;90m(version b7cccbeb535cc9474a40e942e68f3c76bddf0d00)[0m
[90m[components/ide/jetbrains/image:webstorm] [0m[33mbuild started[0m [0;90m(version 37f9ac6d8a3d3b28785cd018d2953f293e38f909)[0m
[90m[components/ide/jetbrains/image:pycharm] [0m
[90m[components/ide/jetbrains/image:pycharm] [0mgzip: stdin: unexpected end of file
[90m[components/ide/jetbrains/image:pycharm] [0mtar: Unexpected EOF in archive
[90m[components/ide/jetbrains/image:pycharm] [0mtar: Unexpected EOF in archive
[90m[components/ide/jetbrains/image:pycharm] [0mtar: Error is not recoverable: exiting now
[90m[components/ide/jetbrains/image:pycharm] [0m[0;31mpackage build failed[0m
[90m[components/ide/jetbrains/image:pycharm] [0m[1;37mReason:[0m exit status 2
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:19:24Z" level=fatal msg="build failed"
leeway build components/ide/jetbrains/launcher:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib          [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/launcher:app     [90m(version e24272f4ae1d81cbbe53875708eae3d3d6cf8b94)[0m
[33mðŸ”§  build[0m           components/ide/jetbrains/launcher:docker  [90m(version 73a8160fe584d750bf08ab15ab964975ac5735b7)[0m

[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:19:26Z" level=fatal msg="build failed"
leeway build components/image-builder-bob:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[33mðŸ”§  build[0m           components/image-builder-bob:app          [90m(version 7a9803ae5c973407fbbfa2c6adc3fe63bdf5413b)[0m
[33mðŸ”§  build[0m           components/image-builder-bob:docker       [90m(version c8fdecf090a3b1794a3db02efeb56ff9c6f5ec4c)[0m
[33mðŸ”§  build[0m           components/image-builder-bob:runc-facade  [90m(version 2356ae7f356c8b5cee3bd803feaf9d790cfea7f0)[0m

[90m[components/image-builder-bob:app] [0m[33mbuild started[0m [0;90m(version 7a9803ae5c973407fbbfa2c6adc3fe63bdf5413b)[0m
[90m[components/image-builder-bob:runc-facade] [0m[33mbuild started[0m [0;90m(version 2356ae7f356c8b5cee3bd803feaf9d790cfea7f0)[0m
[90m[components/image-builder-bob:app] [0mgo: go.mod file indicates go 1.19, but maximum version supported by tidy is 1.18
[90m[components/image-builder-bob:app] [0m[0;31mpackage build failed[0m
[90m[components/image-builder-bob:app] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:19:27Z" level=fatal msg="build failed"
leeway build components/image-builder-mk3:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib       [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[33mðŸ”§  build[0m           components/content-service:lib         [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[33mðŸ”§  build[0m           components/image-builder-api/go:lib    [90m(version f3356a7c025f2a15bb686b61c78ab5a090ad51ff)[0m
[33mðŸ”§  build[0m           components/image-builder-mk3:app       [90m(version c5b50c3b9e8d6e843788c0e6f7c67ef0b9488ffe)[0m
[33mðŸ”§  build[0m           components/image-builder-mk3:docker    [90m(version 9b43539fbd85eeabcb9e8019d9c60ccab39db8fa)[0m
[33mðŸ”§  build[0m           components/ws-manager-api/go:lib       [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m

[90m[components/ws-manager-api/go:lib] [0m[33mbuild started[0m [0;90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[90m[components/image-builder-api/go:lib] [0m[33mbuild started[0m [0;90m(version f3356a7c025f2a15bb686b61c78ab5a090ad51ff)[0m
[90m[components/content-service:lib] [0m[33mbuild started[0m [0;90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[90m[components/ws-manager-api/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(2.04s)[0m
[90m[components/image-builder-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/image-builder/api	[no test files]
[90m[components/image-builder-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/image-builder/api/config	[no test files]
[90m[components/image-builder-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/image-builder/api/mock	[no test files]
[90m[components/image-builder-api/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(4.70s)[0m
[90m[components/content-service:lib] [0m?   	github.com/gitpod-io/gitpod/content-service	[no test files]
[90m[components/content-service:lib] [0m?   	github.com/gitpod-io/gitpod/content-service/cmd	[no test files]
[90m[components/content-service:lib] [0m=== RUN   TestExtractTarbal
[90m[components/content-service:lib] [0m=== RUN   TestExtractTarbal/simple-test
[90m[components/content-service:lib] [0m=== RUN   TestExtractTarbal/empty-tar
[90m[components/content-service:lib] [0m--- PASS: TestExtractTarbal (0.06s)
[90m[components/content-service:lib] [0m    --- PASS: TestExtractTarbal/simple-test (0.06s)
[90m[components/content-service:lib] [0m    --- PASS: TestExtractTarbal/empty-tar (0.01s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/archive	0.083s
[90m[components/content-service:lib] [0m?   	github.com/gitpod-io/gitpod/content-service/pkg/executor	[no test files]
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/no_commits
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/clean_copy
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/untracked_files
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/uncommitted_files
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/unpushed_commits
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/unpushed_commits_in_new_branch
[90m[components/content-service:lib] [0m=== RUN   TestGitStatus/pending_in_sub-dir_files
[90m[components/content-service:lib] [0m--- PASS: TestGitStatus (2.88s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/no_commits (0.11s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/clean_copy (0.99s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/untracked_files (0.87s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/uncommitted_files (0.18s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/unpushed_commits (0.26s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/unpushed_commits_in_new_branch (0.26s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatus/pending_in_sub-dir_files (0.21s)
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/no_commits
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/clean_copy
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/untracked_files
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/uncommitted_files
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/unpushed_commits
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/unpushed_commits_in_new_branch
[90m[components/content-service:lib] [0m=== RUN   TestGitStatusFromFiles/pending_in_sub-dir_files
[90m[components/content-service:lib] [0m--- PASS: TestGitStatusFromFiles (0.96s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/no_commits (0.06s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/clean_copy (0.18s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/untracked_files (0.14s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/uncommitted_files (0.09s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/unpushed_commits (0.21s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/unpushed_commits_in_new_branch (0.22s)
[90m[components/content-service:lib] [0m    --- PASS: TestGitStatusFromFiles/pending_in_sub-dir_files (0.07s)
[90m[components/content-service:lib] [0m=== RUN   TestParsePorcelain
[90m[components/content-service:lib] [0m--- PASS: TestParsePorcelain (0.00s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/git	3.881s
[90m[components/content-service:lib] [0m=== RUN   TestFileDownloadInitializer
[90m[components/content-service:lib] [0m=== RUN   TestFileDownloadInitializer/happy_path
[90m[components/content-service:lib] [0m=== RUN   TestFileDownloadInitializer/digest_mismatch
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=0 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=1 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=2 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=3 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=4 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=5 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=6 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=7 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=8 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=9 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=10 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=11 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=12 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=13 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=14 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=15 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=16 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=17 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=18 error="digest mismatch"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=19 error="digest mismatch"
[90m[components/content-service:lib] [0m=== RUN   TestFileDownloadInitializer/file_not_found
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=0 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=1 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=2 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=3 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=4 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=5 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=6 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=7 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=8 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=9 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=10 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=11 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=12 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=13 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=14 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=15 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=16 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=17 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=18 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0mtime="2023-05-15T09:19:55Z" level=warning msg="cannot download additional content files" attempt=19 error="non-OK download response: Not Found"
[90m[components/content-service:lib] [0m--- PASS: TestFileDownloadInitializer (0.01s)
[90m[components/content-service:lib] [0m    --- PASS: TestFileDownloadInitializer/happy_path (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestFileDownloadInitializer/digest_mismatch (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestFileDownloadInitializer/file_not_found (0.00s)
[90m[components/content-service:lib] [0m=== RUN   TestCompositeInitializer
[90m[components/content-service:lib] [0m=== RUN   TestCompositeInitializer/empty
[90m[components/content-service:lib] [0m=== RUN   TestCompositeInitializer/single
[90m[components/content-service:lib] [0m=== RUN   TestCompositeInitializer/multiple
[90m[components/content-service:lib] [0m=== RUN   TestCompositeInitializer/error_propagation
[90m[components/content-service:lib] [0m--- PASS: TestCompositeInitializer (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestCompositeInitializer/empty (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestCompositeInitializer/single (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestCompositeInitializer/multiple (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestCompositeInitializer/error_propagation (0.00s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/initializer	0.032s
[90m[components/content-service:lib] [0m=== RUN   TestGetContentLayer
[90m[components/content-service:lib] [0m=== RUN   TestGetContentLayer/git_initializer
[90m[components/content-service:lib] [0m=== RUN   TestGetContentLayer/legacy_backup
[90m[components/content-service:lib] [0m=== RUN   TestGetContentLayer/full_workspace_backup
[90m[components/content-service:lib] [0m--- PASS: TestGetContentLayer (0.06s)
[90m[components/content-service:lib] [0m    --- PASS: TestGetContentLayer/git_initializer (0.02s)
[90m[components/content-service:lib] [0m    --- PASS: TestGetContentLayer/legacy_backup (0.03s)
[90m[components/content-service:lib] [0m    --- PASS: TestGetContentLayer/full_workspace_backup (0.01s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/layer	0.078s
[90m[components/content-service:lib] [0m?   	github.com/gitpod-io/gitpod/content-service/pkg/logs	[no test files]
[90m[components/content-service:lib] [0m=== RUN   TestListLogs
[90m[components/content-service:lib] [0m=== RUN   TestListLogs/one_instance,_three_tasks
[90m[components/content-service:lib] [0m--- PASS: TestListLogs (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestListLogs/one_instance,_three_tasks (0.00s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/service	0.036s
[90m[components/content-service:lib] [0m=== RUN   TestObjectAccessToNonExistentObj
[90m[components/content-service:lib] [0m    gcloud_test.go:21: 
[90m[components/content-service:lib] [0m--- SKIP: TestObjectAccessToNonExistentObj (0.00s)
[90m[components/content-service:lib] [0m=== RUN   TestMinioBucketName
[90m[components/content-service:lib] [0m=== RUN   TestMinioBucketName/no_dedicated_bucket
[90m[components/content-service:lib] [0m=== RUN   TestMinioBucketName/with_dedicated_bucket
[90m[components/content-service:lib] [0m--- PASS: TestMinioBucketName (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestMinioBucketName/no_dedicated_bucket (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestMinioBucketName/with_dedicated_bucket (0.00s)
[90m[components/content-service:lib] [0m=== RUN   TestMinioBackupObject
[90m[components/content-service:lib] [0m=== RUN   TestMinioBackupObject/no_dedicated_bucket
[90m[components/content-service:lib] [0m=== RUN   TestMinioBackupObject/with_dedicated_bucket
[90m[components/content-service:lib] [0m--- PASS: TestMinioBackupObject (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestMinioBackupObject/no_dedicated_bucket (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestMinioBackupObject/with_dedicated_bucket (0.00s)
[90m[components/content-service:lib] [0m=== RUN   TestBlobObjectName
[90m[components/content-service:lib] [0m=== RUN   TestBlobObjectName/simple_name
[90m[components/content-service:lib] [0m=== RUN   TestBlobObjectName/name_with_slash
[90m[components/content-service:lib] [0m=== RUN   TestBlobObjectName/name_with_whitespace
[90m[components/content-service:lib] [0m=== RUN   TestBlobObjectName/name_with_invalid_char
[90m[components/content-service:lib] [0m--- PASS: TestBlobObjectName (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestBlobObjectName/simple_name (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestBlobObjectName/name_with_slash (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestBlobObjectName/name_with_whitespace (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestBlobObjectName/name_with_invalid_char (0.00s)
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path/ObjectExists
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path/ObjectHash
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path/DiskUsage
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path/SignDownload
[90m[components/content-service:lib] [0m=== RUN   TestS3PresignedHappyPath/happy_path/SignUpload
[90m[components/content-service:lib] [0m--- PASS: TestS3PresignedHappyPath (0.00s)
[90m[components/content-service:lib] [0m    --- PASS: TestS3PresignedHappyPath/happy_path (0.00s)
[90m[components/content-service:lib] [0m        --- PASS: TestS3PresignedHappyPath/happy_path/ObjectExists (0.00s)
[90m[components/content-service:lib] [0m        --- PASS: TestS3PresignedHappyPath/happy_path/ObjectHash (0.00s)
[90m[components/content-service:lib] [0m        --- PASS: TestS3PresignedHappyPath/happy_path/DiskUsage (0.00s)
[90m[components/content-service:lib] [0m        --- PASS: TestS3PresignedHappyPath/happy_path/SignDownload (0.00s)
[90m[components/content-service:lib] [0m        --- PASS: TestS3PresignedHappyPath/happy_path/SignUpload (0.00s)
[90m[components/content-service:lib] [0mPASS
[90m[components/content-service:lib] [0mok  	github.com/gitpod-io/gitpod/content-service/pkg/storage	0.028s
[90m[components/content-service:lib] [0m?   	github.com/gitpod-io/gitpod/content-service/pkg/storage/mock	[no test files]
[90m[components/content-service:lib] [0m[0;32mpackage build succeded[0m [0;90m(27.57s)[0m
[90m[components/image-builder-mk3:app] [0m[33mbuild started[0m [0;90m(version c5b50c3b9e8d6e843788c0e6f7c67ef0b9488ffe)[0m
[90m[components/image-builder-mk3:app] [0m?   	github.com/gitpod-io/gitpod/image-builder	[no test files]
[90m[components/image-builder-mk3:app] [0m?   	github.com/gitpod-io/gitpod/image-builder/cmd	[no test files]
[90m[components/image-builder-mk3:app] [0m?   	github.com/gitpod-io/gitpod/image-builder/pkg/auth	[no test files]
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse/running
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse/done
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse/done_stopped
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse/done_task_failed
[90m[components/image-builder-mk3:app] [0m=== RUN   TestExtractBuildResponse/done_workspace_failed
[90m[components/image-builder-mk3:app] [0m--- PASS: TestExtractBuildResponse (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestExtractBuildResponse/running (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestExtractBuildResponse/done (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestExtractBuildResponse/done_stopped (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestExtractBuildResponse/done_task_failed (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestExtractBuildResponse/done_workspace_failed (0.00s)
[90m[components/image-builder-mk3:app] [0m=== RUN   TestBuild
[90m[components/image-builder-mk3:app] [0m=== RUN   TestBuild/validate_request_-_no_build_source
[90m[components/image-builder-mk3:app] [0m=== RUN   TestBuild/double_check_if_image_is_present_-_failure
[90m[components/image-builder-mk3:app] [0m    orchestrator_test.go:53: StartWorkspace called
[90m[components/image-builder-mk3:app] [0mtime="2023-05-15T09:20:04Z" level=error msg="image build done failed for user" UserID=
[90m[components/image-builder-mk3:app] [0m=== RUN   TestBuild/double_check_if_image_is_present_-_success
[90m[components/image-builder-mk3:app] [0m--- PASS: TestBuild (1.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestBuild/validate_request_-_no_build_source (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestBuild/double_check_if_image_is_present_-_failure (1.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestBuild/double_check_if_image_is_present_-_success (0.00s)
[90m[components/image-builder-mk3:app] [0m=== RUN   TestResolveBaseImage
[90m[components/image-builder-mk3:app] [0m=== RUN   TestResolveBaseImage/not_found
[90m[components/image-builder-mk3:app] [0m=== RUN   TestResolveBaseImage/not_authenticated
[90m[components/image-builder-mk3:app] [0m--- PASS: TestResolveBaseImage (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestResolveBaseImage/not_found (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestResolveBaseImage/not_authenticated (0.00s)
[90m[components/image-builder-mk3:app] [0mPASS
[90m[components/image-builder-mk3:app] [0mok  	github.com/gitpod-io/gitpod/image-builder/pkg/orchestrator	1.027s
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/basic_resolve
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/with-port
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/with-broken-index
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/with-working-index
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/not_authorized
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/not_found
[90m[components/image-builder-mk3:app] [0m=== RUN   TestStandaloneRefResolverResolve/familiar_name
[90m[components/image-builder-mk3:app] [0m--- PASS: TestStandaloneRefResolverResolve (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/basic_resolve (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/with-port (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/with-broken-index (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/with-working-index (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/not_authorized (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/not_found (0.00s)
[90m[components/image-builder-mk3:app] [0m    --- PASS: TestStandaloneRefResolverResolve/familiar_name (0.00s)
[90m[components/image-builder-mk3:app] [0mPASS
[90m[components/image-builder-mk3:app] [0mok  	github.com/gitpod-io/gitpod/image-builder/pkg/resolve	0.016s
[90m[components/image-builder-mk3:app] [0m[0;32mpackage build succeded[0m [0;90m(16.26s)[0m
[90m[components/image-builder-mk3:docker] [0m[33mbuild started[0m [0;90m(version 9b43539fbd85eeabcb9e8019d9c60ccab39db8fa)[0m
[90m[components/image-builder-mk3:docker] [0m#1 [internal] load .dockerignore
[90m[components/image-builder-mk3:docker] [0m#1 transferring context: 2B done
[90m[components/image-builder-mk3:docker] [0m#1 DONE 0.0s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/image-builder-mk3:docker] [0m#2 transferring dockerfile: 740B done
[90m[components/image-builder-mk3:docker] [0m#2 DONE 0.0s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/image-builder-mk3:docker] [0m#3 DONE 1.1s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#4 [1/4] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/image-builder-mk3:docker] [0m#4 DONE 0.0s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#5 [internal] load build context
[90m[components/image-builder-mk3:docker] [0m#5 transferring context: 15.10MB 0.2s done
[90m[components/image-builder-mk3:docker] [0m#5 DONE 0.2s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#6 [2/4] RUN apk upgrade --no-cache   && apk add --no-cache git bash ca-certificates
[90m[components/image-builder-mk3:docker] [0m#6 CACHED
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#7 [3/4] COPY components-image-builder-mk3--app/image-builder /app/
[90m[components/image-builder-mk3:docker] [0m#7 DONE 3.9s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#8 [4/4] RUN chmod +x /app/image-builder
[90m[components/image-builder-mk3:docker] [0m#8 DONE 1.1s
[90m[components/image-builder-mk3:docker] [0m
[90m[components/image-builder-mk3:docker] [0m#9 exporting to image
[90m[components/image-builder-mk3:docker] [0m#9 exporting layers 0.1s done
[90m[components/image-builder-mk3:docker] [0m#9 writing image sha256:096d47c131c42f0b8dc7002068e90601d27283dd4ae13713219f71a3102ea274 done
[90m[components/image-builder-mk3:docker] [0m#9 naming to docker.io/library/9b43539fbd85eeabcb9e8019d9c60ccab39db8fa done
[90m[components/image-builder-mk3:docker] [0m#9 DONE 0.1s
[90m[components/image-builder-mk3:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/image-builder-mk3]
[90m[components/image-builder-mk3:docker] [0m009581b38d7b: Preparing
[90m[components/image-builder-mk3:docker] [0mfbfdc9707d91: Preparing
[90m[components/image-builder-mk3:docker] [0md025280b9d60: Preparing
[90m[components/image-builder-mk3:docker] [0m099cf1c15629: Preparing
[90m[components/image-builder-mk3:docker] [0m099cf1c15629: Layer already exists
[90m[components/image-builder-mk3:docker] [0md025280b9d60: Layer already exists
[90m[components/image-builder-mk3:docker] [0mfbfdc9707d91: Pushed
[90m[components/image-builder-mk3:docker] [0m009581b38d7b: Pushed
[90m[components/image-builder-mk3:docker] [0m20230515: digest: sha256:fc11ec73f281fe0365185aa071d60041a3ace4c51577ad83f3ff94d36c7f2ead size: 1161
[90m[components/image-builder-mk3:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/image-builder-mk3]
[90m[components/image-builder-mk3:docker] [0m009581b38d7b: Preparing
[90m[components/image-builder-mk3:docker] [0mfbfdc9707d91: Preparing
[90m[components/image-builder-mk3:docker] [0md025280b9d60: Preparing
[90m[components/image-builder-mk3:docker] [0m099cf1c15629: Preparing
[90m[components/image-builder-mk3:docker] [0mfbfdc9707d91: Layer already exists
[90m[components/image-builder-mk3:docker] [0md025280b9d60: Layer already exists
[90m[components/image-builder-mk3:docker] [0m099cf1c15629: Layer already exists
[90m[components/image-builder-mk3:docker] [0m009581b38d7b: Layer already exists
[90m[components/image-builder-mk3:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-9b43539fbd85eeabcb9e8019d9c60ccab39db8fa: digest: sha256:fc11ec73f281fe0365185aa071d60041a3ace4c51577ad83f3ff94d36c7f2ead size: 1161
[90m[components/image-builder-mk3:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/image-builder-mk3:20230515
[90m[components/image-builder-mk3:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/image-builder-mk3:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-9b43539fbd85eeabcb9e8019d9c60ccab39db8fa
[90m[components/image-builder-mk3:docker] [0m[0;32mpackage build succeded[0m [0;90m(31.49s)[0m

[0;32mbuild succeded[0m
leeway build components/installation-telemetry:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[33mðŸ”§  build[0m           components/installation-telemetry:app     [90m(version c4e2328029bfc7b13a3fa8c355bead4afc6658cf)[0m
[33mðŸ”§  build[0m           components/installation-telemetry:docker  [90m(version e2ed36a655bc90b5e54777b1e0005a822717913a)[0m

[0;31mbuild failed[0m
[1;37mReason:[0m cannot build with unresolved argument "${SEGMENT_IO_TOKEN}": use -DSEGMENT_IO_TOKEN=value to set the argument
	${SEGMENT_IO_TOKEN} appears in components/installation-telemetry:app


time="2023-05-15T09:20:45Z" level=fatal msg="cannot build with unresolved argument \"${SEGMENT_IO_TOKEN}\": use -DSEGMENT_IO_TOKEN=value to set the argument\n\t${SEGMENT_IO_TOKEN} appears in components/installation-telemetry:app\n\n"
leeway build components/ipfs/ipfs-cluster:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/ipfs/ipfs-cluster:docker  [90m(version edf450c003c03b41c4cb55233196177818c9d88b)[0m

[90m[components/ipfs/ipfs-cluster:docker] [0m[33mbuild started[0m [0;90m(version edf450c003c03b41c4cb55233196177818c9d88b)[0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#1 [internal] load .dockerignore
[90m[components/ipfs/ipfs-cluster:docker] [0m#1 transferring context: 2B done
[90m[components/ipfs/ipfs-cluster:docker] [0m#1 DONE 0.0s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/ipfs/ipfs-cluster:docker] [0m#2 transferring dockerfile: 639B done
[90m[components/ipfs/ipfs-cluster:docker] [0m#2 DONE 0.0s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#3 [internal] load metadata for docker.io/library/alpine:latest
[90m[components/ipfs/ipfs-cluster:docker] [0m#3 ...
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#4 [internal] load metadata for docker.io/ipfs/ipfs-cluster:1.0.4
[90m[components/ipfs/ipfs-cluster:docker] [0m#4 DONE 1.8s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#3 [internal] load metadata for docker.io/library/alpine:latest
[90m[components/ipfs/ipfs-cluster:docker] [0m#3 DONE 2.3s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#5 [dependencies 1/4] FROM docker.io/library/alpine@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11
[90m[components/ipfs/ipfs-cluster:docker] [0m#5 DONE 0.0s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#6 [stage-1 1/3] FROM docker.io/ipfs/ipfs-cluster:1.0.4@sha256:7c663dbb2c9354b59c13eec8fd7d8b49027b4b2ee7580f74e843a464f39ac6ea
[90m[components/ipfs/ipfs-cluster:docker] [0m#6 DONE 0.0s
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#7 [stage-1 2/3] COPY --from=dependencies /jq /usr/bin/jq
[90m[components/ipfs/ipfs-cluster:docker] [0m#7 CACHED
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#8 [dependencies 2/4] RUN apk add -U wget
[90m[components/ipfs/ipfs-cluster:docker] [0m#8 CACHED
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#9 [dependencies 3/4] RUN wget -O /jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64     && chmod +x /jq
[90m[components/ipfs/ipfs-cluster:docker] [0m#9 CACHED
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#10 [dependencies 4/4] RUN wget -O /kubectl https://dl.k8s.io/release/v1.24.3/bin/linux/amd64/kubectl     && chmod +x /kubectl
[90m[components/ipfs/ipfs-cluster:docker] [0m#10 CACHED
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#11 [stage-1 3/3] COPY --from=dependencies /kubectl /usr/bin/kubectl
[90m[components/ipfs/ipfs-cluster:docker] [0m#11 CACHED
[90m[components/ipfs/ipfs-cluster:docker] [0m
[90m[components/ipfs/ipfs-cluster:docker] [0m#12 exporting to image
[90m[components/ipfs/ipfs-cluster:docker] [0m#12 exporting layers done
[90m[components/ipfs/ipfs-cluster:docker] [0m#12 writing image sha256:5d34b2dedcbf9c96cacb41cf60f6ff740c115a2cf815dff384b283996c1a9cbb done
[90m[components/ipfs/ipfs-cluster:docker] [0m#12 naming to docker.io/library/edf450c003c03b41c4cb55233196177818c9d88b done
[90m[components/ipfs/ipfs-cluster:docker] [0m#12 DONE 0.0s
[90m[components/ipfs/ipfs-cluster:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ipfs-ipfs-cluster]
[90m[components/ipfs/ipfs-cluster:docker] [0m222cdfb90bf9: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m48f9c8e7ca99: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0mdf27b52db6d0: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0mcb1165ae2271: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m75ac036598b7: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m1c43171bfde4: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0md2b10225b327: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m1025a9d09de1: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m05bf92b5da50: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0md761ae9038db: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0mf623f0de17a0: Preparing
[90m[components/ipfs/ipfs-cluster:docker] [0m1025a9d09de1: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0m05bf92b5da50: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0md761ae9038db: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0mf623f0de17a0: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0m1c43171bfde4: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0md2b10225b327: Waiting
[90m[components/ipfs/ipfs-cluster:docker] [0m222cdfb90bf9: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0mcb1165ae2271: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0mdf27b52db6d0: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0m75ac036598b7: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0m48f9c8e7ca99: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0m1c43171bfde4: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0md2b10225b327: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0m05bf92b5da50: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0m1025a9d09de1: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0md761ae9038db: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0mf623f0de17a0: Layer already exists
[90m[components/ipfs/ipfs-cluster:docker] [0mv1.0.4: digest: sha256:180526d1d48df74886f810a0ae3797f45298c2c3e39d59694e4dc788626fda1e size: 2631
[90m[components/ipfs/ipfs-cluster:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ipfs-ipfs-cluster:v1.0.4
[90m[components/ipfs/ipfs-cluster:docker] [0m[0;32mpackage build succeded[0m [0;90m(10.29s)[0m

[0;32mbuild succeded[0m
leeway build components/ipfs/kubo:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/ipfs/kubo:docker  [90m(version c7b3a00392761db3da6e6e79d34e83d54327666a)[0m

[90m[components/ipfs/kubo:docker] [0m[33mbuild started[0m [0;90m(version c7b3a00392761db3da6e6e79d34e83d54327666a)[0m
[90m[components/ipfs/kubo:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/ipfs/kubo:docker] [0m#1 transferring dockerfile: 473B done
[90m[components/ipfs/kubo:docker] [0m#1 DONE 0.0s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#2 [internal] load .dockerignore
[90m[components/ipfs/kubo:docker] [0m#2 transferring context: 2B done
[90m[components/ipfs/kubo:docker] [0m#2 DONE 0.0s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#3 [internal] load metadata for docker.io/library/alpine:latest
[90m[components/ipfs/kubo:docker] [0m#3 DONE 0.8s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#4 [internal] load metadata for docker.io/ipfs/kubo:v0.17.0
[90m[components/ipfs/kubo:docker] [0m#4 DONE 1.7s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#5 [stage-1 1/2] FROM docker.io/ipfs/kubo:v0.17.0@sha256:803fac58ba15bd763b97a1ce17bca57f75348f2088d384a908b77e8540f35560
[90m[components/ipfs/kubo:docker] [0m#5 DONE 0.0s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#6 [dependencies 1/3] FROM docker.io/library/alpine@sha256:02bb6f428431fbc2809c5d1b41eab5a68350194fb508869a33cb1af4444c9b11
[90m[components/ipfs/kubo:docker] [0m#6 DONE 0.0s
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#7 [dependencies 2/3] RUN apk add -U wget
[90m[components/ipfs/kubo:docker] [0m#7 CACHED
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#8 [dependencies 3/3] RUN wget -O /jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64     && chmod +x /jq
[90m[components/ipfs/kubo:docker] [0m#8 CACHED
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#9 [stage-1 2/2] COPY --from=dependencies /jq /usr/bin/jq
[90m[components/ipfs/kubo:docker] [0m#9 CACHED
[90m[components/ipfs/kubo:docker] [0m
[90m[components/ipfs/kubo:docker] [0m#10 exporting to image
[90m[components/ipfs/kubo:docker] [0m#10 exporting layers done
[90m[components/ipfs/kubo:docker] [0m#10 writing image sha256:2fe670a895cf99dc6cf6b4c6098d1b2c2be68a4bc23e300abd255af96eacc667 done
[90m[components/ipfs/kubo:docker] [0m#10 naming to docker.io/library/c7b3a00392761db3da6e6e79d34e83d54327666a done
[90m[components/ipfs/kubo:docker] [0m#10 DONE 0.0s
[90m[components/ipfs/kubo:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ipfs-kubo]
[90m[components/ipfs/kubo:docker] [0m474437fd4a26: Preparing
[90m[components/ipfs/kubo:docker] [0m0740f3bf1deb: Preparing
[90m[components/ipfs/kubo:docker] [0mbfe36aee5682: Preparing
[90m[components/ipfs/kubo:docker] [0m57d049d882e2: Preparing
[90m[components/ipfs/kubo:docker] [0m8e1ddbb58f39: Preparing
[90m[components/ipfs/kubo:docker] [0m3322b944efa8: Preparing
[90m[components/ipfs/kubo:docker] [0m7b00320ffbbc: Preparing
[90m[components/ipfs/kubo:docker] [0m5f70bf18a086: Preparing
[90m[components/ipfs/kubo:docker] [0m9e9c9d4d9abd: Preparing
[90m[components/ipfs/kubo:docker] [0mf8a44b27d32b: Preparing
[90m[components/ipfs/kubo:docker] [0m1ea7f166226d: Preparing
[90m[components/ipfs/kubo:docker] [0m7ccc4b0408c7: Preparing
[90m[components/ipfs/kubo:docker] [0m50fcc725f539: Preparing
[90m[components/ipfs/kubo:docker] [0mc3710b44f1b0: Preparing
[90m[components/ipfs/kubo:docker] [0m7b00320ffbbc: Waiting
[90m[components/ipfs/kubo:docker] [0mfc5c707294d1: Preparing
[90m[components/ipfs/kubo:docker] [0m5f70bf18a086: Waiting
[90m[components/ipfs/kubo:docker] [0mc3147d6b31b2: Preparing
[90m[components/ipfs/kubo:docker] [0m9e9c9d4d9abd: Waiting
[90m[components/ipfs/kubo:docker] [0mfd023253ad0b: Preparing
[90m[components/ipfs/kubo:docker] [0m7ccc4b0408c7: Waiting
[90m[components/ipfs/kubo:docker] [0m50fcc725f539: Waiting
[90m[components/ipfs/kubo:docker] [0mc3710b44f1b0: Waiting
[90m[components/ipfs/kubo:docker] [0mf8a44b27d32b: Waiting
[90m[components/ipfs/kubo:docker] [0m1ea7f166226d: Waiting
[90m[components/ipfs/kubo:docker] [0mfc5c707294d1: Waiting
[90m[components/ipfs/kubo:docker] [0mc3147d6b31b2: Waiting
[90m[components/ipfs/kubo:docker] [0mfd023253ad0b: Waiting
[90m[components/ipfs/kubo:docker] [0m3322b944efa8: Waiting
[90m[components/ipfs/kubo:docker] [0m0740f3bf1deb: Layer already exists
[90m[components/ipfs/kubo:docker] [0m474437fd4a26: Layer already exists
[90m[components/ipfs/kubo:docker] [0m57d049d882e2: Layer already exists
[90m[components/ipfs/kubo:docker] [0mbfe36aee5682: Layer already exists
[90m[components/ipfs/kubo:docker] [0m8e1ddbb58f39: Layer already exists
[90m[components/ipfs/kubo:docker] [0m3322b944efa8: Layer already exists
[90m[components/ipfs/kubo:docker] [0m5f70bf18a086: Layer already exists
[90m[components/ipfs/kubo:docker] [0m7b00320ffbbc: Layer already exists
[90m[components/ipfs/kubo:docker] [0m9e9c9d4d9abd: Layer already exists
[90m[components/ipfs/kubo:docker] [0mf8a44b27d32b: Layer already exists
[90m[components/ipfs/kubo:docker] [0m50fcc725f539: Layer already exists
[90m[components/ipfs/kubo:docker] [0m1ea7f166226d: Layer already exists
[90m[components/ipfs/kubo:docker] [0m7ccc4b0408c7: Layer already exists
[90m[components/ipfs/kubo:docker] [0mc3710b44f1b0: Layer already exists
[90m[components/ipfs/kubo:docker] [0mfc5c707294d1: Layer already exists
[90m[components/ipfs/kubo:docker] [0mc3147d6b31b2: Layer already exists
[90m[components/ipfs/kubo:docker] [0mfd023253ad0b: Layer already exists
[90m[components/ipfs/kubo:docker] [0mv0.17.0: digest: sha256:7000eccd87e0c4c5662b009dc62bb074dd03fafb7cfcb1f3ba75f5b0fe2ccf1d size: 3867
[90m[components/ipfs/kubo:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ipfs-kubo:v0.17.0
[90m[components/ipfs/kubo:docker] [0m[0;32mpackage build succeded[0m [0;90m(10.19s)[0m

[0;32mbuild succeded[0m
leeway build components/kots-config-check/certificate:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/kots-config-check/certificate:docker  [90m(version f91a4b558b5f7c3657c270565abd89f2d4e44940)[0m

[90m[components/kots-config-check/certificate:docker] [0m[33mbuild started[0m [0;90m(version f91a4b558b5f7c3657c270565abd89f2d4e44940)[0m
[90m[components/kots-config-check/certificate:docker] [0m#1 [internal] load .dockerignore
[90m[components/kots-config-check/certificate:docker] [0m#1 transferring context: 2B done
[90m[components/kots-config-check/certificate:docker] [0m#1 DONE 0.0s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/kots-config-check/certificate:docker] [0m#2 transferring dockerfile: 424B done
[90m[components/kots-config-check/certificate:docker] [0m#2 DONE 0.0s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#3 [internal] load metadata for docker.io/alpine/openssl:latest
[90m[components/kots-config-check/certificate:docker] [0m#3 DONE 1.7s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#4 [internal] load metadata for docker.io/bitnami/kubectl:latest
[90m[components/kots-config-check/certificate:docker] [0m#4 DONE 2.5s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#5 [stage-0 1/4] FROM docker.io/alpine/openssl@sha256:cf89651f07a33d2faf4499f72e6f8b0ee2542cd40735d51c7e75b8965c17af0e
[90m[components/kots-config-check/certificate:docker] [0m#5 DONE 0.0s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#6 [internal] load build context
[90m[components/kots-config-check/certificate:docker] [0m#6 transferring context: 2.65kB done
[90m[components/kots-config-check/certificate:docker] [0m#6 DONE 0.0s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#7 FROM docker.io/bitnami/kubectl@sha256:aef49af4188f9542aef5f688227e963ec91b994b596608d176be89cc1e4d54f7
[90m[components/kots-config-check/certificate:docker] [0m#7 resolve docker.io/bitnami/kubectl@sha256:aef49af4188f9542aef5f688227e963ec91b994b596608d176be89cc1e4d54f7 done
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:aef49af4188f9542aef5f688227e963ec91b994b596608d176be89cc1e4d54f7 529B / 529B done
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:494157e89157e59759b5e1abe01335fe8e1a70fb9d703a2509f4540c8c30bd06 429B / 429B done
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:5e9d4cf927e21f51f99f9ec64eda94b3a7cebb66d4da9676081817f8f480fd2b 5.08kB / 5.08kB done
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 0B / 80.58MB 0.1s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 5.24MB / 80.58MB 0.3s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 18.87MB / 80.58MB 0.4s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 47.19MB / 80.58MB 0.6s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 59.77MB / 80.58MB 0.7s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 80.58MB / 80.58MB 0.9s
[90m[components/kots-config-check/certificate:docker] [0m#7 sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 80.58MB / 80.58MB 1.0s done
[90m[components/kots-config-check/certificate:docker] [0m#7 extracting sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc
[90m[components/kots-config-check/certificate:docker] [0m#7 extracting sha256:e931c775f77dbe6767ef09f68ccad2cdd15244caa144eef8f2a4dd68dc8aabbc 2.6s done
[90m[components/kots-config-check/certificate:docker] [0m#7 DONE 3.9s
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#8 [stage-0 3/4] COPY entrypoint.sh /entrypoint.sh
[90m[components/kots-config-check/certificate:docker] [0m#8 CACHED
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#9 [stage-0 2/4] COPY --from=bitnami/kubectl /opt/bitnami/kubectl/bin/kubectl /usr/local/bin/kubectl
[90m[components/kots-config-check/certificate:docker] [0m#9 CACHED
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#10 [stage-0 4/4] RUN apk add --no-cache bash
[90m[components/kots-config-check/certificate:docker] [0m#10 CACHED
[90m[components/kots-config-check/certificate:docker] [0m
[90m[components/kots-config-check/certificate:docker] [0m#11 exporting to image
[90m[components/kots-config-check/certificate:docker] [0m#11 exporting layers done
[90m[components/kots-config-check/certificate:docker] [0m#11 writing image sha256:65e0096a1c42ec2c5b31832d4c1ef01794dca9a0270de3035da41546f17d1d77 done
[90m[components/kots-config-check/certificate:docker] [0m#11 naming to docker.io/library/f91a4b558b5f7c3657c270565abd89f2d4e44940 done
[90m[components/kots-config-check/certificate:docker] [0m#11 DONE 0.0s
[90m[components/kots-config-check/certificate:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-certificate]
[90m[components/kots-config-check/certificate:docker] [0m3ee0f1179146: Preparing
[90m[components/kots-config-check/certificate:docker] [0m56ebbca95d56: Preparing
[90m[components/kots-config-check/certificate:docker] [0mbcf70b99341e: Preparing
[90m[components/kots-config-check/certificate:docker] [0m6b38f8aa6834: Preparing
[90m[components/kots-config-check/certificate:docker] [0m50644c29ef5a: Preparing
[90m[components/kots-config-check/certificate:docker] [0m56ebbca95d56: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m50644c29ef5a: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m6b38f8aa6834: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0mbcf70b99341e: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m3ee0f1179146: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m20230515: digest: sha256:dec4007f2d56b9f8339dcb99e67104ed3c91dcb26b948aab2415959224f648ed size: 1369
[90m[components/kots-config-check/certificate:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-certificate]
[90m[components/kots-config-check/certificate:docker] [0m3ee0f1179146: Preparing
[90m[components/kots-config-check/certificate:docker] [0m56ebbca95d56: Preparing
[90m[components/kots-config-check/certificate:docker] [0mbcf70b99341e: Preparing
[90m[components/kots-config-check/certificate:docker] [0m6b38f8aa6834: Preparing
[90m[components/kots-config-check/certificate:docker] [0m50644c29ef5a: Preparing
[90m[components/kots-config-check/certificate:docker] [0m56ebbca95d56: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m3ee0f1179146: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m6b38f8aa6834: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0mbcf70b99341e: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0m50644c29ef5a: Layer already exists
[90m[components/kots-config-check/certificate:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:dec4007f2d56b9f8339dcb99e67104ed3c91dcb26b948aab2415959224f648ed size: 1369
[90m[components/kots-config-check/certificate:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-certificate:20230515
[90m[components/kots-config-check/certificate:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-certificate:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/kots-config-check/certificate:docker] [0m[0;32mpackage build succeded[0m [0;90m(25.11s)[0m

[0;32mbuild succeded[0m
leeway build components/kots-config-check/database:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/kots-config-check/database:docker  [90m(version 24d17c43c7c1fa4589cd665a3e510804046e2e8a)[0m

[90m[components/kots-config-check/database:docker] [0m[33mbuild started[0m [0;90m(version 24d17c43c7c1fa4589cd665a3e510804046e2e8a)[0m
[90m[components/kots-config-check/database:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/kots-config-check/database:docker] [0m#1 transferring dockerfile: 408B done
[90m[components/kots-config-check/database:docker] [0m#1 DONE 0.0s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#2 [internal] load .dockerignore
[90m[components/kots-config-check/database:docker] [0m#2 transferring context: 2B done
[90m[components/kots-config-check/database:docker] [0m#2 DONE 0.0s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#3 [internal] load metadata for docker.io/bitnami/mysql:5.7
[90m[components/kots-config-check/database:docker] [0m#3 ...
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#4 [internal] load metadata for gcr.io/cloudsql-docker/gce-proxy:latest
[90m[components/kots-config-check/database:docker] [0m#4 DONE 0.5s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#3 [internal] load metadata for docker.io/bitnami/mysql:5.7
[90m[components/kots-config-check/database:docker] [0m#3 DONE 2.8s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#5 [internal] load build context
[90m[components/kots-config-check/database:docker] [0m#5 transferring context: 2.04kB done
[90m[components/kots-config-check/database:docker] [0m#5 DONE 0.0s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#6 FROM gcr.io/cloudsql-docker/gce-proxy@sha256:cbd474b0424a86df61834e60e8be5bbf19d771a387a0e5bb5c4686507b23ef7f
[90m[components/kots-config-check/database:docker] [0m#6 CACHED
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#7 [stage-0 1/3] FROM docker.io/bitnami/mysql:5.7@sha256:864ae4213eddcb62609d85b56fee52fde543ab504a5edaea502ed641a268dd36
[90m[components/kots-config-check/database:docker] [0m#7 resolve docker.io/bitnami/mysql:5.7@sha256:864ae4213eddcb62609d85b56fee52fde543ab504a5edaea502ed641a268dd36 done
[90m[components/kots-config-check/database:docker] [0m#7 sha256:8b3a8bc59361048c08b4b817dbea679f47e338a2992cff4ac2be1806fa074c71 6.01kB / 6.01kB done
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 0B / 97.29MB 0.1s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:864ae4213eddcb62609d85b56fee52fde543ab504a5edaea502ed641a268dd36 529B / 529B done
[90m[components/kots-config-check/database:docker] [0m#7 sha256:8decf631a29e58a75896ad82209725a9f7499917ca86ea57418f78b359bae4d9 429B / 429B done
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 5.24MB / 97.29MB 1.0s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 13.63MB / 97.29MB 1.3s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 19.92MB / 97.29MB 1.4s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 25.17MB / 97.29MB 1.5s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 34.60MB / 97.29MB 1.6s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 55.57MB / 97.29MB 1.8s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 75.50MB / 97.29MB 2.0s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 91.36MB / 97.29MB 2.1s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 97.29MB / 97.29MB 2.2s
[90m[components/kots-config-check/database:docker] [0m#7 sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 97.29MB / 97.29MB 2.4s done
[90m[components/kots-config-check/database:docker] [0m#7 extracting sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce
[90m[components/kots-config-check/database:docker] [0m#7 extracting sha256:3ee1800ca7d68ebbe1c773b2337e1bfabfd65f9b526d26fc1171cb7c2a2349ce 2.9s done
[90m[components/kots-config-check/database:docker] [0m#7 DONE 5.5s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#8 [stage-0 2/3] COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy /usr/local/bin/cloud_sql_proxy
[90m[components/kots-config-check/database:docker] [0m#8 DONE 1.1s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#9 [stage-0 3/3] COPY entrypoint.sh /entrypoint.sh
[90m[components/kots-config-check/database:docker] [0m#9 DONE 0.0s
[90m[components/kots-config-check/database:docker] [0m
[90m[components/kots-config-check/database:docker] [0m#10 exporting to image
[90m[components/kots-config-check/database:docker] [0m#10 exporting layers
[90m[components/kots-config-check/database:docker] [0m#10 exporting layers 0.2s done
[90m[components/kots-config-check/database:docker] [0m#10 writing image sha256:3f5444d3c0adc924223768f0dfe38dbc168f19ea927dfea916ce8b83f174b50c done
[90m[components/kots-config-check/database:docker] [0m#10 naming to docker.io/library/24d17c43c7c1fa4589cd665a3e510804046e2e8a done
[90m[components/kots-config-check/database:docker] [0m#10 DONE 0.2s
[90m[components/kots-config-check/database:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-database]
[90m[components/kots-config-check/database:docker] [0m35b94e886238: Preparing
[90m[components/kots-config-check/database:docker] [0mddb768afd7cc: Preparing
[90m[components/kots-config-check/database:docker] [0me3eddf67b2b1: Preparing
[90m[components/kots-config-check/database:docker] [0m35b94e886238: Pushed
[90m[components/kots-config-check/database:docker] [0mddb768afd7cc: Pushed
[90m[components/kots-config-check/database:docker] [0me3eddf67b2b1: Pushed
[90m[components/kots-config-check/database:docker] [0m20230515: digest: sha256:6e1abb8d7a5007909c88968b06524de24fb67d5f2760831537b91099ae22aa61 size: 948
[90m[components/kots-config-check/database:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-database]
[90m[components/kots-config-check/database:docker] [0m35b94e886238: Preparing
[90m[components/kots-config-check/database:docker] [0mddb768afd7cc: Preparing
[90m[components/kots-config-check/database:docker] [0me3eddf67b2b1: Preparing
[90m[components/kots-config-check/database:docker] [0mddb768afd7cc: Layer already exists
[90m[components/kots-config-check/database:docker] [0me3eddf67b2b1: Layer already exists
[90m[components/kots-config-check/database:docker] [0m35b94e886238: Layer already exists
[90m[components/kots-config-check/database:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:6e1abb8d7a5007909c88968b06524de24fb67d5f2760831537b91099ae22aa61 size: 948
[90m[components/kots-config-check/database:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-database:20230515
[90m[components/kots-config-check/database:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-database:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/kots-config-check/database:docker] [0m[0;32mpackage build succeded[0m [0;90m(52.54s)[0m

[0;32mbuild succeded[0m
leeway build components/kots-config-check/registry:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/kots-config-check/registry:app     [90m(version 1e187ff6985a1cf0e82199aef6a9a3a58f17d5a0)[0m
[33mðŸ”§  build[0m  components/kots-config-check/registry:docker  [90m(version 17742d58c72aef3d4b93eff3159607d0be7c819d)[0m

[90m[components/kots-config-check/registry:app] [0m[33mbuild started[0m [0;90m(version 1e187ff6985a1cf0e82199aef6a9a3a58f17d5a0)[0m
[90m[components/kots-config-check/registry:app] [0m?   	github.com/gitpod-io/gitpod/kots-config-check/registry	[no test files]
[90m[components/kots-config-check/registry:app] [0m?   	github.com/gitpod-io/gitpod/kots-config-check/registry/cmd	[no test files]
[90m[components/kots-config-check/registry:app] [0m[0;32mpackage build succeded[0m [0;90m(4.95s)[0m
[90m[components/kots-config-check/registry:docker] [0m[33mbuild started[0m [0;90m(version 17742d58c72aef3d4b93eff3159607d0be7c819d)[0m
[90m[components/kots-config-check/registry:docker] [0m#1 [internal] load .dockerignore
[90m[components/kots-config-check/registry:docker] [0m#1 transferring context: 2B done
[90m[components/kots-config-check/registry:docker] [0m#1 DONE 0.0s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/kots-config-check/registry:docker] [0m#2 transferring dockerfile: 645B 0.0s done
[90m[components/kots-config-check/registry:docker] [0m#2 DONE 0.0s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#3 [internal] load metadata for eu.gcr.io/gitpod-core-dev/build/kots-config-check/storage:sje-kots-registry-check.9
[90m[components/kots-config-check/registry:docker] [0m#3 DONE 0.9s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#4 [1/4] FROM eu.gcr.io/gitpod-core-dev/build/kots-config-check/storage:sje-kots-registry-check.9@sha256:bccccd370b12c279e16ace3062eabb6720b3cf8fb1db32745798e29d173e23c6
[90m[components/kots-config-check/registry:docker] [0m#4 DONE 0.0s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#5 [internal] load build context
[90m[components/kots-config-check/registry:docker] [0m#5 transferring context: 6.65MB 0.1s done
[90m[components/kots-config-check/registry:docker] [0m#5 DONE 0.8s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#6 [2/4] RUN apk add --no-cache bash     && mv /entrypoint.sh /storage.sh
[90m[components/kots-config-check/registry:docker] [0m#6 CACHED
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#7 [3/4] COPY components-kots-config-check-registry--app components-kots-config-check-registry--app/provenance-bundle.jsonl /app/
[90m[components/kots-config-check/registry:docker] [0m#7 DONE 3.2s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#8 [4/4] COPY entrypoint.sh /entrypoint.sh
[90m[components/kots-config-check/registry:docker] [0m#8 DONE 0.0s
[90m[components/kots-config-check/registry:docker] [0m
[90m[components/kots-config-check/registry:docker] [0m#9 exporting to image
[90m[components/kots-config-check/registry:docker] [0m#9 exporting layers 0.1s done
[90m[components/kots-config-check/registry:docker] [0m#9 writing image sha256:c30285a25b62f08ac9e06b1514b15e3f27e09b5fe265c09ebf78283c1f8dfe47 done
[90m[components/kots-config-check/registry:docker] [0m#9 naming to docker.io/library/17742d58c72aef3d4b93eff3159607d0be7c819d done
[90m[components/kots-config-check/registry:docker] [0m#9 DONE 0.1s
[90m[components/kots-config-check/registry:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-registry]
[90m[components/kots-config-check/registry:docker] [0md6d83cc94246: Preparing
[90m[components/kots-config-check/registry:docker] [0mff4f6f3d21e5: Preparing
[90m[components/kots-config-check/registry:docker] [0m873717dc483b: Preparing
[90m[components/kots-config-check/registry:docker] [0me3ccdc75981e: Preparing
[90m[components/kots-config-check/registry:docker] [0m5e767646fad6: Preparing
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Preparing
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Preparing
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Preparing
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Preparing
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Preparing
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Preparing
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Preparing
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Preparing
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Preparing
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Preparing
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Preparing
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Preparing
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Preparing
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Waiting
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Waiting
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Waiting
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Waiting
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Waiting
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Waiting
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Waiting
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Waiting
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Waiting
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Waiting
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Waiting
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Waiting
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Waiting
[90m[components/kots-config-check/registry:docker] [0m873717dc483b: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m5e767646fad6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0me3ccdc75981e: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Layer already exists
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Layer already exists
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Layer already exists
[90m[components/kots-config-check/registry:docker] [0md6d83cc94246: Pushed
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mff4f6f3d21e5: Pushed
[90m[components/kots-config-check/registry:docker] [0m20230515: digest: sha256:3eff6e07382465ea00874a048bdc4e573666aac5e58bb29dc245ebe529289e3c size: 4101
[90m[components/kots-config-check/registry:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-registry]
[90m[components/kots-config-check/registry:docker] [0md6d83cc94246: Preparing
[90m[components/kots-config-check/registry:docker] [0mff4f6f3d21e5: Preparing
[90m[components/kots-config-check/registry:docker] [0m873717dc483b: Preparing
[90m[components/kots-config-check/registry:docker] [0me3ccdc75981e: Preparing
[90m[components/kots-config-check/registry:docker] [0m5e767646fad6: Preparing
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Preparing
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Preparing
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Preparing
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Preparing
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Preparing
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Preparing
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Preparing
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Preparing
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Preparing
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Preparing
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Preparing
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Preparing
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Preparing
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Waiting
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Waiting
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Waiting
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Waiting
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Waiting
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Waiting
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Waiting
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Waiting
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Waiting
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Waiting
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Waiting
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Waiting
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Waiting
[90m[components/kots-config-check/registry:docker] [0m5e767646fad6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0md6d83cc94246: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mff4f6f3d21e5: Layer already exists
[90m[components/kots-config-check/registry:docker] [0me3ccdc75981e: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m769e76475bf6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m7be67b3d81de: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m70e2c19854b8: Layer already exists
[90m[components/kots-config-check/registry:docker] [0ma095572228e9: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m09710b57f081: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m434744e1c2d6: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m873717dc483b: Layer already exists
[90m[components/kots-config-check/registry:docker] [0md67233da32b7: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mfa915280df7c: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m0b800261971d: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m25305df4a097: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m16e3ab2d4dee: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mfbd7d5451c69: Layer already exists
[90m[components/kots-config-check/registry:docker] [0m4fc242d58285: Layer already exists
[90m[components/kots-config-check/registry:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:3eff6e07382465ea00874a048bdc4e573666aac5e58bb29dc245ebe529289e3c size: 4101
[90m[components/kots-config-check/registry:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-registry:20230515
[90m[components/kots-config-check/registry:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/kots-config-check-registry:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/kots-config-check/registry:docker] [0m[0;32mpackage build succeded[0m [0;90m(26.59s)[0m

[0;32mbuild succeded[0m
leeway build components/kots-config-check/storage:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/kots-config-check/storage:docker  [90m(version 872b715bf4b2965908bc62bd3ade2e570fec8879)[0m

[90m[components/kots-config-check/storage:docker] [0m[33mbuild started[0m [0;90m(version 872b715bf4b2965908bc62bd3ade2e570fec8879)[0m
[90m[components/kots-config-check/storage:docker] [0m#1 [internal] load .dockerignore
[90m[components/kots-config-check/storage:docker] [0m#1 transferring context: 2B done
[90m[components/kots-config-check/storage:docker] [0m#1 DONE 0.0s
[90m[components/kots-config-check/storage:docker] [0m
[90m[components/kots-config-check/storage:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/kots-config-check/storage:docker] [0m#2 transferring dockerfile: 533B done
[90m[components/kots-config-check/storage:docker] [0m#2 DONE 0.0s
[90m[components/kots-config-check/storage:docker] [0m
[90m[components/kots-config-check/storage:docker] [0m#3 [internal] load metadata for mcr.microsoft.com/azure-cli:latest
[90m[components/kots-config-check/storage:docker] [0m#3 ERROR: failed to do request: Head "https://mcr.microsoft.com/v2/azure-cli/manifests/latest": dial tcp: lookup mcr.microsoft.com: Temporary failure in name resolution
[90m[components/kots-config-check/storage:docker] [0m
[90m[components/kots-config-check/storage:docker] [0m#4 [internal] load metadata for docker.io/minio/mc:latest
[90m[components/kots-config-check/storage:docker] [0m#4 ERROR: failed to do request: Head "https://registry-1.docker.io/v2/minio/mc/manifests/latest": dial tcp: lookup registry-1.docker.io: Temporary failure in name resolution
[90m[components/kots-config-check/storage:docker] [0m------
[90m[components/kots-config-check/storage:docker] [0m > [internal] load metadata for docker.io/minio/mc:latest:
[90m[components/kots-config-check/storage:docker] [0m------
[90m[components/kots-config-check/storage:docker] [0m------
[90m[components/kots-config-check/storage:docker] [0m > [internal] load metadata for mcr.microsoft.com/azure-cli:latest:
[90m[components/kots-config-check/storage:docker] [0m------
[90m[components/kots-config-check/storage:docker] [0mDockerfile:5
[90m[components/kots-config-check/storage:docker] [0m--------------------
[90m[components/kots-config-check/storage:docker] [0m   3 |     # See License.AGPL.txt in the project root for license information.
[90m[components/kots-config-check/storage:docker] [0m   4 |     
[90m[components/kots-config-check/storage:docker] [0m   5 | >>> FROM mcr.microsoft.com/azure-cli
[90m[components/kots-config-check/storage:docker] [0m   6 |     RUN apk add --no-cache bash curl python3
[90m[components/kots-config-check/storage:docker] [0m   7 |     # GSUtil
[90m[components/kots-config-check/storage:docker] [0m--------------------
[90m[components/kots-config-check/storage:docker] [0mERROR: failed to solve: mcr.microsoft.com/azure-cli: failed to do request: Head "https://mcr.microsoft.com/v2/azure-cli/manifests/latest": dial tcp: lookup mcr.microsoft.com: Temporary failure in name resolution
[90m[components/kots-config-check/storage:docker] [0m[0;31mpackage build failed[0m
[90m[components/kots-config-check/storage:docker] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:23:01Z" level=fatal msg="build failed"
leeway build components/local-app:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib          [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/local-app-api/go:lib           [90m(version a7dffae2a5acd72984d8c017d1edc73bb130e8cb)[0m
[33mðŸ”§  build[0m           components/local-app:app                  [90m(version 60423782a4676bdcc42a27925efe34c35e486c1e)[0m
[33mðŸ”§  build[0m           components/local-app:app-darwin-amd64     [90m(version b801b06af13534f03f3930ca4b703aec97e2eb3f)[0m
[33mðŸ”§  build[0m           components/local-app:app-darwin-arm64     [90m(version 32a77d63f7cddee2e2d9027c512ded3ef72bd1c1)[0m
[33mðŸ”§  build[0m           components/local-app:app-linux-amd64      [90m(version 52605827eb222d32bb3fe9489372c2fd9f17eb17)[0m
[33mðŸ”§  build[0m           components/local-app:app-linux-arm64      [90m(version 9546f113bd2b1c1fab75e3bf458ed5307e90eea3)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-386      [90m(version 5a2bd787d407da0acc92c86c1ed37142bd734381)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-amd64    [90m(version cfcd10693b21789cd10f2700f5813bf026e1f4e0)[0m
[33mðŸ”§  build[0m           components/local-app:app-windows-arm64    [90m(version 3add8e08ba93f291c1d2622f2eae9c397bb6903c)[0m
[33mðŸ”§  build[0m           components/local-app:docker               [90m(version baeb5a0b9ad83be88776b6dc37026811468a2405)[0m

[90m[components/local-app-api/go:lib] [0m[33mbuild started[0m [0;90m(version a7dffae2a5acd72984d8c017d1edc73bb130e8cb)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/local-app-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/local-app/api	[no test files]
[90m[components/local-app-api/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(0.69s)[0m
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[90m[components/local-app:app-windows-arm64] [0m[33mbuild started[0m [0;90m(version 3add8e08ba93f291c1d2622f2eae9c397bb6903c)[0m
[90m[components/local-app:app-linux-arm64] [0m[33mbuild started[0m [0;90m(version 9546f113bd2b1c1fab75e3bf458ed5307e90eea3)[0m
[90m[components/local-app:app-darwin-arm64] [0m[33mbuild started[0m [0;90m(version 32a77d63f7cddee2e2d9027c512ded3ef72bd1c1)[0m
[90m[components/local-app:app-darwin-amd64] [0m[33mbuild started[0m [0;90m(version b801b06af13534f03f3930ca4b703aec97e2eb3f)[0m
[90m[components/local-app:app-windows-amd64] [0m[33mbuild started[0m [0;90m(version cfcd10693b21789cd10f2700f5813bf026e1f4e0)[0m
[90m[components/local-app:app-windows-386] [0m[33mbuild started[0m [0;90m(version 5a2bd787d407da0acc92c86c1ed37142bd734381)[0m
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:23:03Z" level=fatal msg="build failed"
leeway build components/node-labeler:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib        [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[33mðŸ”§  build[0m           components/node-labeler:app     [90m(version 7dcdc0ef3ab4af109c4356b1432eca6c80a7906f)[0m
[33mðŸ”§  build[0m           components/node-labeler:docker  [90m(version b6740d48fcf4e65883da7feaede9c9c360f07840)[0m

[90m[components/node-labeler:app] [0m[33mbuild started[0m [0;90m(version 7dcdc0ef3ab4af109c4356b1432eca6c80a7906f)[0m
[90m[components/node-labeler:app] [0m?   	github.com/gitpod-io/gitpod/node-labeler	[no test files]
[90m[components/node-labeler:app] [0m?   	github.com/gitpod-io/gitpod/node-labeler/cmd	[no test files]
[90m[components/node-labeler:app] [0m[0;32mpackage build succeded[0m [0;90m(75.16s)[0m
[90m[components/node-labeler:docker] [0m[33mbuild started[0m [0;90m(version b6740d48fcf4e65883da7feaede9c9c360f07840)[0m
[90m[components/node-labeler:docker] [0m#1 [internal] load .dockerignore
[90m[components/node-labeler:docker] [0m#1 transferring context: 2B done
[90m[components/node-labeler:docker] [0m#1 DONE 0.1s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/node-labeler:docker] [0m#2 transferring dockerfile: 573B done
[90m[components/node-labeler:docker] [0m#2 DONE 0.1s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/node-labeler:docker] [0m#3 DONE 0.0s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#4 [1/2] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/node-labeler:docker] [0m#4 DONE 0.0s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#5 [internal] load build context
[90m[components/node-labeler:docker] [0m#5 transferring context: 36.11MB 0.4s done
[90m[components/node-labeler:docker] [0m#5 DONE 0.5s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#4 [1/2] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/node-labeler:docker] [0m#4 CACHED
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#6 [2/2] COPY components-node-labeler--app/node-labeler /app/node-labeler
[90m[components/node-labeler:docker] [0m#6 DONE 1.0s
[90m[components/node-labeler:docker] [0m
[90m[components/node-labeler:docker] [0m#7 exporting to image
[90m[components/node-labeler:docker] [0m#7 exporting layers
[90m[components/node-labeler:docker] [0m#7 exporting layers 0.2s done
[90m[components/node-labeler:docker] [0m#7 writing image sha256:e60a21302f476ee1ceb728262e940e3b1784668476300d8e295e6402090ce824 done
[90m[components/node-labeler:docker] [0m#7 naming to docker.io/library/b6740d48fcf4e65883da7feaede9c9c360f07840 done
[90m[components/node-labeler:docker] [0m#7 DONE 0.2s
[90m[components/node-labeler:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/node-labeler]
[90m[components/node-labeler:docker] [0m07a99e86a820: Preparing
[90m[components/node-labeler:docker] [0m099cf1c15629: Preparing
[90m[components/node-labeler:docker] [0m099cf1c15629: Layer already exists
[90m[components/node-labeler:docker] [0m07a99e86a820: Pushed
[90m[components/node-labeler:docker] [0m20230515: digest: sha256:7fa3cb9df3007e2c5bc3f464ab58b07bab51fd2de59856c41ceb69236e85d6c0 size: 740
[90m[components/node-labeler:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/node-labeler]
[90m[components/node-labeler:docker] [0m07a99e86a820: Preparing
[90m[components/node-labeler:docker] [0m099cf1c15629: Preparing
[90m[components/node-labeler:docker] [0m07a99e86a820: Layer already exists
[90m[components/node-labeler:docker] [0m099cf1c15629: Layer already exists
[90m[components/node-labeler:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-b6740d48fcf4e65883da7feaede9c9c360f07840: digest: sha256:7fa3cb9df3007e2c5bc3f464ab58b07bab51fd2de59856c41ceb69236e85d6c0 size: 740
[90m[components/node-labeler:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/node-labeler:20230515
[90m[components/node-labeler:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/node-labeler:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-b6740d48fcf4e65883da7feaede9c9c360f07840
[90m[components/node-labeler:docker] [0m[0;32mpackage build succeded[0m [0;90m(23.17s)[0m

[0;32mbuild succeded[0m
leeway build components/openvsx-proxy:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib         [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[33mðŸ”§  build[0m           components/openvsx-proxy:app     [90m(version ba693c37ba3208fa12001797af11c7653af77fd4)[0m
[33mðŸ”§  build[0m           components/openvsx-proxy:docker  [90m(version a7077d232e47fdfb480e1982b55fb5e0d6a74aec)[0m

[90m[components/openvsx-proxy:app] [0m[33mbuild started[0m [0;90m(version ba693c37ba3208fa12001797af11c7653af77fd4)[0m
[90m[components/openvsx-proxy:app] [0m?   	github.com/gitpod-io/gitpod/openvsx-proxy	[no test files]
[90m[components/openvsx-proxy:app] [0m=== RUN   TestAddResponseToCache
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="processing response finished" duration="158.483Âµs" duration_human="158.483Âµs" func=response_handler request="POST / 22 0701eb05e7fb4274ab86b9ff549b5abb152fe10b" request_id=0affcd95-d7c2-4f03-b5ca-797864ad5d74 response_content_length=29 status=200
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="request finished" duration=1.209394ms duration_human=1.209394ms func=request_handler hit_cache_backup=false hit_cache_regular=false request="POST / 22 0701eb05e7fb4274ab86b9ff549b5abb152fe10b" request_content_length=22 request_id=0affcd95-d7c2-4f03-b5ca-797864ad5d74
[90m[components/openvsx-proxy:app] [0m--- PASS: TestAddResponseToCache (0.04s)
[90m[components/openvsx-proxy:app] [0m=== RUN   TestServeFromCacheOnUpstreamError
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=warning msg="error from upstream server - trying to use cached response" body= func=response_handler request="POST / 16 953520e32fe85564170f738362e3f5ba64b8c852" request_id=7d83032c-1db0-4509-b415-0f96deda1f9b response_content_length=0 status=500
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="processing response finished" duration="213.247Âµs" duration_human="213.247Âµs" func=response_handler request="POST / 16 953520e32fe85564170f738362e3f5ba64b8c852" request_id=7d83032c-1db0-4509-b415-0f96deda1f9b response_content_length=0 status=500
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="request finished" duration=1.030908ms duration_human=1.030908ms func=request_handler hit_cache_backup=false hit_cache_regular=false request="POST / 16 953520e32fe85564170f738362e3f5ba64b8c852" request_content_length=16 request_id=7d83032c-1db0-4509-b415-0f96deda1f9b
[90m[components/openvsx-proxy:app] [0m--- PASS: TestServeFromCacheOnUpstreamError (0.04s)
[90m[components/openvsx-proxy:app] [0m=== RUN   TestServeFromNonCacheOnUpstreamError
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="processing response finished" duration="30.145Âµs" duration_human="30.145Âµs" func=response_handler request= request_id=74872055-7f5e-4400-b1ef-a6404b4750cd response_content_length=0 status=500
[90m[components/openvsx-proxy:app] [0mtime="2023-05-15T09:24:50Z" level=info msg="request finished" duration=1.416877ms duration_human=1.416877ms func=request_handler hit_cache_backup=false hit_cache_regular=false request="POST /" request_content_length=16 request_id=74872055-7f5e-4400-b1ef-a6404b4750cd
[90m[components/openvsx-proxy:app] [0m--- PASS: TestServeFromNonCacheOnUpstreamError (0.30s)
[90m[components/openvsx-proxy:app] [0mPASS
[90m[components/openvsx-proxy:app] [0mok  	github.com/gitpod-io/gitpod/openvsx-proxy/pkg	0.437s
[90m[components/openvsx-proxy:app] [0m[0;32mpackage build succeded[0m [0;90m(14.61s)[0m
[90m[components/openvsx-proxy:docker] [0m[33mbuild started[0m [0;90m(version a7077d232e47fdfb480e1982b55fb5e0d6a74aec)[0m
[90m[components/openvsx-proxy:docker] [0m#1 [internal] load .dockerignore
[90m[components/openvsx-proxy:docker] [0m#1 transferring context: 2B done
[90m[components/openvsx-proxy:docker] [0m#1 DONE 0.1s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/openvsx-proxy:docker] [0m#2 transferring dockerfile: 688B done
[90m[components/openvsx-proxy:docker] [0m#2 DONE 0.1s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/openvsx-proxy:docker] [0m#3 DONE 0.0s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#4 [1/3] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/openvsx-proxy:docker] [0m#4 DONE 0.0s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#5 [internal] load build context
[90m[components/openvsx-proxy:docker] [0m#5 transferring context: 12.72MB 0.2s done
[90m[components/openvsx-proxy:docker] [0m#5 DONE 0.2s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#6 [2/3] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates
[90m[components/openvsx-proxy:docker] [0m#6 CACHED
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#7 [3/3] COPY components-openvsx-proxy--app/openvsx-proxy /app/openvsx-proxy
[90m[components/openvsx-proxy:docker] [0m#7 DONE 0.3s
[90m[components/openvsx-proxy:docker] [0m
[90m[components/openvsx-proxy:docker] [0m#8 exporting to image
[90m[components/openvsx-proxy:docker] [0m#8 exporting layers 0.1s done
[90m[components/openvsx-proxy:docker] [0m#8 writing image sha256:7d9f001d6527190e18500d1ac7dfe3b4647ca4aac0caf52523ecd3f04a9b5118 done
[90m[components/openvsx-proxy:docker] [0m#8 naming to docker.io/library/a7077d232e47fdfb480e1982b55fb5e0d6a74aec done
[90m[components/openvsx-proxy:docker] [0m#8 DONE 0.1s
[90m[components/openvsx-proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/openvsx-proxy]
[90m[components/openvsx-proxy:docker] [0m245c56552d23: Preparing
[90m[components/openvsx-proxy:docker] [0m3b84c1aca3d0: Preparing
[90m[components/openvsx-proxy:docker] [0m099cf1c15629: Preparing
[90m[components/openvsx-proxy:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/openvsx-proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/openvsx-proxy:docker] [0m245c56552d23: Pushed
[90m[components/openvsx-proxy:docker] [0m20230515: digest: sha256:4f8a434453a4ded8205de08b18aa64485541669fe0b7dbcef995eb043165e100 size: 949
[90m[components/openvsx-proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/openvsx-proxy]
[90m[components/openvsx-proxy:docker] [0m245c56552d23: Preparing
[90m[components/openvsx-proxy:docker] [0m3b84c1aca3d0: Preparing
[90m[components/openvsx-proxy:docker] [0m099cf1c15629: Preparing
[90m[components/openvsx-proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/openvsx-proxy:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/openvsx-proxy:docker] [0m245c56552d23: Layer already exists
[90m[components/openvsx-proxy:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-a7077d232e47fdfb480e1982b55fb5e0d6a74aec: digest: sha256:4f8a434453a4ded8205de08b18aa64485541669fe0b7dbcef995eb043165e100 size: 949
[90m[components/openvsx-proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/openvsx-proxy:20230515
[90m[components/openvsx-proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/openvsx-proxy:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-a7077d232e47fdfb480e1982b55fb5e0d6a74aec
[90m[components/openvsx-proxy:docker] [0m[0;32mpackage build succeded[0m [0;90m(22.06s)[0m

[0;32mbuild succeded[0m
leeway build components/proxy:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/proxy:docker  [90m(version 19e3eb74b8a2efb3d76725814f01952e9b0d672f)[0m

[90m[components/proxy:docker] [0m[33mbuild started[0m [0;90m(version 19e3eb74b8a2efb3d76725814f01952e9b0d672f)[0m
[90m[components/proxy:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/proxy:docker] [0m#1 transferring dockerfile: 1.96kB done
[90m[components/proxy:docker] [0m#1 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#2 [internal] load .dockerignore
[90m[components/proxy:docker] [0m#2 transferring context: 2B done
[90m[components/proxy:docker] [0m#2 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/proxy:docker] [0m#3 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#4 [internal] load metadata for docker.io/library/caddy:2.6.4-builder-alpine
[90m[components/proxy:docker] [0m#4 DONE 2.8s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#5 [stage-1 1/6] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/proxy:docker] [0m#5 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#6 [builder 1/4] FROM docker.io/library/caddy:2.6.4-builder-alpine@sha256:6c6f74c0b96dda41269a52cc0fb8e0e5e84bbaf5e6ffb8b90e5139c87e4afab4
[90m[components/proxy:docker] [0m#6 resolve docker.io/library/caddy:2.6.4-builder-alpine@sha256:6c6f74c0b96dda41269a52cc0fb8e0e5e84bbaf5e6ffb8b90e5139c87e4afab4
[90m[components/proxy:docker] [0m#6 ...
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#7 [internal] load build context
[90m[components/proxy:docker] [0m#7 transferring context: 946.25kB 0.0s done
[90m[components/proxy:docker] [0m#7 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#6 [builder 1/4] FROM docker.io/library/caddy:2.6.4-builder-alpine@sha256:6c6f74c0b96dda41269a52cc0fb8e0e5e84bbaf5e6ffb8b90e5139c87e4afab4
[90m[components/proxy:docker] [0m#6 resolve docker.io/library/caddy:2.6.4-builder-alpine@sha256:6c6f74c0b96dda41269a52cc0fb8e0e5e84bbaf5e6ffb8b90e5139c87e4afab4 done
[90m[components/proxy:docker] [0m#6 sha256:ecbc353690b010ceb2bfb3cf689d380cbfb65744b4353acd6262482c3d681229 8.01kB / 8.01kB done
[90m[components/proxy:docker] [0m#6 sha256:58116d8bf56953e5f30b7f50257c5bb2b5ba4aba460cb69f2ac57eea00aaa5dc 0B / 284.69kB 0.1s
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 0B / 122.40MB 0.1s
[90m[components/proxy:docker] [0m#6 sha256:2302f1b49b03f3e04f5c752e81534fadc9b2fb6ae6d7ccb354000e720c55eb87 0B / 156B 0.1s
[90m[components/proxy:docker] [0m#6 sha256:6c6f74c0b96dda41269a52cc0fb8e0e5e84bbaf5e6ffb8b90e5139c87e4afab4 1.43kB / 1.43kB done
[90m[components/proxy:docker] [0m#6 sha256:bbe9f7e2106c8954433b179563da0124860629d757c0eb85c1a37cb91e4dab0b 1.79kB / 1.79kB done
[90m[components/proxy:docker] [0m#6 sha256:58116d8bf56953e5f30b7f50257c5bb2b5ba4aba460cb69f2ac57eea00aaa5dc 284.69kB / 284.69kB 0.3s done
[90m[components/proxy:docker] [0m#6 extracting sha256:58116d8bf56953e5f30b7f50257c5bb2b5ba4aba460cb69f2ac57eea00aaa5dc
[90m[components/proxy:docker] [0m#6 sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 0B / 4.95MB 0.4s
[90m[components/proxy:docker] [0m#6 extracting sha256:58116d8bf56953e5f30b7f50257c5bb2b5ba4aba460cb69f2ac57eea00aaa5dc 0.1s done
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 17.70MB / 122.40MB 0.6s
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 55.57MB / 122.40MB 0.8s
[90m[components/proxy:docker] [0m#6 sha256:2302f1b49b03f3e04f5c752e81534fadc9b2fb6ae6d7ccb354000e720c55eb87 156B / 156B 0.7s done
[90m[components/proxy:docker] [0m#6 sha256:6958c4d5df2be656149a30334db272a7591e9a9f259f14aa7b68ec3e967bf90e 0B / 1.22MB 0.8s
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 75.50MB / 122.40MB 0.9s
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 116.39MB / 122.40MB 1.1s
[90m[components/proxy:docker] [0m#6 sha256:6958c4d5df2be656149a30334db272a7591e9a9f259f14aa7b68ec3e967bf90e 1.22MB / 1.22MB 1.4s
[90m[components/proxy:docker] [0m#6 sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 122.40MB / 122.40MB 1.5s done
[90m[components/proxy:docker] [0m#6 sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 1.05MB / 4.95MB 1.5s
[90m[components/proxy:docker] [0m#6 sha256:6958c4d5df2be656149a30334db272a7591e9a9f259f14aa7b68ec3e967bf90e 1.22MB / 1.22MB 1.5s done
[90m[components/proxy:docker] [0m#6 extracting sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 0.1s
[90m[components/proxy:docker] [0m#6 sha256:60e012d017463f26e62b6959a9e965f4aaaa91f39bcb0a77e315d2fb4a544d10 0B / 404B 1.6s
[90m[components/proxy:docker] [0m#6 sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 3.15MB / 4.95MB 1.8s
[90m[components/proxy:docker] [0m#6 sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 4.95MB / 4.95MB 1.9s
[90m[components/proxy:docker] [0m#6 sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 4.95MB / 4.95MB 1.9s done
[90m[components/proxy:docker] [0m#6 sha256:60e012d017463f26e62b6959a9e965f4aaaa91f39bcb0a77e315d2fb4a544d10 404B / 404B 2.0s done
[90m[components/proxy:docker] [0m#6 extracting sha256:78fb277e54df7c9e15c16f2958c8b8efa9d62c7375bd6a32a30507c9fc1da8be 4.1s done
[90m[components/proxy:docker] [0m#6 extracting sha256:2302f1b49b03f3e04f5c752e81534fadc9b2fb6ae6d7ccb354000e720c55eb87 done
[90m[components/proxy:docker] [0m#6 extracting sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380
[90m[components/proxy:docker] [0m#6 extracting sha256:e8f125368af659a05cab9d286b251e172f13c6e26a790ee4378c0dbd5c033380 0.2s done
[90m[components/proxy:docker] [0m#6 extracting sha256:6958c4d5df2be656149a30334db272a7591e9a9f259f14aa7b68ec3e967bf90e
[90m[components/proxy:docker] [0m#6 extracting sha256:6958c4d5df2be656149a30334db272a7591e9a9f259f14aa7b68ec3e967bf90e 0.1s done
[90m[components/proxy:docker] [0m#6 extracting sha256:60e012d017463f26e62b6959a9e965f4aaaa91f39bcb0a77e315d2fb4a544d10 done
[90m[components/proxy:docker] [0m#6 DONE 6.5s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#8 [builder 2/4] WORKDIR /plugins
[90m[components/proxy:docker] [0m#8 DONE 1.2s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#9 [builder 3/4] COPY plugins /plugins
[90m[components/proxy:docker] [0m#9 DONE 0.0s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#10 [builder 4/4] RUN xcaddy build v2.6.3   --output /caddy   --with github.com/gitpod-io/gitpod/proxy/plugins/corsorigin=/plugins/corsorigin   --with github.com/gitpod-io/gitpod/proxy/plugins/secwebsocketkey=/plugins/secwebsocketkey   --with github.com/gitpod-io/gitpod/proxy/plugins/workspacedownload=/plugins/workspacedownload   --with github.com/gitpod-io/gitpod/proxy/plugins/headlesslogdownload=/plugins/headlesslogdownload   --with github.com/gitpod-io/gitpod/proxy/plugins/configcat=/plugins/configcat   --with github.com/gitpod-io/gitpod/proxy/plugins/analytics=/plugins/analytics   --with github.com/gitpod-io/gitpod/proxy/plugins/logif=/plugins/logif   --with github.com/gitpod-io/gitpod/proxy/plugins/jsonselect=/plugins/jsonselect   --with github.com/gitpod-io/gitpod/proxy/plugins/sshtunnel=/plugins/sshtunnel   --with github.com/gitpod-io/gitpod/proxy/plugins/frontend_dev=/plugins/frontend_dev
[90m[components/proxy:docker] [0m#10 0.395 2023/05/15 09:25:32 [INFO] Temporary folder: /tmp/buildenv_2023-05-15-0925.33437834
[90m[components/proxy:docker] [0m#10 0.395 2023/05/15 09:25:32 [INFO] Writing main module: /tmp/buildenv_2023-05-15-0925.33437834/main.go
[90m[components/proxy:docker] [0m#10 0.395 package main
[90m[components/proxy:docker] [0m#10 0.395 
[90m[components/proxy:docker] [0m#10 0.395 import (
[90m[components/proxy:docker] [0m#10 0.395 	caddycmd "github.com/caddyserver/caddy/v2/cmd"
[90m[components/proxy:docker] [0m#10 0.395 
[90m[components/proxy:docker] [0m#10 0.395 	// plug in Caddy modules here
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/caddyserver/caddy/v2/modules/standard"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/corsorigin"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/secwebsocketkey"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/workspacedownload"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/headlesslogdownload"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/configcat"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/analytics"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/logif"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/jsonselect"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/sshtunnel"
[90m[components/proxy:docker] [0m#10 0.395 	_ "github.com/gitpod-io/gitpod/proxy/plugins/frontend_dev"
[90m[components/proxy:docker] [0m#10 0.395 )
[90m[components/proxy:docker] [0m#10 0.395 
[90m[components/proxy:docker] [0m#10 0.395 func main() {
[90m[components/proxy:docker] [0m#10 0.395 	caddycmd.Main()
[90m[components/proxy:docker] [0m#10 0.395 }
[90m[components/proxy:docker] [0m#10 0.395 2023/05/15 09:25:32 [INFO] Initializing Go module
[90m[components/proxy:docker] [0m#10 0.395 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod init caddy 
[90m[components/proxy:docker] [0m#10 0.400 go: creating new go.mod: module caddy
[90m[components/proxy:docker] [0m#10 0.401 go: to add module requirements and sums:
[90m[components/proxy:docker] [0m#10 0.401 	go mod tidy
[90m[components/proxy:docker] [0m#10 0.402 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/corsorigin => /plugins/corsorigin
[90m[components/proxy:docker] [0m#10 0.402 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/corsorigin=/plugins/corsorigin 
[90m[components/proxy:docker] [0m#10 0.407 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/secwebsocketkey => /plugins/secwebsocketkey
[90m[components/proxy:docker] [0m#10 0.407 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/secwebsocketkey=/plugins/secwebsocketkey 
[90m[components/proxy:docker] [0m#10 0.412 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/workspacedownload => /plugins/workspacedownload
[90m[components/proxy:docker] [0m#10 0.412 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/workspacedownload=/plugins/workspacedownload 
[90m[components/proxy:docker] [0m#10 0.417 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/headlesslogdownload => /plugins/headlesslogdownload
[90m[components/proxy:docker] [0m#10 0.417 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/headlesslogdownload=/plugins/headlesslogdownload 
[90m[components/proxy:docker] [0m#10 0.422 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/configcat => /plugins/configcat
[90m[components/proxy:docker] [0m#10 0.422 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/configcat=/plugins/configcat 
[90m[components/proxy:docker] [0m#10 0.427 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/analytics => /plugins/analytics
[90m[components/proxy:docker] [0m#10 0.427 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/analytics=/plugins/analytics 
[90m[components/proxy:docker] [0m#10 0.432 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/logif => /plugins/logif
[90m[components/proxy:docker] [0m#10 0.432 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/logif=/plugins/logif 
[90m[components/proxy:docker] [0m#10 0.436 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/jsonselect => /plugins/jsonselect
[90m[components/proxy:docker] [0m#10 0.436 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/jsonselect=/plugins/jsonselect 
[90m[components/proxy:docker] [0m#10 0.441 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/sshtunnel => /plugins/sshtunnel
[90m[components/proxy:docker] [0m#10 0.441 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/sshtunnel=/plugins/sshtunnel 
[90m[components/proxy:docker] [0m#10 0.446 2023/05/15 09:25:32 [INFO] Replace github.com/gitpod-io/gitpod/proxy/plugins/frontend_dev => /plugins/frontend_dev
[90m[components/proxy:docker] [0m#10 0.446 2023/05/15 09:25:32 [INFO] exec (timeout=10s): /usr/local/go/bin/go mod edit -replace github.com/gitpod-io/gitpod/proxy/plugins/frontend_dev=/plugins/frontend_dev 
[90m[components/proxy:docker] [0m#10 0.451 2023/05/15 09:25:32 [INFO] Pinning versions
[90m[components/proxy:docker] [0m#10 0.451 2023/05/15 09:25:32 [INFO] exec (timeout=0s): /usr/local/go/bin/go get -d -v github.com/caddyserver/caddy/v2@v2.6.3 
[90m[components/proxy:docker] [0m#10 0.796 go: downloading github.com/caddyserver/caddy/v2 v2.6.3
[90m[components/proxy:docker] [0m#10 3.476 go: downloading github.com/caddyserver/certmagic v0.17.2
[90m[components/proxy:docker] [0m#10 3.476 go: downloading github.com/google/uuid v1.3.0
[90m[components/proxy:docker] [0m#10 3.478 go: downloading github.com/prometheus/client_golang v1.14.0
[90m[components/proxy:docker] [0m#10 3.480 go: downloading github.com/quic-go/quic-go v0.32.0
[90m[components/proxy:docker] [0m#10 3.571 go: downloading go.uber.org/zap v1.24.0
[90m[components/proxy:docker] [0m#10 3.572 go: downloading golang.org/x/sys v0.5.0
[90m[components/proxy:docker] [0m#10 3.668 go: downloading golang.org/x/term v0.5.0
[90m[components/proxy:docker] [0m#10 3.819 go: downloading github.com/beorn7/perks v1.0.1
[90m[components/proxy:docker] [0m#10 3.820 go: downloading github.com/cespare/xxhash/v2 v2.1.2
[90m[components/proxy:docker] [0m#10 3.840 go: downloading github.com/golang/protobuf v1.5.2
[90m[components/proxy:docker] [0m#10 3.841 go: downloading github.com/cespare/xxhash v1.1.0
[90m[components/proxy:docker] [0m#10 3.863 go: downloading github.com/prometheus/client_model v0.3.0
[90m[components/proxy:docker] [0m#10 3.883 go: downloading github.com/prometheus/common v0.37.0
[90m[components/proxy:docker] [0m#10 3.936 go: downloading github.com/prometheus/procfs v0.8.0
[90m[components/proxy:docker] [0m#10 4.001 go: downloading google.golang.org/protobuf v1.28.1
[90m[components/proxy:docker] [0m#10 4.004 go: downloading go.uber.org/atomic v1.9.0
[90m[components/proxy:docker] [0m#10 4.005 go: downloading go.uber.org/multierr v1.6.0
[90m[components/proxy:docker] [0m#10 4.026 go: downloading github.com/klauspost/cpuid/v2 v2.2.3
[90m[components/proxy:docker] [0m#10 4.040 go: downloading github.com/libdns/libdns v0.2.1
[90m[components/proxy:docker] [0m#10 4.055 go: downloading github.com/mholt/acmez v1.0.4
[90m[components/proxy:docker] [0m#10 4.153 go: downloading github.com/miekg/dns v1.1.50
[90m[components/proxy:docker] [0m#10 4.264 go: downloading golang.org/x/crypto v0.5.0
[90m[components/proxy:docker] [0m#10 4.264 go: downloading golang.org/x/net v0.5.0
[90m[components/proxy:docker] [0m#10 4.397 go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1
[90m[components/proxy:docker] [0m#10 4.398 go: downloading golang.org/x/tools v0.2.0
[90m[components/proxy:docker] [0m#10 4.436 go: downloading github.com/golang/mock v1.6.0
[90m[components/proxy:docker] [0m#10 4.500 go: downloading github.com/onsi/ginkgo/v2 v2.2.0
[90m[components/proxy:docker] [0m#10 4.562 go: downloading github.com/quic-go/qpack v0.4.0
[90m[components/proxy:docker] [0m#10 4.663 go: downloading golang.org/x/mod v0.6.0
[90m[components/proxy:docker] [0m#10 4.680 go: downloading golang.org/x/exp v0.0.0-20221205204356-47842c84f3db
[90m[components/proxy:docker] [0m#10 4.723 go: downloading golang.org/x/text v0.6.0
[90m[components/proxy:docker] [0m#10 4.908 go: downloading github.com/quic-go/qtls-go1-18 v0.2.0
[90m[components/proxy:docker] [0m#10 5.139 go: downloading github.com/quic-go/qtls-go1-19 v0.2.0
[90m[components/proxy:docker] [0m#10 5.139 go: downloading github.com/quic-go/qtls-go1-20 v0.1.0
[90m[components/proxy:docker] [0m#10 5.450 go: downloading github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0
[90m[components/proxy:docker] [0m#10 5.469 go: downloading github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38
[90m[components/proxy:docker] [0m#10 8.676 go: added github.com/beorn7/perks v1.0.1
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/caddyserver/caddy/v2 v2.6.3
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/caddyserver/certmagic v0.17.2
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/cespare/xxhash/v2 v2.1.2
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/golang/mock v1.6.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/golang/protobuf v1.5.2
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/google/uuid v1.3.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/klauspost/cpuid/v2 v2.2.3
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/libdns/libdns v0.2.1
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/matttproud/golang_protobuf_extensions v1.0.1
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/mholt/acmez v1.0.4
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/miekg/dns v1.1.50
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/onsi/ginkgo/v2 v2.2.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/prometheus/client_golang v1.14.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/prometheus/client_model v0.3.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/prometheus/common v0.37.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/prometheus/procfs v0.8.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/quic-go/qpack v0.4.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/quic-go/qtls-go1-18 v0.2.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/quic-go/qtls-go1-19 v0.2.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/quic-go/qtls-go1-20 v0.1.0
[90m[components/proxy:docker] [0m#10 8.677 go: added github.com/quic-go/quic-go v0.32.0
[90m[components/proxy:docker] [0m#10 8.677 go: added go.uber.org/atomic v1.9.0
[90m[components/proxy:docker] [0m#10 8.677 go: added go.uber.org/multierr v1.6.0
[90m[components/proxy:docker] [0m#10 8.677 go: added go.uber.org/zap v1.24.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/crypto v0.5.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/exp v0.0.0-20221205204356-47842c84f3db
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/mod v0.6.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/net v0.5.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/sys v0.5.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/term v0.5.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/text v0.6.0
[90m[components/proxy:docker] [0m#10 8.677 go: added golang.org/x/tools v0.2.0
[90m[components/proxy:docker] [0m#10 8.677 go: added google.golang.org/protobuf v1.28.1
[90m[components/proxy:docker] [0m#10 8.682 2023/05/15 09:25:40 [INFO] exec (timeout=0s): /usr/local/go/bin/go get -d -v  
[90m[components/proxy:docker] [0m#10 8.766 go: downloading github.com/aryann/difflib v0.0.0-20210328193216-ff5ff6dc229b
[90m[components/proxy:docker] [0m#10 8.766 go: downloading github.com/spf13/cobra v1.6.1
[90m[components/proxy:docker] [0m#10 8.766 go: downloading github.com/spf13/pflag v1.0.5
[90m[components/proxy:docker] [0m#10 8.817 go: downloading github.com/go-chi/chi v4.1.2+incompatible
[90m[components/proxy:docker] [0m#10 8.817 go: downloading github.com/smallstep/certificates v0.23.2
[90m[components/proxy:docker] [0m#10 9.852 go: downloading github.com/smallstep/truststore v0.12.1
[90m[components/proxy:docker] [0m#10 9.852 go: downloading github.com/smallstep/nosql v0.5.0
[90m[components/proxy:docker] [0m#10 9.852 go: downloading go.step.sm/crypto v0.23.2
[90m[components/proxy:docker] [0m#10 9.853 go: downloading github.com/tailscale/tscert v0.0.0-20230124224810-c6dc1f4049b2
[90m[components/proxy:docker] [0m#10 9.853 go: downloading github.com/dustin/go-humanize v1.0.1
[90m[components/proxy:docker] [0m#10 9.873 go: downloading gopkg.in/natefinch/lumberjack.v2 v2.2.1
[90m[components/proxy:docker] [0m#10 10.18 go: downloading golang.org/x/sync v0.1.0
[90m[components/proxy:docker] [0m#10 10.20 go: downloading github.com/klauspost/compress v1.15.15
[90m[components/proxy:docker] [0m#10 10.47 go: downloading github.com/google/cel-go v0.13.0
[90m[components/proxy:docker] [0m#10 10.96 go: downloading google.golang.org/genproto v0.0.0-20230202175211-008b39050e57
[90m[components/proxy:docker] [0m#10 10.96 go: downloading github.com/Masterminds/sprig/v3 v3.2.3
[90m[components/proxy:docker] [0m#10 10.96 go: downloading github.com/BurntSushi/toml v1.2.1
[90m[components/proxy:docker] [0m#10 10.97 go: downloading github.com/alecthomas/chroma/v2 v2.5.0
[90m[components/proxy:docker] [0m#10 11.02 go: downloading github.com/yuin/goldmark v1.5.4
[90m[components/proxy:docker] [0m#10 11.09 go: downloading github.com/yuin/goldmark-highlighting/v2 v2.0.0-20220924101305-151362477c87
[90m[components/proxy:docker] [0m#10 11.09 go: downloading gopkg.in/yaml.v3 v3.0.1
[90m[components/proxy:docker] [0m#10 11.12 go: downloading go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.39.0
[90m[components/proxy:docker] [0m#10 11.41 go: downloading go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.4.0
[90m[components/proxy:docker] [0m#10 11.47 go: downloading go.opentelemetry.io/otel v1.13.0
[90m[components/proxy:docker] [0m#10 11.53 go: downloading go.opentelemetry.io/otel/exporters/otlp/otlptrace v1.4.0
[90m[components/proxy:docker] [0m#10 11.77 go: downloading go.opentelemetry.io/otel/sdk v1.13.0
[90m[components/proxy:docker] [0m#10 11.80 go: downloading github.com/inconshreveable/mousetrap v1.0.1
[90m[components/proxy:docker] [0m#10 11.87 go: downloading github.com/cpuguy83/go-md2man/v2 v2.0.2
[90m[components/proxy:docker] [0m#10 11.87 go: downloading github.com/fxamacker/cbor/v2 v2.4.0
[90m[components/proxy:docker] [0m#10 11.88 go: downloading github.com/pkg/errors v0.9.1
[90m[components/proxy:docker] [0m#10 11.90 go: downloading go.step.sm/cli-utils v0.7.5
[90m[components/proxy:docker] [0m#10 11.95 go: downloading go.step.sm/linkedca v0.19.0
[90m[components/proxy:docker] [0m#10 12.30 go: downloading google.golang.org/grpc v1.52.3
[90m[components/proxy:docker] [0m#10 12.34 go: downloading gopkg.in/square/go-jose.v2 v2.6.0
[90m[components/proxy:docker] [0m#10 12.42 go: downloading github.com/slackhq/nebula v1.6.1
[90m[components/proxy:docker] [0m#10 12.88 go: downloading howett.net/plist v1.0.0
[90m[components/proxy:docker] [0m#10 12.93 go: downloading github.com/antlr/antlr4/runtime/Go/antlr v1.4.10
[90m[components/proxy:docker] [0m#10 12.93 go: downloading github.com/stoewer/go-strcase v1.2.0
[90m[components/proxy:docker] [0m#10 12.94 go: downloading github.com/Masterminds/goutils v1.1.1
[90m[components/proxy:docker] [0m#10 12.94 go: downloading github.com/Masterminds/semver/v3 v3.2.0
[90m[components/proxy:docker] [0m#10 12.96 go: downloading github.com/huandu/xstrings v1.3.3
[90m[components/proxy:docker] [0m#10 12.96 go: downloading github.com/imdario/mergo v0.3.12
[90m[components/proxy:docker] [0m#10 12.98 go: downloading github.com/mitchellh/copystructure v1.2.0
[90m[components/proxy:docker] [0m#10 13.00 go: downloading github.com/shopspring/decimal v1.2.0
[90m[components/proxy:docker] [0m#10 13.00 go: downloading github.com/spf13/cast v1.4.1
[90m[components/proxy:docker] [0m#10 13.01 go: downloading github.com/felixge/httpsnoop v1.0.3
[90m[components/proxy:docker] [0m#10 13.01 go: downloading go.opentelemetry.io/otel/metric v0.36.0
[90m[components/proxy:docker] [0m#10 13.09 go: downloading go.opentelemetry.io/otel/trace v1.13.0
[90m[components/proxy:docker] [0m#10 13.12 go: downloading go.opentelemetry.io/otel/exporters/otlp/internal/retry v1.4.0
[90m[components/proxy:docker] [0m#10 13.12 go: downloading go.opentelemetry.io/proto/otlp v0.12.0
[90m[components/proxy:docker] [0m#10 13.21 go: downloading github.com/rs/xid v1.4.0
[90m[components/proxy:docker] [0m#10 13.23 go: downloading github.com/sirupsen/logrus v1.9.0
[90m[components/proxy:docker] [0m#10 13.25 go: downloading github.com/micromdm/scep/v2 v2.1.0
[90m[components/proxy:docker] [0m#10 13.46 go: downloading go.mozilla.org/pkcs7 v0.0.0-20210826202110-33d05740a352
[90m[components/proxy:docker] [0m#10 13.46 go: downloading github.com/russross/blackfriday/v2 v2.1.0
[90m[components/proxy:docker] [0m#10 13.51 go: downloading github.com/x448/float16 v0.8.4
[90m[components/proxy:docker] [0m#10 13.53 go: downloading github.com/urfave/cli v1.22.12
[90m[components/proxy:docker] [0m#10 13.53 go: downloading github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e
[90m[components/proxy:docker] [0m#10 13.55 go: downloading github.com/manifoldco/promptui v0.9.0
[90m[components/proxy:docker] [0m#10 13.58 go: downloading filippo.io/edwards25519 v1.0.0
[90m[components/proxy:docker] [0m#10 13.60 go: downloading github.com/Microsoft/go-winio v0.6.0
[90m[components/proxy:docker] [0m#10 13.60 go: downloading github.com/mitchellh/go-ps v1.0.0
[90m[components/proxy:docker] [0m#10 13.66 go: downloading github.com/dgraph-io/badger v1.6.2
[90m[components/proxy:docker] [0m#10 13.68 go: downloading go.etcd.io/bbolt v1.3.6
[90m[components/proxy:docker] [0m#10 13.70 go: downloading github.com/dgraph-io/badger/v2 v2.2007.4
[90m[components/proxy:docker] [0m#10 13.96 go: downloading github.com/go-sql-driver/mysql v1.6.0
[90m[components/proxy:docker] [0m#10 13.96 go: downloading github.com/jackc/pgx/v4 v4.17.2
[90m[components/proxy:docker] [0m#10 14.01 go: downloading github.com/mitchellh/reflectwalk v1.0.2
[90m[components/proxy:docker] [0m#10 14.01 go: downloading github.com/dlclark/regexp2 v1.7.0
[90m[components/proxy:docker] [0m#10 14.01 go: downloading github.com/go-logr/logr v1.2.3
[90m[components/proxy:docker] [0m#10 14.01 go: downloading github.com/go-logr/stdr v1.2.2
[90m[components/proxy:docker] [0m#10 14.03 go: downloading github.com/cenkalti/backoff/v4 v4.1.2
[90m[components/proxy:docker] [0m#10 14.03 go: downloading github.com/grpc-ecosystem/grpc-gateway v1.16.0
[90m[components/proxy:docker] [0m#10 14.05 go: downloading github.com/go-kit/kit v0.10.0
[90m[components/proxy:docker] [0m#10 14.27 go: downloading github.com/dgraph-io/ristretto v0.1.0
[90m[components/proxy:docker] [0m#10 14.28 go: downloading github.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13
[90m[components/proxy:docker] [0m#10 14.39 go: downloading github.com/jackc/pgconn v1.13.0
[90m[components/proxy:docker] [0m#10 14.41 go: downloading github.com/jackc/pgio v1.0.0
[90m[components/proxy:docker] [0m#10 14.42 go: downloading github.com/jackc/pgproto3/v2 v2.3.1
[90m[components/proxy:docker] [0m#10 14.42 go: downloading github.com/jackc/pgtype v1.12.0
[90m[components/proxy:docker] [0m#10 14.43 go: downloading github.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96
[90m[components/proxy:docker] [0m#10 14.54 go: downloading github.com/go-logfmt/logfmt v0.5.1
[90m[components/proxy:docker] [0m#10 14.61 go: downloading github.com/golang/snappy v0.0.4
[90m[components/proxy:docker] [0m#10 14.63 go: downloading github.com/golang/glog v1.0.0
[90m[components/proxy:docker] [0m#10 14.64 go: downloading github.com/jackc/chunkreader/v2 v2.0.1
[90m[components/proxy:docker] [0m#10 14.64 go: downloading github.com/jackc/pgpassfile v1.0.0
[90m[components/proxy:docker] [0m#10 14.65 go: downloading github.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b
[90m[components/proxy:docker] [0m#10 14.65 go: downloading github.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d
[90m[components/proxy:docker] [0m#10 14.65 go: downloading github.com/shurcooL/sanitized_anchor_name v1.0.0
[90m[components/proxy:docker] [0m#10 14.66 go: downloading github.com/mattn/go-colorable v0.1.8
[90m[components/proxy:docker] [0m#10 14.78 go: downloading github.com/mattn/go-isatty v0.0.13
[90m[components/proxy:docker] [0m#10 18.07 go: downloading github.com/gitpod-io/gitpod v0.10.0
[90m[components/proxy:docker] [0m#10 65.22 go: downloading github.com/caddyserver/caddy/v2 v2.6.4
[90m[components/proxy:docker] [0m#10 65.66 go: downloading github.com/buger/jsonparser v1.1.1
[90m[components/proxy:docker] [0m#10 65.66 go: downloading gopkg.in/segmentio/analytics-go.v3 v3.1.0
[90m[components/proxy:docker] [0m#10 65.66 go: downloading github.com/PaesslerAG/gval v1.2.2
[90m[components/proxy:docker] [0m#10 65.66 go: downloading github.com/rs/cors v1.8.3
[90m[components/proxy:docker] [0m#10 65.67 go: downloading github.com/mholt/acmez v1.1.0
[90m[components/proxy:docker] [0m#10 65.67 go: downloading golang.org/x/net v0.7.0
[90m[components/proxy:docker] [0m#10 65.88 go: downloading github.com/prometheus/common v0.42.0
[90m[components/proxy:docker] [0m#10 66.00 go: downloading golang.org/x/text v0.7.0
[90m[components/proxy:docker] [0m#10 66.00 go: downloading github.com/segmentio/backo-go v1.0.1
[90m[components/proxy:docker] [0m#10 66.00 go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.4
[90m[components/proxy:docker] [0m#10 66.00 go: downloading github.com/xtgo/uuid v0.0.0-20140804021211-a0b114877d4c
[90m[components/proxy:docker] [0m#10 66.00 go: downloading github.com/shopspring/decimal v1.3.1
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/PaesslerAG/gval v1.2.2
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/buger/jsonparser v1.1.1
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded github.com/caddyserver/caddy/v2 v2.6.3 => v2.6.4
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/analytics v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/configcat v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/corsorigin v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/frontend_dev v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/headlesslogdownload v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/jsonselect v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/logif v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/secwebsocketkey v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/sshtunnel v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/gitpod-io/gitpod/proxy/plugins/workspacedownload v0.0.0-00010101000000-000000000000
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded github.com/matttproud/golang_protobuf_extensions v1.0.1 => v1.0.4
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded github.com/mholt/acmez v1.0.4 => v1.1.0
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded github.com/prometheus/common v0.37.0 => v0.42.0
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/rs/cors v1.8.3
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/segmentio/backo-go v1.0.1
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded github.com/shopspring/decimal v1.2.0 => v1.3.1
[90m[components/proxy:docker] [0m#10 70.48 go: added github.com/xtgo/uuid v0.0.0-20140804021211-a0b114877d4c
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded golang.org/x/net v0.5.0 => v0.7.0
[90m[components/proxy:docker] [0m#10 70.48 go: upgraded golang.org/x/text v0.6.0 => v0.7.0
[90m[components/proxy:docker] [0m#10 70.48 go: added gopkg.in/segmentio/analytics-go.v3 v3.1.0
[90m[components/proxy:docker] [0m#10 70.49 2023/05/15 09:26:42 [INFO] Build environment ready
[90m[components/proxy:docker] [0m#10 70.49 2023/05/15 09:26:42 [INFO] Building Caddy
[90m[components/proxy:docker] [0m#10 70.49 2023/05/15 09:26:42 [INFO] exec (timeout=0s): /usr/local/go/bin/go mod tidy 
[90m[components/proxy:docker] [0m#10 70.55 go: downloading github.com/stretchr/testify v1.8.2
[90m[components/proxy:docker] [0m#10 70.55 go: downloading go.uber.org/goleak v1.1.12
[90m[components/proxy:docker] [0m#10 70.55 go: downloading github.com/PaesslerAG/jsonpath v0.1.0
[90m[components/proxy:docker] [0m#10 70.55 go: downloading github.com/onsi/gomega v1.20.1
[90m[components/proxy:docker] [0m#10 70.67 go: downloading github.com/davecgh/go-spew v1.1.1
[90m[components/proxy:docker] [0m#10 70.68 go: downloading github.com/bmizerany/assert v0.0.0-20160611221934-b7ed37b82869
[90m[components/proxy:docker] [0m#10 70.69 go: downloading github.com/benbjohnson/clock v1.1.0
[90m[components/proxy:docker] [0m#10 70.70 go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c
[90m[components/proxy:docker] [0m#10 70.72 go: downloading github.com/smallstep/assert v0.0.0-20200723003110-82e2b9b3b262
[90m[components/proxy:docker] [0m#10 70.72 go: downloading github.com/google/go-cmp v0.5.9
[90m[components/proxy:docker] [0m#10 70.77 go: downloading github.com/pmezard/go-difflib v1.0.0
[90m[components/proxy:docker] [0m#10 70.79 go: downloading github.com/kr/pretty v0.3.1
[90m[components/proxy:docker] [0m#10 70.88 go: downloading github.com/alecthomas/assert/v2 v2.2.1
[90m[components/proxy:docker] [0m#10 70.99 go: downloading gopkg.in/yaml.v2 v2.4.0
[90m[components/proxy:docker] [0m#10 70.99 go: downloading github.com/kr/text v0.1.0
[90m[components/proxy:docker] [0m#10 70.99 go: downloading github.com/rogpeppe/go-internal v1.9.0
[90m[components/proxy:docker] [0m#10 70.99 go: downloading github.com/alecthomas/repr v0.2.0
[90m[components/proxy:docker] [0m#10 70.99 go: downloading github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1
[90m[components/proxy:docker] [0m#10 71.00 go: downloading github.com/aws/aws-sdk-go v1.44.185
[90m[components/proxy:docker] [0m#10 71.38 go: downloading cloud.google.com/go/kms v1.8.0
[90m[components/proxy:docker] [0m#10 71.67 go: downloading cloud.google.com/go v0.107.0
[90m[components/proxy:docker] [0m#10 71.81 go: downloading github.com/googleapis/gax-go/v2 v2.7.0
[90m[components/proxy:docker] [0m#10 71.81 go: downloading google.golang.org/api v0.108.0
[90m[components/proxy:docker] [0m#10 71.84 go: downloading github.com/cockroachdb/apd v1.1.0
[90m[components/proxy:docker] [0m#10 71.90 go: downloading github.com/gofrs/uuid v4.0.0+incompatible
[90m[components/proxy:docker] [0m#10 71.98 go: downloading github.com/go-stack/stack v1.8.0
[90m[components/proxy:docker] [0m#10 71.99 go: downloading github.com/chzyer/logex v1.1.10
[90m[components/proxy:docker] [0m#10 72.00 go: downloading github.com/hexops/gotextdiff v1.0.3
[90m[components/proxy:docker] [0m#10 72.03 go: downloading cloud.google.com/go/iam v0.8.0
[90m[components/proxy:docker] [0m#10 80.23 go: downloading github.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65
[90m[components/proxy:docker] [0m#10 80.23 go: downloading github.com/lib/pq v1.10.2
[90m[components/proxy:docker] [0m#10 80.24 go: downloading golang.org/x/oauth2 v0.5.0
[90m[components/proxy:docker] [0m#10 80.30 go: downloading cloud.google.com/go/compute/metadata v0.2.3
[90m[components/proxy:docker] [0m#10 80.30 go: downloading go.opencensus.io v0.24.0
[90m[components/proxy:docker] [0m#10 80.33 go: downloading cloud.google.com/go/compute v1.14.0
[90m[components/proxy:docker] [0m#10 80.41 go: downloading google.golang.org/appengine v1.6.7
[90m[components/proxy:docker] [0m#10 80.54 go: downloading github.com/OneOfOne/xxhash v1.2.2
[90m[components/proxy:docker] [0m#10 80.55 go: downloading github.com/spaolacci/murmur3 v1.1.0
[90m[components/proxy:docker] [0m#10 80.56 go: downloading github.com/googleapis/enterprise-certificate-proxy v0.2.1
[90m[components/proxy:docker] [0m#10 80.59 go: downloading github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da
[90m[components/proxy:docker] [0m#10 80.61 go: downloading github.com/jmespath/go-jmespath v0.4.0
[90m[components/proxy:docker] [0m#10 80.80 2023/05/15 09:26:52 [INFO] exec (timeout=0s): /usr/local/go/bin/go build -o /caddy -ldflags -w -s -trimpath 
[90m[components/proxy:docker] [0m#10 143.5 2023/05/15 09:27:55 [INFO] Build complete: /caddy
[90m[components/proxy:docker] [0m#10 143.5 2023/05/15 09:27:55 [INFO] Skipping cleanup as requested; leaving folder intact: /tmp/buildenv_2023-05-15-0925.33437834
[90m[components/proxy:docker] [0m#10 143.5 2023/05/15 09:27:55 [INFO] Setting capabilities (requires admin privileges): [setcap cap_net_bind_service=+ep /caddy]
[90m[components/proxy:docker] [0m#10 DONE 144.2s
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#11 [stage-1 2/6] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates bash
[90m[components/proxy:docker] [0m#11 CACHED
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#12 [stage-1 3/6] COPY --from=builder /caddy /usr/bin/caddy
[90m[components/proxy:docker] [0m#12 CACHED
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#13 [stage-1 4/6] COPY conf/Caddyfile /etc/caddy/Caddyfile
[90m[components/proxy:docker] [0m#13 CACHED
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#14 [stage-1 5/6] COPY conf/vhost.empty /etc/caddy/vhosts/vhost.empty
[90m[components/proxy:docker] [0m#14 CACHED
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#15 [stage-1 6/6] COPY conf/workspace-handler.* /etc/caddy/workspace-handler/
[90m[components/proxy:docker] [0m#15 CACHED
[90m[components/proxy:docker] [0m
[90m[components/proxy:docker] [0m#16 exporting to image
[90m[components/proxy:docker] [0m#16 exporting layers done
[90m[components/proxy:docker] [0m#16 writing image sha256:7a59e8a0630662a50173c20e13f1fd2129ad5cf3bcae3584faef45a1e02010d8 done
[90m[components/proxy:docker] [0m#16 naming to docker.io/library/19e3eb74b8a2efb3d76725814f01952e9b0d672f done
[90m[components/proxy:docker] [0m#16 DONE 0.0s
[90m[components/proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/proxy]
[90m[components/proxy:docker] [0m1ad86b1a228f: Preparing
[90m[components/proxy:docker] [0m0c67fcff3888: Preparing
[90m[components/proxy:docker] [0m6da8c4e5bfe4: Preparing
[90m[components/proxy:docker] [0ma38db58acfb3: Preparing
[90m[components/proxy:docker] [0m2d2f4ccd0c2c: Preparing
[90m[components/proxy:docker] [0m099cf1c15629: Preparing
[90m[components/proxy:docker] [0m099cf1c15629: Waiting
[90m[components/proxy:docker] [0m0c67fcff3888: Layer already exists
[90m[components/proxy:docker] [0m6da8c4e5bfe4: Layer already exists
[90m[components/proxy:docker] [0ma38db58acfb3: Layer already exists
[90m[components/proxy:docker] [0m1ad86b1a228f: Layer already exists
[90m[components/proxy:docker] [0m2d2f4ccd0c2c: Layer already exists
[90m[components/proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/proxy:docker] [0m20230515: digest: sha256:411bd175079a9d1ec2addd7aaf8205861e31b625c49f4e8a2e7cbd48ddc4442e size: 1573
[90m[components/proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/proxy]
[90m[components/proxy:docker] [0m1ad86b1a228f: Preparing
[90m[components/proxy:docker] [0m0c67fcff3888: Preparing
[90m[components/proxy:docker] [0m6da8c4e5bfe4: Preparing
[90m[components/proxy:docker] [0ma38db58acfb3: Preparing
[90m[components/proxy:docker] [0m2d2f4ccd0c2c: Preparing
[90m[components/proxy:docker] [0m099cf1c15629: Preparing
[90m[components/proxy:docker] [0m099cf1c15629: Waiting
[90m[components/proxy:docker] [0m2d2f4ccd0c2c: Layer already exists
[90m[components/proxy:docker] [0m6da8c4e5bfe4: Layer already exists
[90m[components/proxy:docker] [0ma38db58acfb3: Layer already exists
[90m[components/proxy:docker] [0m1ad86b1a228f: Layer already exists
[90m[components/proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/proxy:docker] [0m0c67fcff3888: Pushed
[90m[components/proxy:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:411bd175079a9d1ec2addd7aaf8205861e31b625c49f4e8a2e7cbd48ddc4442e size: 1573
[90m[components/proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/proxy:20230515
[90m[components/proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/proxy:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/proxy:docker] [0m[0;32mpackage build succeded[0m [0;90m(179.73s)[0m

[0;32mbuild succeded[0m
leeway build components/public-api-server:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-db/go:lib               [90m(version 246d86ca765d95f854b6a17148338cfb8e63c40d)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/public-api-server:app          [90m(version 2231ef0a8d1af7ee517883d8271cb28a3a91ee59)[0m
[33mðŸ”§  build[0m           components/public-api-server:docker       [90m(version fdef3c655e9b83c13274e50c986db27fb84139f8)[0m
[33mðŸ”§  build[0m           components/public-api/go:lib              [90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[33mðŸ”§  build[0m           components/usage-api/go:lib               [90m(version 1a5c03850f0608a4a3f0b04a5a3f8fe099fb6290)[0m

[90m[components/public-api/go:lib] [0m[33mbuild started[0m [0;90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[90m[components/usage-api/go:lib] [0m[33mbuild started[0m [0;90m(version 1a5c03850f0608a4a3f0b04a5a3f8fe099fb6290)[0m
[90m[components/gitpod-db/go:lib] [0m[33mbuild started[0m [0;90m(version 246d86ca765d95f854b6a17148338cfb8e63c40d)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-db/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(0.61s)[0m
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:28:23Z" level=fatal msg="build failed"
leeway build components/registry-facade:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[33mðŸ”§  build[0m           components/registry-facade:app         [90m(version 8c2eb98c72b94b39f1e778efb04036d88158b006)[0m
[33mðŸ”§  build[0m           components/registry-facade:docker      [90m(version b32a7f01ca1bb7c5ee53d56bdb1888ec4381bf8a)[0m

[90m[components/registry-facade:app] [0m[33mbuild started[0m [0;90m(version 8c2eb98c72b94b39f1e778efb04036d88158b006)[0m
[90m[components/registry-facade:app] [0m?   	github.com/gitpod-io/gitpod/registry-facade	[no test files]
[90m[components/registry-facade:app] [0m?   	github.com/gitpod-io/gitpod/registry-facade/cmd	[no test files]
[90m[components/registry-facade:app] [0m=== RUN   TestIPFSBlobCache
[90m[components/registry-facade:app] [0m2023/05/15 09:28:35 failed to sufficiently increase receive buffer size (was: 208 kiB, wanted: 2048 kiB, got: 416 kiB). See https://github.com/lucas-clemente/quic-go/wiki/UDP-Receive-Buffer-Size for details.
[90m[components/registry-facade:app] [0m    blob_test.go:143: HTTP API server listening on /ip4/127.0.0.1/tcp/5001
[90m[components/registry-facade:app] [0mAPI server listening on /ip4/127.0.0.1/tcp/5001
[90m[components/registry-facade:app] [0mtime="2023-05-15T09:28:39Z" level=warning msg="retry get blob because of error" baseRef="docker.io/library/alpine@sha256:7580ece7963bfa863801466c0a488f11c86f85d9988051a9f9c68cb27f6b7872" blobSource=ipfs error="connection reset by peer"
[90m[components/registry-facade:app] [0m--- PASS: TestIPFSBlobCache (4.43s)
[90m[components/registry-facade:app] [0m=== RUN   TestRedisBlobStore_Info
[90m[components/registry-facade:app] [0m=== RUN   TestRedisBlobStore_Info/not_found
[90m[components/registry-facade:app] [0m=== RUN   TestRedisBlobStore_Info/invalid_JSON
[90m[components/registry-facade:app] [0m=== RUN   TestRedisBlobStore_Info/valid
[90m[components/registry-facade:app] [0m--- PASS: TestRedisBlobStore_Info (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRedisBlobStore_Info/not_found (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRedisBlobStore_Info/invalid_JSON (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRedisBlobStore_Info/valid (0.00s)
[90m[components/registry-facade:app] [0m=== RUN   TestRedisBlobStore_Writer
[90m[components/registry-facade:app] [0m--- PASS: TestRedisBlobStore_Writer (0.00s)
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_code_envs.json
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_skipN-10.json
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_skipN1.json
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_skipN10.json
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_skipNotANumber.json
[90m[components/registry-facade:app] [0m=== RUN   TestStaticLayerSource/fixtures/layersrc_theia_envs.json
[90m[components/registry-facade:app] [0m--- PASS: TestStaticLayerSource (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_code_envs.json (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_skipN-10.json (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_skipN1.json (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_skipN10.json (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_skipNotANumber.json (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestStaticLayerSource/fixtures/layersrc_theia_envs.json (0.00s)
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest/no_store
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest/accepts_nothing_store
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest/misbehaving_store
[90m[components/registry-facade:app] [0mtime="2023-05-15T09:28:39Z" level=warning msg="cannot get manifest from store" desc="{application/vnd.oci.image.index.v1+json sha256:7f0ea581f19a126542e77952b28d9048fb26d2cafc2c2db0953c3ce176a9b934 240 [] map[] [] <nil> }" error="you wish"
[90m[components/registry-facade:app] [0mtime="2023-05-15T09:28:39Z" level=warning msg="cannot create store writer" desc="{application/vnd.oci.image.manifest.v1+json sha256:845cf7ae3f482abd4cf816962c628155ac8b6269e52b9582594f6fd354db6bbe 248 [] map[] [] <nil> }" error="some error"
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest/fetch_mf_no_store
[90m[components/registry-facade:app] [0m=== RUN   TestDownloadManifest/fetch_mf_with_store
[90m[components/registry-facade:app] [0m--- PASS: TestDownloadManifest (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestDownloadManifest/no_store (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestDownloadManifest/accepts_nothing_store (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestDownloadManifest/misbehaving_store (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestDownloadManifest/fetch_mf_no_store (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestDownloadManifest/fetch_mf_with_store (0.00s)
[90m[components/registry-facade:app] [0m=== RUN   TestRetryableFetcher
[90m[components/registry-facade:app] [0m=== RUN   TestRetryableFetcher/valid_reference
[90m[components/registry-facade:app] [0mtime="2023-05-15T09:28:39Z" level=error msg="request failed" error="Head \"https://registry-1.docker.io/v2/library/alpine/manifests/sha256:7580ece7963bfa863801466c0a488f11c86f85d9988051a9f9c68cb27f6b7872\": connection reset by peer" method=HEAD url="https://registry-1.docker.io/v2/library/alpine/manifests/sha256:7580ece7963bfa863801466c0a488f11c86f85d9988051a9f9c68cb27f6b7872"
[90m[components/registry-facade:app] [0m2023-05-15T09:28:39.781Z	ERROR	flatfs	go-ds-flatfs@v0.5.1/flatfs.go:997	could not store final value of disk usage to file, future estimates may be inaccurate
[90m[components/registry-facade:app] [0m=== RUN   TestRetryableFetcher/invalid_reference
[90m[components/registry-facade:app] [0m--- PASS: TestRetryableFetcher (2.92s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRetryableFetcher/valid_reference (2.91s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRetryableFetcher/invalid_reference (0.00s)
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/hasBlob
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/getBlob_active_!hasBlob
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/getBlob_active_hasBlob
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/getBlob_new_active_hasBlob
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/getBlob_new_active_!hasBlob
[90m[components/registry-facade:app] [0m=== RUN   TestRevisioingLayerSource/active_only
[90m[components/registry-facade:app] [0m--- PASS: TestRevisioingLayerSource (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/hasBlob (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/getBlob_active_!hasBlob (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/getBlob_active_hasBlob (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/getBlob_new_active_hasBlob (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/getBlob_new_active_!hasBlob (0.00s)
[90m[components/registry-facade:app] [0m    --- PASS: TestRevisioingLayerSource/active_only (0.00s)
[90m[components/registry-facade:app] [0mPASS
[90m[components/registry-facade:app] [0mok  	github.com/gitpod-io/gitpod/registry-facade/pkg/registry	7.448s
[90m[components/registry-facade:app] [0m?   	github.com/gitpod-io/gitpod/registry-facade/pkg/registry/mock	[no test files]
[90m[components/registry-facade:app] [0m[0;32mpackage build succeded[0m [0;90m(39.17s)[0m
[90m[components/registry-facade:docker] [0m[33mbuild started[0m [0;90m(version b32a7f01ca1bb7c5ee53d56bdb1888ec4381bf8a)[0m
[90m[components/registry-facade:docker] [0m#1 [internal] load .dockerignore
[90m[components/registry-facade:docker] [0m#1 transferring context: 2B done
[90m[components/registry-facade:docker] [0m#1 DONE 0.0s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/registry-facade:docker] [0m#2 transferring dockerfile: 801B done
[90m[components/registry-facade:docker] [0m#2 DONE 0.0s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/registry-facade:docker] [0m#3 DONE 0.0s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#4 [1/5] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/registry-facade:docker] [0m#4 CACHED
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#5 [internal] load build context
[90m[components/registry-facade:docker] [0m#5 transferring context: 27.20MB 0.5s done
[90m[components/registry-facade:docker] [0m#5 DONE 0.5s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#6 [2/5] RUN apk upgrade --no-cache   && apk add ca-certificates --no-cache
[90m[components/registry-facade:docker] [0m#0 0.614 fetch https://packages.wolfi.dev/os/x86_64/APKINDEX.tar.gz
[90m[components/registry-facade:docker] [0m#6 1.741 OK: 12 MiB in 13 packages
[90m[components/registry-facade:docker] [0m#6 1.765 fetch https://packages.wolfi.dev/os/x86_64/APKINDEX.tar.gz
[90m[components/registry-facade:docker] [0m#6 3.138 (1/1) Installing ca-certificates (20230506-r0)
[90m[components/registry-facade:docker] [0m#6 3.905 OK: 13 MiB in 14 packages
[90m[components/registry-facade:docker] [0m#6 DONE 4.5s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#7 [3/5] RUN adduser -S -D -H -h /app -u 1000 appuser
[90m[components/registry-facade:docker] [0m#7 DONE 0.6s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#8 [4/5] COPY components-registry-facade--app/registry-facade /app/registry-facade
[90m[components/registry-facade:docker] [0m#8 DONE 0.1s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#9 [5/5] RUN chown -R appuser /app
[90m[components/registry-facade:docker] [0m#9 DONE 0.6s
[90m[components/registry-facade:docker] [0m
[90m[components/registry-facade:docker] [0m#10 exporting to image
[90m[components/registry-facade:docker] [0m#10 exporting layers
[90m[components/registry-facade:docker] [0m#10 exporting layers 0.2s done
[90m[components/registry-facade:docker] [0m#10 writing image sha256:bf1adc7ed8f621c9501e0e85497155692bd3523353e338a19766d2594aee8005 done
[90m[components/registry-facade:docker] [0m#10 naming to docker.io/library/b32a7f01ca1bb7c5ee53d56bdb1888ec4381bf8a done
[90m[components/registry-facade:docker] [0m#10 DONE 0.2s
[90m[components/registry-facade:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/registry-facade]
[90m[components/registry-facade:docker] [0mf8b3870c8473: Preparing
[90m[components/registry-facade:docker] [0m879f1ba3d618: Preparing
[90m[components/registry-facade:docker] [0m9f6cb26f0a53: Preparing
[90m[components/registry-facade:docker] [0mb8f4a5629ffb: Preparing
[90m[components/registry-facade:docker] [0m099cf1c15629: Preparing
[90m[components/registry-facade:docker] [0m099cf1c15629: Mounted from self-build-gitpod/usage
[90m[components/registry-facade:docker] [0m9f6cb26f0a53: Pushed
[90m[components/registry-facade:docker] [0mb8f4a5629ffb: Pushed
[90m[components/registry-facade:docker] [0mf8b3870c8473: Pushed
[90m[components/registry-facade:docker] [0m879f1ba3d618: Pushed
[90m[components/registry-facade:docker] [0m20230515: digest: sha256:d1e67b00ed588aed12b15fe1c1972a40515fc99217c20f99a25c8cbcebad093e size: 1368
[90m[components/registry-facade:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/registry-facade]
[90m[components/registry-facade:docker] [0mf8b3870c8473: Preparing
[90m[components/registry-facade:docker] [0m879f1ba3d618: Preparing
[90m[components/registry-facade:docker] [0m9f6cb26f0a53: Preparing
[90m[components/registry-facade:docker] [0mb8f4a5629ffb: Preparing
[90m[components/registry-facade:docker] [0m099cf1c15629: Preparing
[90m[components/registry-facade:docker] [0m099cf1c15629: Layer already exists
[90m[components/registry-facade:docker] [0mf8b3870c8473: Layer already exists
[90m[components/registry-facade:docker] [0m879f1ba3d618: Layer already exists
[90m[components/registry-facade:docker] [0mb8f4a5629ffb: Layer already exists
[90m[components/registry-facade:docker] [0m9f6cb26f0a53: Layer already exists
[90m[components/registry-facade:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-b32a7f01ca1bb7c5ee53d56bdb1888ec4381bf8a: digest: sha256:d1e67b00ed588aed12b15fe1c1972a40515fc99217c20f99a25c8cbcebad093e size: 1368
[90m[components/registry-facade:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/registry-facade:20230515
[90m[components/registry-facade:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/registry-facade:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-b32a7f01ca1bb7c5ee53d56bdb1888ec4381bf8a
[90m[components/registry-facade:docker] [0m[0;32mpackage build succeded[0m [0;90m(32.32s)[0m

[0;32mbuild succeded[0m
leeway build components/server:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:lib                    [90m(version f89cd89f0266c6b19b4387d1e4f85d4f073fa0a6)[0m
[32mðŸ“¦  cached locally[0m  components/public-api/typescript:lib              [90m(version 00b470a6b57d72bc0ac974d35187056220f02623)[0m
[33mðŸ”§  build[0m           components/content-service-api/typescript:lib     [90m(version 9ef15aaf91ff92ab526adaf82b20c90e8ae9e2c3)[0m
[33mðŸ”§  build[0m           components/gitpod-db:lib                          [90m(version 9630afcc77897703d41588ebca3b6117492da292)[0m
[33mðŸ”§  build[0m           components/gitpod-messagebus:lib                  [90m(version d7f6ece1d434c2298f9046c3136f4cdab25faf0b)[0m
[33mðŸ”§  build[0m           components/ide-service-api/typescript:lib         [90m(version a3b5bca747971ae974e3152663532ca588cb585b)[0m
[33mðŸ”§  build[0m           components/image-builder-api/typescript:lib       [90m(version ea87c86e29745856e2bf4aa24ca1cea390c7d1ee)[0m
[33mðŸ”§  build[0m           components/server:app                             [90m(version 9b1814d45f179da46a06eed52b9ba222559a87c7)[0m
[33mðŸ”§  build[0m           components/server:docker                          [90m(version 47d8aabc80416ea19deb5f936f4795c23bb23d4f)[0m
[33mðŸ”§  build[0m           components/supervisor-api/typescript-grpcweb:lib  [90m(version 86faaa30923f6720ef40f0bc767e891cd59bcd82)[0m
[33mðŸ”§  build[0m           components/supervisor-api:proto                   [90m(version 24bebc3554898afca133a667ed9bebe71917c005)[0m
[33mðŸ”§  build[0m           components/usage-api/typescript:lib               [90m(version 41fc10f715b70a9f30820d9416d063082540142e)[0m
[33mðŸ”§  build[0m           components/ws-manager-api/typescript:lib          [90m(version d0ca896150ef526e348b918f811f673adcd8e800)[0m

[90m[components/content-service-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version 9ef15aaf91ff92ab526adaf82b20c90e8ae9e2c3)[0m
[90m[components/usage-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version 41fc10f715b70a9f30820d9416d063082540142e)[0m
[90m[components/gitpod-db:lib] [0m[33mbuild started[0m [0;90m(version 9630afcc77897703d41588ebca3b6117492da292)[0m
[90m[components/gitpod-messagebus:lib] [0m[33mbuild started[0m [0;90m(version d7f6ece1d434c2298f9046c3136f4cdab25faf0b)[0m
[90m[components/ide-service-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version a3b5bca747971ae974e3152663532ca588cb585b)[0m
[90m[components/supervisor-api:proto] [0m[33mbuild started[0m [0;90m(version 24bebc3554898afca133a667ed9bebe71917c005)[0m
[90m[components/supervisor-api:proto] [0m
[90m[components/supervisor-api:proto] [0m[0;32mpackage build succeded[0m [0;90m(0.02s)[0m
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[33mbuild started[0m [0;90m(version 86faaa30923f6720ef40f0bc767e891cd59bcd82)[0m
[90m[components/ide-service-api/typescript:lib] [0myarn install v1.22.19
[90m[components/content-service-api/typescript:lib] [0myarn install v1.22.19
[90m[components/supervisor-api/typescript-grpcweb:lib] [0myarn install v1.22.19
[90m[components/usage-api/typescript:lib] [0myarn install v1.22.19
[90m[components/gitpod-messagebus:lib] [0myarn install v1.22.19
[90m[components/gitpod-db:lib] [0myarn install v1.22.19
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mwarning Waiting for the other yarn instance to finish (124648)
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124648)
[90m[components/gitpod-messagebus:lib] [0mwarning Waiting for the other yarn instance to finish (124648)
[90m[components/usage-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124648)
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (124648)
[90m[components/content-service-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/content-service-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/content-service-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/content-service-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/content-service-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/content-service-api/typescript:lib] [0mDone in 7.64s.
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124717)
[90m[components/usage-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124717)
[90m[components/gitpod-messagebus:lib] [0mwarning Waiting for the other yarn instance to finish (124717)
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (124717)
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[1/4] Resolving packages...
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[2/4] Fetching packages...
[90m[components/content-service-api/typescript:lib] [0myarn run v1.22.19
[90m[components/content-service-api/typescript:lib] [0m$ mkdir -p lib; tsc && cp -f src/*.js src/*d.ts lib
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[3/4] Linking dependencies...
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mwarning " > @improbable-eng/grpc-web@0.14.1" has unmet peer dependency "google-protobuf@^3.14.0".
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[4/4] Building fresh packages...
[90m[components/supervisor-api/typescript-grpcweb:lib] [0msuccess Saved lockfile.
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mDone in 9.84s.
[90m[components/gitpod-messagebus:lib] [0mwarning Waiting for the other yarn instance to finish (124655)
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (124655)
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124655)
[90m[components/usage-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/supervisor-api/typescript-grpcweb:lib] [0myarn run v1.22.19
[90m[components/usage-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m$ sh build.sh
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mbuild.sh: 6: Bad substitution
[90m[components/content-service-api/typescript:lib] [0mDone in 2.52s.
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mDone in 0.56s.
[90m[components/content-service-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/content-service-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/9ef15aaf91ff92ab526adaf82b20c90e8ae9e2c3.tar.gz".
[90m[components/content-service-api/typescript:lib] [0mDone in 0.23s.
[90m[components/content-service-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(11.72s)[0m
[90m[components/image-builder-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version ea87c86e29745856e2bf4aa24ca1cea390c7d1ee)[0m
[90m[components/ws-manager-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version d0ca896150ef526e348b918f811f673adcd8e800)[0m
[90m[components/supervisor-api/typescript-grpcweb:lib] [0myarn pack v1.22.19
[90m[components/supervisor-api/typescript-grpcweb:lib] [0msuccess Wrote tarball to "/tmp/cache/86faaa30923f6720ef40f0bc767e891cd59bcd82.tar.gz".
[90m[components/supervisor-api/typescript-grpcweb:lib] [0mDone in 0.19s.
[90m[components/supervisor-api/typescript-grpcweb:lib] [0m[0;32mpackage build succeded[0m [0;90m(11.94s)[0m
[90m[components/image-builder-api/typescript:lib] [0myarn install v1.22.19
[90m[components/image-builder-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124655)
[90m[components/ws-manager-api/typescript:lib] [0myarn install v1.22.19
[90m[components/ws-manager-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124655)
[90m[components/usage-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/usage-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/usage-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/usage-api/typescript:lib] [0mDone in 15.49s.
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (124686)
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124686)
[90m[components/image-builder-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124686)
[90m[components/ws-manager-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124686)
[90m[components/gitpod-messagebus:lib] [0m[1/4] Resolving packages...
[90m[components/usage-api/typescript:lib] [0myarn run v1.22.19
[90m[components/usage-api/typescript:lib] [0m$ mkdir -p lib; tsc
[90m[components/gitpod-messagebus:lib] [0m[2/4] Fetching packages...
[90m[components/usage-api/typescript:lib] [0mDone in 3.95s.
[90m[components/gitpod-messagebus:lib] [0m[3/4] Linking dependencies...
[90m[components/usage-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/usage-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/41fc10f715b70a9f30820d9416d063082540142e.tar.gz".
[90m[components/usage-api/typescript:lib] [0mDone in 0.13s.
[90m[components/usage-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(20.81s)[0m
[90m[components/gitpod-messagebus:lib] [0m[4/4] Building fresh packages...
[90m[components/gitpod-messagebus:lib] [0msuccess Saved lockfile.
[90m[components/gitpod-messagebus:lib] [0m$ yarn clean && yarn build
[90m[components/gitpod-messagebus:lib] [0myarn run v1.22.19
[90m[components/gitpod-messagebus:lib] [0m$ yarn run rimraf lib
[90m[components/gitpod-messagebus:lib] [0m$ /tmp/build/components-gitpod-messagebus--lib.d7f6ece1d434c2298f9046c3136f4cdab25faf0b/node_modules/.bin/rimraf lib
[90m[components/gitpod-messagebus:lib] [0mDone in 0.48s.
[90m[components/gitpod-messagebus:lib] [0myarn run v1.22.19
[90m[components/gitpod-messagebus:lib] [0m$ npx tsc
[90m[components/gitpod-messagebus:lib] [0mDone in 4.39s.
[90m[components/gitpod-messagebus:lib] [0mDone in 26.80s.
[90m[components/ws-manager-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124978)
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (124978)
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124978)
[90m[components/image-builder-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/gitpod-messagebus:lib] [0myarn run v1.22.19
[90m[components/gitpod-messagebus:lib] [0m$ npx tsc
[90m[components/image-builder-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/image-builder-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/image-builder-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/image-builder-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/image-builder-api/typescript:lib] [0mDone in 19.54s.
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (125007)
[90m[components/gitpod-db:lib] [0mwarning Waiting for the other yarn instance to finish (125007)
[90m[components/ws-manager-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/gitpod-messagebus:lib] [0mDone in 4.38s.
[90m[components/ws-manager-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/image-builder-api/typescript:lib] [0myarn run v1.22.19
[90m[components/image-builder-api/typescript:lib] [0m$ tsc && cp -f src/*.js src/*d.ts lib
[90m[components/gitpod-messagebus:lib] [0myarn pack v1.22.19
[90m[components/gitpod-messagebus:lib] [0msuccess Wrote tarball to "/tmp/cache/d7f6ece1d434c2298f9046c3136f4cdab25faf0b.tar.gz".
[90m[components/gitpod-messagebus:lib] [0mDone in 0.19s.
[90m[components/gitpod-messagebus:lib] [0m[0;32mpackage build succeded[0m [0;90m(32.65s)[0m
[90m[components/ws-manager-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/image-builder-api/typescript:lib] [0mDone in 3.28s.
[90m[components/image-builder-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/image-builder-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/ea87c86e29745856e2bf4aa24ca1cea390c7d1ee.tar.gz".
[90m[components/image-builder-api/typescript:lib] [0mDone in 0.14s.
[90m[components/image-builder-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(24.34s)[0m
[90m[components/ws-manager-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/ws-manager-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/ws-manager-api/typescript:lib] [0mDone in 25.60s.
[90m[components/ide-service-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (124746)
[90m[components/gitpod-db:lib] [0m[1/4] Resolving packages...
[90m[components/ws-manager-api/typescript:lib] [0myarn run v1.22.19
[90m[components/ws-manager-api/typescript:lib] [0m$ tsc && cp -f src/*.js src/*d.ts lib
[90m[components/gitpod-db:lib] [0m[2/4] Fetching packages...
[90m[components/ws-manager-api/typescript:lib] [0mDone in 4.24s.
[90m[components/ws-manager-api/typescript:lib] [0myarn run v1.22.19
[90m[components/ws-manager-api/typescript:lib] [0m$ mocha --opts mocha.opts './**/*.spec.ts' --exclude './node_modules/**'
[90m[components/gitpod-db:lib] [0m[3/4] Linking dependencies...
[90m[components/ws-manager-api/typescript:lib] [0m
[90m[components/ws-manager-api/typescript:lib] [0m
[90m[components/ws-manager-api/typescript:lib] [0m  TestClientProvider
[90m[components/ws-manager-api/typescript:lib] [0m    âœ“ getStartClusterSets
[90m[components/ws-manager-api/typescript:lib] [0m    âœ“ testInvert
[90m[components/ws-manager-api/typescript:lib] [0m    âœ“ testIntersect
[90m[components/ws-manager-api/typescript:lib] [0m    âœ“ testConstraintNewWorkspaceCluster
[90m[components/ws-manager-api/typescript:lib] [0m
[90m[components/ws-manager-api/typescript:lib] [0m
[90m[components/ws-manager-api/typescript:lib] [0m  4 passing (47ms)
[90m[components/ws-manager-api/typescript:lib] [0m
[90m[components/ws-manager-api/typescript:lib] [0mDone in 5.39s.
[90m[components/gitpod-db:lib] [0m[4/4] Building fresh packages...
[90m[components/gitpod-db:lib] [0msuccess Saved lockfile.
[90m[components/gitpod-db:lib] [0m$ yarn clean && yarn build
[90m[components/ws-manager-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/gitpod-db:lib] [0myarn run v1.22.19
[90m[components/gitpod-db:lib] [0m$ yarn run rimraf lib
[90m[components/ws-manager-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/d0ca896150ef526e348b918f811f673adcd8e800.tar.gz".
[90m[components/ws-manager-api/typescript:lib] [0mDone in 0.16s.
[90m[components/ws-manager-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(37.19s)[0m
[90m[components/gitpod-db:lib] [0m$ /tmp/build/components-gitpod-db--lib.9630afcc77897703d41588ebca3b6117492da292/node_modules/.bin/rimraf lib
[90m[components/gitpod-db:lib] [0mDone in 0.52s.
[90m[components/gitpod-db:lib] [0myarn run v1.22.19
[90m[components/gitpod-db:lib] [0m$ npx tsc
[90m[components/gitpod-db:lib] [0mDone in 11.31s.
[90m[components/gitpod-db:lib] [0mDone in 60.48s.
[90m[components/ide-service-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/ide-service-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/gitpod-db:lib] [0myarn run v1.22.19
[90m[components/gitpod-db:lib] [0m$ npx tsc
[90m[components/ide-service-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/ide-service-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/ide-service-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/ide-service-api/typescript:lib] [0mDone in 63.20s.
[90m[components/ide-service-api/typescript:lib] [0myarn run v1.22.19
[90m[components/ide-service-api/typescript:lib] [0m$ mkdir -p lib; tsc
[90m[components/ide-service-api/typescript:lib] [0mDone in 2.94s.
[90m[components/ide-service-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/ide-service-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/a3b5bca747971ae974e3152663532ca588cb585b.tar.gz".
[90m[components/ide-service-api/typescript:lib] [0mDone in 0.12s.
[90m[components/ide-service-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(67.55s)[0m
[90m[components/gitpod-db:lib] [0mDone in 11.87s.
[90m[components/gitpod-db:lib] [0myarn pack v1.22.19
[90m[components/gitpod-db:lib] [0msuccess Wrote tarball to "/tmp/cache/9630afcc77897703d41588ebca3b6117492da292.tar.gz".
[90m[components/gitpod-db:lib] [0mDone in 1.05s.
[90m[components/gitpod-db:lib] [0m[0;32mpackage build succeded[0m [0;90m(74.96s)[0m
[90m[components/server:app] [0m[33mbuild started[0m [0;90m(version 9b1814d45f179da46a06eed52b9ba222559a87c7)[0m
[90m[components/server:app] [0myarn install v1.22.19
[90m[components/server:app] [0m[1/4] Resolving packages...
[90m[components/server:app] [0m[2/4] Fetching packages...
[90m[components/server:app] [0merror An unexpected error occurred: "https://registry.yarnpkg.com/@bufbuild/connect/-/connect-0.8.1.tgz: Request failed \"404 Not Found\"".
[90m[components/server:app] [0minfo If you think this is a bug, please open a bug report with the information provided in "/tmp/build/components-server--app.9b1814d45f179da46a06eed52b9ba222559a87c7/yarn-error.log".
[90m[components/server:app] [0minfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
[90m[components/server:app] [0mProcess stalled
[90m[components/server:app] [0mActive handles:
[90m[components/server:app] [0m  - Socket
[90m[components/server:app] [0m  - Socket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m  - TLSSocket
[90m[components/server:app] [0m[0;31mpackage build failed[0m
[90m[components/server:app] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:31:13Z" level=fatal msg="build failed"
leeway build components/service-waiter:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib          [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[33mðŸ”§  build[0m           components/service-waiter:app     [90m(version 974bd6b5658612b183dc92a731287ae575c99683)[0m
[33mðŸ”§  build[0m           components/service-waiter:docker  [90m(version 234747dc3897f15a1f2ee56718ff1945e0a0e46e)[0m

[90m[components/service-waiter:app] [0m[33mbuild started[0m [0;90m(version 974bd6b5658612b183dc92a731287ae575c99683)[0m
[90m[components/service-waiter:app] [0m?   	github.com/gitpod-io/gitpod/service-waiter	[no test files]
[90m[components/service-waiter:app] [0m?   	github.com/gitpod-io/gitpod/service-waiter/cmd	[no test files]
[90m[components/service-waiter:app] [0m[0;32mpackage build succeded[0m [0;90m(6.90s)[0m
[90m[components/service-waiter:docker] [0m[33mbuild started[0m [0;90m(version 234747dc3897f15a1f2ee56718ff1945e0a0e46e)[0m
[90m[components/service-waiter:docker] [0m#1 [internal] load .dockerignore
[90m[components/service-waiter:docker] [0m#1 transferring context: 2B done
[90m[components/service-waiter:docker] [0m#1 DONE 0.0s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/service-waiter:docker] [0m#2 transferring dockerfile: 688B done
[90m[components/service-waiter:docker] [0m#2 DONE 0.0s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/service-waiter:docker] [0m#3 DONE 1.0s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#4 [1/5] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/service-waiter:docker] [0m#4 DONE 0.0s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#5 [internal] load build context
[90m[components/service-waiter:docker] [0m#5 transferring context: 10.94MB 0.1s done
[90m[components/service-waiter:docker] [0m#5 DONE 0.1s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#6 [2/5] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates
[90m[components/service-waiter:docker] [0m#6 CACHED
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#7 [3/5] RUN adduser -S -D -H -h /app -u 31001 appuser
[90m[components/service-waiter:docker] [0m#7 CACHED
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#8 [4/5] COPY components-service-waiter--app/service-waiter /app/service-waiter
[90m[components/service-waiter:docker] [0m#8 DONE 0.5s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#9 [5/5] RUN chown -R appuser /app
[90m[components/service-waiter:docker] [0m#9 DONE 0.5s
[90m[components/service-waiter:docker] [0m
[90m[components/service-waiter:docker] [0m#10 exporting to image
[90m[components/service-waiter:docker] [0m#10 exporting layers 0.1s done
[90m[components/service-waiter:docker] [0m#10 writing image sha256:7b2d077dbc91c8fbc4ddac94136dff867f78e08458458d8abb0ec9251478d4b9 done
[90m[components/service-waiter:docker] [0m#10 naming to docker.io/library/234747dc3897f15a1f2ee56718ff1945e0a0e46e done
[90m[components/service-waiter:docker] [0m#10 DONE 0.1s
[90m[components/service-waiter:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/service-waiter]
[90m[components/service-waiter:docker] [0m1ad3c05c4555: Preparing
[90m[components/service-waiter:docker] [0m06ef09b12340: Preparing
[90m[components/service-waiter:docker] [0m07b57bc4ea35: Preparing
[90m[components/service-waiter:docker] [0m3b84c1aca3d0: Preparing
[90m[components/service-waiter:docker] [0m099cf1c15629: Preparing
[90m[components/service-waiter:docker] [0m099cf1c15629: Layer already exists
[90m[components/service-waiter:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/service-waiter:docker] [0m07b57bc4ea35: Layer already exists
[90m[components/service-waiter:docker] [0m1ad3c05c4555: Pushed
[90m[components/service-waiter:docker] [0m06ef09b12340: Pushed
[90m[components/service-waiter:docker] [0m20230515: digest: sha256:119c87df6f6623d93b9a2abc377c64a72e43c556649ed6245f22080010d74c52 size: 1368
[90m[components/service-waiter:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/service-waiter]
[90m[components/service-waiter:docker] [0m1ad3c05c4555: Preparing
[90m[components/service-waiter:docker] [0m06ef09b12340: Preparing
[90m[components/service-waiter:docker] [0m07b57bc4ea35: Preparing
[90m[components/service-waiter:docker] [0m3b84c1aca3d0: Preparing
[90m[components/service-waiter:docker] [0m099cf1c15629: Preparing
[90m[components/service-waiter:docker] [0m07b57bc4ea35: Layer already exists
[90m[components/service-waiter:docker] [0m1ad3c05c4555: Layer already exists
[90m[components/service-waiter:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/service-waiter:docker] [0m099cf1c15629: Layer already exists
[90m[components/service-waiter:docker] [0m06ef09b12340: Layer already exists
[90m[components/service-waiter:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-234747dc3897f15a1f2ee56718ff1945e0a0e46e: digest: sha256:119c87df6f6623d93b9a2abc377c64a72e43c556649ed6245f22080010d74c52 size: 1368
[90m[components/service-waiter:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/service-waiter:20230515
[90m[components/service-waiter:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/service-waiter:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-234747dc3897f15a1f2ee56718ff1945e0a0e46e
[90m[components/service-waiter:docker] [0m[0;32mpackage build succeded[0m [0;90m(22.11s)[0m

[0;32mbuild succeded[0m
leeway build components/supervisor:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                           [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib              [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:lib                     [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema           [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:lib                     [90m(version f89cd89f0266c6b19b4387d1e4f85d4f073fa0a6)[0m
[32mðŸ“¦  cached locally[0m  components/ide-metrics-api/go:lib                  [90m(version 43739a74f977f0038f18a99dcccb29f7544529da)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib                   [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api:proto                    [90m(version 24bebc3554898afca133a667ed9bebe71917c005)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                                 [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-cli:app                          [90m(version 52d70bf51917f6165f86083ccc1d017c017a1f20)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib                  [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/ide-metrics-api/typescript-grpcweb:lib  [90m(version 1e5f0bbde33a0769eefece2f9a18251270e6850f)[0m
[33mðŸ”§  build[0m           components/ide-metrics-api:proto                   [90m(version 0dc318cb9e555690968595fc91d991a518f5651b)[0m
[33mðŸ”§  build[0m           components/public-api/go:lib                       [90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[33mðŸ”§  build[0m           components/supervisor-api/typescript-grpc:lib      [90m(version b7cd8e43b23aca7f0fd604e169c4fe542a81b363)[0m
[33mðŸ”§  build[0m           components/supervisor/frontend:app                 [90m(version fb27ff5129fcbb84f27388c9184bdd8314676321)[0m
[33mðŸ”§  build[0m           components/supervisor/openssh:app                  [90m(version dc8c0d05f1253da461ee408a199b8d134ec38cce)[0m
[33mðŸ”§  build[0m           components/supervisor/openssh:docker-build         [90m(version 43b6e9affb3ac7db71fdd4666e36023d22d0982d)[0m
[33mðŸ”§  build[0m           components/supervisor:app                          [90m(version 3eca4cbd9e939284d8391822ebad51dee19ba306)[0m
[33mðŸ”§  build[0m           components/supervisor:docker                       [90m(version 8f1d0caddbe8be9a4f1e5e2c4a1a4d5ec793c559)[0m
[33mðŸ”§  build[0m           components/ws-daemon-api/go:lib                    [90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m

[90m[components/supervisor/openssh:docker-build] [0m[33mbuild started[0m [0;90m(version 43b6e9affb3ac7db71fdd4666e36023d22d0982d)[0m
[90m[components/public-api/go:lib] [0m[33mbuild started[0m [0;90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[90m[components/supervisor-api/typescript-grpc:lib] [0m[33mbuild started[0m [0;90m(version b7cd8e43b23aca7f0fd604e169c4fe542a81b363)[0m
[90m[components/ide-metrics-api:proto] [0m[33mbuild started[0m [0;90m(version 0dc318cb9e555690968595fc91d991a518f5651b)[0m
[90m[components/ws-daemon-api/go:lib] [0m[33mbuild started[0m [0;90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/ide-metrics-api:proto] [0m
[90m[components/ide-metrics-api:proto] [0m[0;32mpackage build succeded[0m [0;90m(0.02s)[0m
[90m[components/ide-metrics-api/typescript-grpcweb:lib] [0m[33mbuild started[0m [0;90m(version 1e5f0bbde33a0769eefece2f9a18251270e6850f)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/ide-metrics-api/typescript-grpcweb:lib] [0myarn install v1.22.19
[90m[components/supervisor-api/typescript-grpc:lib] [0myarn install v1.22.19
[90m[components/supervisor/openssh:docker-build] [0m#1 [internal] load .dockerignore
[90m[components/supervisor/openssh:docker-build] [0m#1 transferring context: 2B done
[90m[components/supervisor/openssh:docker-build] [0m#1 DONE 0.0s
[90m[components/supervisor/openssh:docker-build] [0m
[90m[components/supervisor/openssh:docker-build] [0m#2 [internal] load build definition from Dockerfile
[90m[components/supervisor/openssh:docker-build] [0m#2 transferring dockerfile: 2.35kB done
[90m[components/supervisor/openssh:docker-build] [0m#2 DONE 0.0s
[90m[components/supervisor/openssh:docker-build] [0m
[90m[components/supervisor/openssh:docker-build] [0m#3 [internal] load metadata for docker.io/library/alpine:3.17
[90m[components/supervisor-api/typescript-grpc:lib] [0mwarning Waiting for the other yarn instance to finish (127147)
[90m[components/ide-metrics-api/typescript-grpcweb:lib] [0m[1/4] Resolving packages...
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:31:45Z" level=fatal msg="build failed"
leeway build components/usage:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-db/go:lib            [90m(version 246d86ca765d95f854b6a17148338cfb8e63c40d)[0m
[33mðŸ”§  build[0m           components/public-api/go:lib           [90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[33mðŸ”§  build[0m           components/usage-api/go:lib            [90m(version 1a5c03850f0608a4a3f0b04a5a3f8fe099fb6290)[0m
[33mðŸ”§  build[0m           components/usage:app                   [90m(version 8f8815edf8a3719ad312ba031a89062dae891091)[0m
[33mðŸ”§  build[0m           components/usage:docker                [90m(version 47ba303f61f5bcb139ac7610a6a8546128efdfc8)[0m

[90m[components/usage-api/go:lib] [0m[33mbuild started[0m [0;90m(version 1a5c03850f0608a4a3f0b04a5a3f8fe099fb6290)[0m
[90m[components/public-api/go:lib] [0m[33mbuild started[0m [0;90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[90m[components/usage-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/usage-api/v1	[no test files]
[90m[components/usage-api/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(1.05s)[0m
[90m[components/public-api/go:lib] [0m# github.com/bufbuild/connect-go
[90m[components/public-api/go:lib] [0m/root/go/pkg/mod/github.com/bufbuild/connect-go@v1.5.2/envelope.go:213:21: undefined: asMaxBytesError
[90m[components/public-api/go:lib] [0m/root/go/pkg/mod/github.com/bufbuild/connect-go@v1.5.2/envelope.go:243:23: undefined: asMaxBytesError
[90m[components/public-api/go:lib] [0m/root/go/pkg/mod/github.com/bufbuild/connect-go@v1.5.2/protocol_connect.go:848:25: undefined: asMaxBytesError
[90m[components/public-api/go:lib] [0mnote: module requires Go 1.19
[90m[components/public-api/go:lib] [0mFAIL	github.com/gitpod-io/gitpod/components/public-api/go/client [build failed]
[90m[components/public-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/components/public-api/go/config	[no test files]
[90m[components/public-api/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/public-api/go:lib] [0m[1;37mReason:[0m exit status 2
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:31:49Z" level=fatal msg="build failed"
leeway build components/workspace-rollout-job:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib     [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:gitpod-schema  [90m(version 4b1460c0ca7709548e2c44045af5c0ac308ad5c0)[0m
[32mðŸ“¦  cached locally[0m  components/image-builder-api/go:lib       [90m(version f3356a7c025f2a15bb686b61c78ab5a090ad51ff)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib     [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/go:lib          [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[32mðŸ“¦  cached locally[0m  dev/addlicense:app                        [90m(version c35bdb971ce46a3d0f58075e55b22b6b9d1432ea)[0m
[33mðŸ”§  build[0m           components/gitpod-protocol/go:lib         [90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[33mðŸ”§  build[0m           components/public-api/go:lib              [90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[33mðŸ”§  build[0m           components/workspace-rollout-job:app      [90m(version 3a4646539c92dfe34b5cd92c01e8b7043665526a)[0m
[33mðŸ”§  build[0m           components/workspace-rollout-job:docker   [90m(version 7f871f337d7f201e67f06baa399920cea2112599)[0m
[33mðŸ”§  build[0m           components/ws-daemon-api/go:lib           [90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[33mðŸ”§  build[0m           components/ws-manager-bridge-api/go:lib   [90m(version 3341ae5f7589396b608bbc3da0a9f17e02dcc81e)[0m
[33mðŸ”§  build[0m           dev/gpctl:lib                             [90m(version b1ae476a7bb5552c6f6a77712d01f3f777af68cc)[0m

[90m[components/ws-manager-bridge-api/go:lib] [0m[33mbuild started[0m [0;90m(version 3341ae5f7589396b608bbc3da0a9f17e02dcc81e)[0m
[90m[components/gitpod-protocol/go:lib] [0m[33mbuild started[0m [0;90m(version 38ea6b1bb6576c811bcf8663895aef08b957654f)[0m
[90m[components/public-api/go:lib] [0m[33mbuild started[0m [0;90m(version 681d058ee2760cdd795729d35787f7680afd2fde)[0m
[90m[components/ws-daemon-api/go:lib] [0m[33mbuild started[0m [0;90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[90m[components/gitpod-protocol/go:lib] [0mComponent Path: ./scripts/..
[90m[components/gitpod-protocol/go:lib] [0mConfig Path: ./_deps/components-gitpod-protocol--gitpod-schema/gitpod-schema.json
[90m[components/gitpod-protocol/go:lib] [0mConfig Types Path: ./scripts/../gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m./scripts/generate-config.sh: line 33: gofmt: command not found
[90m[components/gitpod-protocol/go:lib] [0mdiff --git a/gitpod-config-types.go b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0mindex f563ead..c64ab94 100644
[90m[components/gitpod-protocol/go:lib] [0m--- a/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m+++ b/gitpod-config-types.go
[90m[components/gitpod-protocol/go:lib] [0m@@ -6,25 +6,26 @@
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m package protocol
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// AdditionalRepositoriesItems
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m+// AdditionalRepositoriesItems 
[90m[components/gitpod-protocol/go:lib] [0m type AdditionalRepositoriesItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m-	Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The url of the git repository to clone. Supports any context URLs.
[90m[components/gitpod-protocol/go:lib] [0m+  Url string `yaml:"url" json:"url"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // CoreDump Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m type CoreDump struct {
[90m[components/gitpod-protocol/go:lib] [0m-	Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  Enabled bool `yaml:"enabled,omitempty" json:"enabled,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m-	HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // the hard limit acts as a ceiling for the soft limit. For more details please check https://man7.org/linux/man-pages/man2/getrlimit.2.html
[90m[components/gitpod-protocol/go:lib] [0m+  HardLimit float64 `yaml:"hardLimit,omitempty" json:"hardLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m-	SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // upper limit on the size of the core dump file that will be produced if it receives a core dump signal
[90m[components/gitpod-protocol/go:lib] [0m+  SoftLimit float64 `yaml:"softLimit,omitempty" json:"softLimit,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Env Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m@@ -34,192 +35,193 @@ type Env struct {
[90m[components/gitpod-protocol/go:lib] [0m // Github Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m type Github struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds interface{} `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// GitpodConfig
[90m[components/gitpod-protocol/go:lib] [0m+// GitpodConfig 
[90m[components/gitpod-protocol/go:lib] [0m type GitpodConfig struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m-	AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of additional repositories that are part of this project.
[90m[components/gitpod-protocol/go:lib] [0m+  AdditionalRepositories []*AdditionalRepositoriesItems `yaml:"additionalRepositories,omitempty" json:"additionalRepositories,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m-	CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the repository should be checked out relative to `/workspace`. Defaults to the simple repository name.
[90m[components/gitpod-protocol/go:lib] [0m+  CheckoutLocation string `yaml:"checkoutLocation,omitempty" json:"checkoutLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m-	CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure the default action of certain signals is to cause a process to terminate and produce a core dump file, a file containing an image of the process's memory at the time of termination. Disabled by default.
[90m[components/gitpod-protocol/go:lib] [0m+  CoreDump *CoreDump `yaml:"coreDump,omitempty" json:"coreDump,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m-	ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Experimental network configuration in workspaces (deprecated). Enabled by default
[90m[components/gitpod-protocol/go:lib] [0m+  ExperimentalNetwork bool `yaml:"experimentalNetwork,omitempty" json:"experimentalNetwork,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m-	GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Git config values should be provided in pairs. E.g. `core.autocrlf: input`. See https://git-scm.com/docs/git-config#_values.
[90m[components/gitpod-protocol/go:lib] [0m+  GitConfig map[string]string `yaml:"gitConfig,omitempty" json:"gitConfig,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m-	Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configures Gitpod's GitHub app
[90m[components/gitpod-protocol/go:lib] [0m+  Github *Github `yaml:"github,omitempty" json:"github,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m-	Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m+  Image interface{} `yaml:"image,omitempty" json:"image,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m-	Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m+  Jetbrains *Jetbrains `yaml:"jetbrains,omitempty" json:"jetbrains,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m-	MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main repository, containing the dev environment configuration.
[90m[components/gitpod-protocol/go:lib] [0m+  MainConfiguration string `yaml:"mainConfiguration,omitempty" json:"mainConfiguration,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m-	Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of exposed ports.
[90m[components/gitpod-protocol/go:lib] [0m+  Ports []*PortsItems `yaml:"ports,omitempty" json:"ports,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m-	Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of tasks to run on start. Each task will open a terminal in the IDE.
[90m[components/gitpod-protocol/go:lib] [0m+  Tasks []*TasksItems `yaml:"tasks,omitempty" json:"tasks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m-	Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m+  Vscode *Vscode `yaml:"vscode,omitempty" json:"vscode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m-	WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Path to where the IDE's workspace should be opened. Supports vscode's `*.code-workspace` files.
[90m[components/gitpod-protocol/go:lib] [0m+  WorkspaceLocation string `yaml:"workspaceLocation,omitempty" json:"workspaceLocation,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Image_object The Docker image to run your workspace in.
[90m[components/gitpod-protocol/go:lib] [0m type Image_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m-	Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to the context path (optional). Should only be set if you need to copy files into the image.
[90m[components/gitpod-protocol/go:lib] [0m+  Context string `yaml:"context,omitempty" json:"context,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m-	File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Relative path to a docker file.
[90m[components/gitpod-protocol/go:lib] [0m+  File string `yaml:"file" json:"file"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Jetbrains Configure JetBrains integration
[90m[components/gitpod-protocol/go:lib] [0m type Jetbrains struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m-	Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure CLion integration
[90m[components/gitpod-protocol/go:lib] [0m+  Clion *JetbrainsProduct `yaml:"clion,omitempty" json:"clion,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m-	Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure GoLand integration
[90m[components/gitpod-protocol/go:lib] [0m+  Goland *JetbrainsProduct `yaml:"goland,omitempty" json:"goland,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m-	Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure IntelliJ integration
[90m[components/gitpod-protocol/go:lib] [0m+  Intellij *JetbrainsProduct `yaml:"intellij,omitempty" json:"intellij,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PhpStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Phpstorm *JetbrainsProduct `yaml:"phpstorm,omitempty" json:"phpstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for all JetBrains product for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure PyCharm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Pycharm *JetbrainsProduct `yaml:"pycharm,omitempty" json:"pycharm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure Rider integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rider *JetbrainsProduct `yaml:"rider,omitempty" json:"rider,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m-	Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure RubyMine integration
[90m[components/gitpod-protocol/go:lib] [0m+  Rubymine *JetbrainsProduct `yaml:"rubymine,omitempty" json:"rubymine,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m-	Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure WebStorm integration
[90m[components/gitpod-protocol/go:lib] [0m+  Webstorm *JetbrainsProduct `yaml:"webstorm,omitempty" json:"webstorm,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// JetbrainsProduct
[90m[components/gitpod-protocol/go:lib] [0m+// JetbrainsProduct 
[90m[components/gitpod-protocol/go:lib] [0m type JetbrainsProduct struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m-	Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of plugins which should be installed for users of this workspace. From the JetBrains Marketplace page, find a page of the required plugin, select 'Versions' tab, click any version to copy pluginId (short name such as org.rust.lang) of the plugin you want to install.
[90m[components/gitpod-protocol/go:lib] [0m+  Plugins []string `yaml:"plugins,omitempty" json:"plugins,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuilds *Prebuilds `yaml:"prebuilds,omitempty" json:"prebuilds,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m-	Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Configure JVM options, for instance '-Xmx=4096m'.
[90m[components/gitpod-protocol/go:lib] [0m+  Vmoptions string `yaml:"vmoptions,omitempty" json:"vmoptions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// PortsItems
[90m[components/gitpod-protocol/go:lib] [0m+// PortsItems 
[90m[components/gitpod-protocol/go:lib] [0m type PortsItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m-	Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A description to identify what is this port used for.
[90m[components/gitpod-protocol/go:lib] [0m+  Description string `yaml:"description,omitempty" json:"description,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Port name.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Port name.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m-	OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // What to do when a service on this port was detected. 'notify' (default) will show a notification asking the user what to do. 'open-browser' will open a new browser tab. 'open-preview' will open in the preview on the right of the IDE. 'ignore' will do nothing.
[90m[components/gitpod-protocol/go:lib] [0m+  OnOpen string `yaml:"onOpen,omitempty" json:"onOpen,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m-	Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The port number (e.g. 1337) or range (e.g. 3000-3999) to expose.
[90m[components/gitpod-protocol/go:lib] [0m+  Port interface{} `yaml:"port" json:"port"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m-	Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The protocol to be used. (deprecated)
[90m[components/gitpod-protocol/go:lib] [0m+  Protocol string `yaml:"protocol,omitempty" json:"protocol,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m-	Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether the port visibility should be private or public. 'private' (default) will only allow users with workspace access to access the port. 'public' will allow everyone with the port URL to access the port.
[90m[components/gitpod-protocol/go:lib] [0m+  Visibility string `yaml:"visibility,omitempty" json:"visibility,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds Enable warming up of JetBrains backend in prebuilds.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m-	Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Whether only stable, latest or both versions should be warmed up. Default is stable only.
[90m[components/gitpod-protocol/go:lib] [0m+  Version string `yaml:"version,omitempty" json:"version,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Prebuilds_object Set to true to enable workspace prebuilds, false to disable them. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m type Prebuilds_object struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a Review in Gitpod badge to pull requests. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddBadge bool `yaml:"addBadge,omitempty" json:"addBadge,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a commit check to pull requests. Set to 'fail-on-error' if you want broken prebuilds to block merging. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  AddCheck interface{} `yaml:"addCheck,omitempty" json:"addCheck,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Add a label to a PR when it's prebuilt. Set to true to use the default label (prebuilt-in-gitpod) or set to a string to use a different label name. This is a beta feature and may be unreliable. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  AddLabel interface{} `yaml:"addLabel,omitempty" json:"addLabel,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for all branches. Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  Branches bool `yaml:"branches,omitempty" json:"branches,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for the default branch (typically master). Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  Master bool `yaml:"master,omitempty" json:"master,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from the original repo. Defaults to true.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequests bool `yaml:"pullRequests,omitempty" json:"pullRequests,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m-	PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Enable prebuilds for pull-requests from any repo (e.g. from forks). Defaults to false.
[90m[components/gitpod-protocol/go:lib] [0m+  PullRequestsFromForks bool `yaml:"pullRequestsFromForks,omitempty" json:"pullRequestsFromForks,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-// TasksItems
[90m[components/gitpod-protocol/go:lib] [0m+// TasksItems 
[90m[components/gitpod-protocol/go:lib] [0m type TasksItems struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run before `init` and the main `command`. This command is executed on every start and is expected to terminate. If it fails, the following commands will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Before string `yaml:"before,omitempty" json:"before,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m-	Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The main shell command to run after `before` and `init`. This command is executed last on every start and doesn't have to terminate.
[90m[components/gitpod-protocol/go:lib] [0m+  Command string `yaml:"command,omitempty" json:"command,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m-	Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Environment variables to set.
[90m[components/gitpod-protocol/go:lib] [0m+  Env *Env `yaml:"env,omitempty" json:"env,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m-	Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run between `before` and the main `command`. This command is executed only on after initializing a workspace with a fresh clone, but not on restarts and snapshots. This command is expected to terminate. If it fails, the `command` property will not be executed.
[90m[components/gitpod-protocol/go:lib] [0m+  Init string `yaml:"init,omitempty" json:"init,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m-	Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // Name of the task. Shown on the tab of the opened terminal.
[90m[components/gitpod-protocol/go:lib] [0m+  Name string `yaml:"name,omitempty" json:"name,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The panel/area where to open the terminal. Default is 'bottom' panel.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenIn string `yaml:"openIn,omitempty" json:"openIn,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m-	OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // The opening mode. Default is 'tab-after'.
[90m[components/gitpod-protocol/go:lib] [0m+  OpenMode string `yaml:"openMode,omitempty" json:"openMode,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m-	Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // A shell command to run after `before`. This command is executed only on during workspace prebuilds. This command is expected to terminate. If it fails, the workspace build fails.
[90m[components/gitpod-protocol/go:lib] [0m+  Prebuild string `yaml:"prebuild,omitempty" json:"prebuild,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m // Vscode Configure VS Code integration
[90m[components/gitpod-protocol/go:lib] [0m type Vscode struct {
[90m[components/gitpod-protocol/go:lib] [0m 
[90m[components/gitpod-protocol/go:lib] [0m-	// List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m-	Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m+  // List of extensions which should be installed for users of this workspace. The identifier of an extension is always '${publisher}.${name}'. For example: 'vscode.csharp'.
[90m[components/gitpod-protocol/go:lib] [0m+  Extensions []string `yaml:"extensions,omitempty" json:"extensions,omitempty"`
[90m[components/gitpod-protocol/go:lib] [0m }
[90m[components/gitpod-protocol/go:lib] [0m+
[90m[components/gitpod-protocol/go:lib] [0m[0;31mpackage build failed[0m
[90m[components/gitpod-protocol/go:lib] [0m[1;37mReason:[0m exit status 1
[0;31mbuild failed[0m
[1;37mReason:[0m build failed
time="2023-05-15T09:31:51Z" level=fatal msg="build failed"
leeway build components/workspacekit:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib   [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[33mðŸ”§  build[0m           components/workspacekit:app             [90m(version 756aa7c161e4caff879190d25bd7c803bb04578c)[0m
[33mðŸ”§  build[0m           components/workspacekit:docker          [90m(version 773e2497a6793aab9b72eba0848c2aeb590a1168)[0m
[33mðŸ”§  build[0m           components/workspacekit:fuse-overlayfs  [90m(version 09cecf3b02a095ff2ca6faa4e36f9cb7406f9bef)[0m
[33mðŸ”§  build[0m           components/ws-daemon-api/go:lib         [90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m

[90m[components/workspacekit:fuse-overlayfs] [0m[33mbuild started[0m [0;90m(version 09cecf3b02a095ff2ca6faa4e36f9cb7406f9bef)[0m
[90m[components/ws-daemon-api/go:lib] [0m[33mbuild started[0m [0;90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[90m[components/workspacekit:fuse-overlayfs] [0m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
[90m[components/workspacekit:fuse-overlayfs] [0m                                 Dload  Upload   Total   Spent    Left  Speed
[90m[components/workspacekit:fuse-overlayfs] [0m  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
[90m[components/ws-daemon-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/api	[no test files]
[90m[components/ws-daemon-api/go:lib] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/api/mock	[no test files]
[90m[components/ws-daemon-api/go:lib] [0m[0;32mpackage build succeded[0m [0;90m(0.96s)[0m
[90m[components/workspacekit:app] [0m[33mbuild started[0m [0;90m(version 756aa7c161e4caff879190d25bd7c803bb04578c)[0m
[90m[components/workspacekit:fuse-overlayfs] [0m  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 2404k  100 2404k    0     0  2488k      0 --:--:-- --:--:-- --:--:-- 5907k
[90m[components/workspacekit:fuse-overlayfs] [0m[0;32mpackage build succeded[0m [0;90m(1.24s)[0m
[90m[components/workspacekit:app] [0m?   	github.com/gitpod-io/gitpod/workspacekit	[no test files]
[90m[components/workspacekit:app] [0m=== RUN   TestFindBindMountCandidates
[90m[components/workspacekit:app] [0m=== RUN   TestFindBindMountCandidates/no_configmap
[90m[components/workspacekit:app] [0m=== RUN   TestFindBindMountCandidates/without_/workspace
[90m[components/workspacekit:app] [0m=== RUN   TestFindBindMountCandidates/with_configmap
[90m[components/workspacekit:app] [0m--- PASS: TestFindBindMountCandidates (0.00s)
[90m[components/workspacekit:app] [0m    --- PASS: TestFindBindMountCandidates/no_configmap (0.00s)
[90m[components/workspacekit:app] [0m    --- PASS: TestFindBindMountCandidates/without_/workspace (0.00s)
[90m[components/workspacekit:app] [0m    --- PASS: TestFindBindMountCandidates/with_configmap (0.00s)
[90m[components/workspacekit:app] [0mPASS
[90m[components/workspacekit:app] [0mok  	github.com/gitpod-io/gitpod/workspacekit/cmd	0.012s
[90m[components/workspacekit:app] [0m?   	github.com/gitpod-io/gitpod/workspacekit/pkg/lift	[no test files]
[90m[components/workspacekit:app] [0m?   	github.com/gitpod-io/gitpod/workspacekit/pkg/readarg	[no test files]
[90m[components/workspacekit:app] [0m?   	github.com/gitpod-io/gitpod/workspacekit/pkg/seccomp	[no test files]
[90m[components/workspacekit:app] [0m# github.com/gitpod-io/gitpod/workspacekit
[90m[components/workspacekit:app] [0m/usr/bin/ld: /tmp/go-link-133756627/000007.o: in function `_cgo_6cc2654a8ed3_C2func_getaddrinfo':
[90m[components/workspacekit:app] [0m/tmp/go-build/cgo-gcc-prolog:58: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
[90m[components/workspacekit:app] [0m[0;32mpackage build succeded[0m [0;90m(9.46s)[0m
[90m[components/workspacekit:docker] [0m[33mbuild started[0m [0;90m(version 773e2497a6793aab9b72eba0848c2aeb590a1168)[0m
[90m[components/workspacekit:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/workspacekit:docker] [0m#1 transferring dockerfile: 481B done
[90m[components/workspacekit:docker] [0m#1 DONE 0.0s
[90m[components/workspacekit:docker] [0m
[90m[components/workspacekit:docker] [0m#2 [internal] load .dockerignore
[90m[components/workspacekit:docker] [0m#2 transferring context: 2B done
[90m[components/workspacekit:docker] [0m#2 DONE 0.0s
[90m[components/workspacekit:docker] [0m
[90m[components/workspacekit:docker] [0m#3 [internal] load build context
[90m[components/workspacekit:docker] [0m#3 transferring context: 15.37MB 0.2s done
[90m[components/workspacekit:docker] [0m#3 DONE 0.2s
[90m[components/workspacekit:docker] [0m
[90m[components/workspacekit:docker] [0m#4 [1/1] COPY components-workspacekit--app/workspacekit      components-workspacekit--fuse-overlayfs/fuse-overlayfs      /.supervisor/
[90m[components/workspacekit:docker] [0m#4 DONE 0.1s
[90m[components/workspacekit:docker] [0m
[90m[components/workspacekit:docker] [0m#5 exporting to image
[90m[components/workspacekit:docker] [0m#5 exporting layers 0.1s done
[90m[components/workspacekit:docker] [0m#5 writing image sha256:14510f83dfde61f8e3955eda48e2021ed64813027360c8315d6f0d062cec1060 done
[90m[components/workspacekit:docker] [0m#5 naming to docker.io/library/773e2497a6793aab9b72eba0848c2aeb590a1168 done
[90m[components/workspacekit:docker] [0m#5 DONE 0.1s
[90m[components/workspacekit:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/workspacekit]
[90m[components/workspacekit:docker] [0m69d32d28cd00: Preparing
[90m[components/workspacekit:docker] [0m69d32d28cd00: Pushed
[90m[components/workspacekit:docker] [0m20230515: digest: sha256:7843e1471de7122cd8402d2f0e67e2ed16b4de2e7b479dd3052e0bbb93ce82c9 size: 528
[90m[components/workspacekit:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/workspacekit]
[90m[components/workspacekit:docker] [0m69d32d28cd00: Preparing
[90m[components/workspacekit:docker] [0m69d32d28cd00: Layer already exists
[90m[components/workspacekit:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-773e2497a6793aab9b72eba0848c2aeb590a1168: digest: sha256:7843e1471de7122cd8402d2f0e67e2ed16b4de2e7b479dd3052e0bbb93ce82c9 size: 528
[90m[components/workspacekit:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/workspacekit:20230515
[90m[components/workspacekit:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/workspacekit:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-773e2497a6793aab9b72eba0848c2aeb590a1168
[90m[components/workspacekit:docker] [0m[0;32mpackage build succeded[0m [0;90m(18.95s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-daemon/seccomp-profile-installer:docker -Dversion=20230515
[33mðŸ”§  build[0m  components/ws-daemon/seccomp-profile-installer:app      [90m(version 770cae60dfdb5cbb47243b96b01a132c6df082bb)[0m
[33mðŸ”§  build[0m  components/ws-daemon/seccomp-profile-installer:docker   [90m(version 2103a59fdd4f184231fadb443d872c0fffea9ed6)[0m
[33mðŸ”§  build[0m  components/ws-daemon/seccomp-profile-installer:profile  [90m(version 5713a989f6ca5559254109bdcfb25033ce3f7e9a)[0m
[33mðŸ”§  build[0m  components/ws-manager:userns-test-fixtures              [90m(version 95d3797f321d6379792a5c5496fdb4d2a80b3785)[0m

[90m[components/ws-daemon/seccomp-profile-installer:app] [0m[33mbuild started[0m [0;90m(version 770cae60dfdb5cbb47243b96b01a132c6df082bb)[0m
[90m[components/ws-manager:userns-test-fixtures] [0m[33mbuild started[0m [0;90m(version 95d3797f321d6379792a5c5496fdb4d2a80b3785)[0m
[90m[components/ws-manager:userns-test-fixtures] [0m[0;32mpackage build succeded[0m [0;90m(0.01s)[0m
[90m[components/ws-daemon/seccomp-profile-installer:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/seccomp-profile-installer	[no test files]
[90m[components/ws-daemon/seccomp-profile-installer:app] [0m[0;32mpackage build succeded[0m [0;90m(4.69s)[0m
[90m[components/ws-daemon/seccomp-profile-installer:profile] [0m[33mbuild started[0m [0;90m(version 5713a989f6ca5559254109bdcfb25033ce3f7e9a)[0m
[90m[components/ws-daemon/seccomp-profile-installer:profile] [0msh: 1: jq: not found
[90m[components/ws-daemon/seccomp-profile-installer:profile] [0m[0;32mpackage build succeded[0m [0;90m(0.86s)[0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m[33mbuild started[0m [0;90m(version 2103a59fdd4f184231fadb443d872c0fffea9ed6)[0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#1 transferring dockerfile: 536B done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#1 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#2 [internal] load .dockerignore
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#2 transferring context: 2B done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#2 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#3 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#4 [1/4] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#4 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#5 [internal] load build context
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#5 transferring context: 9.90kB done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#5 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#6 [3/4] WORKDIR /installer
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#6 CACHED
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#7 [2/4] RUN  apk upgrade --no-cache
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#7 CACHED
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#8 [4/4] COPY components-ws-daemon-seccomp-profile-installer--profile/workspace_default.json .
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#8 CACHED
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#9 exporting to image
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#9 exporting layers done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#9 writing image sha256:a493332e8d55046b6055b67955387123bf3399fe8c4c2510201beaa12ab93e1d done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#9 naming to docker.io/library/2103a59fdd4f184231fadb443d872c0fffea9ed6 done
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m#9 DONE 0.0s
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/seccomp-profile-installer]
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m1d9313ed306e: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m028095a455d2: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m62c59aa5733e: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m099cf1c15629: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m62c59aa5733e: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m1d9313ed306e: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m028095a455d2: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m20230515: digest: sha256:890280653d371f9bdf203391308431010e0c340d1287472e6890e52322fe2673 size: 1151
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/seccomp-profile-installer]
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m1d9313ed306e: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m028095a455d2: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m62c59aa5733e: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m099cf1c15629: Preparing
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m62c59aa5733e: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m028095a455d2: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m1d9313ed306e: Layer already exists
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:890280653d371f9bdf203391308431010e0c340d1287472e6890e52322fe2673 size: 1151
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/seccomp-profile-installer:20230515
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/seccomp-profile-installer:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/ws-daemon/seccomp-profile-installer:docker] [0m[0;32mpackage build succeded[0m [0;90m(10.59s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-daemon:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib                  [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib     [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:lib            [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[32mðŸ“¦  cached locally[0m  components/ws-daemon-api/go:lib           [90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/go:lib          [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[33mðŸ”§  build[0m           components/ws-daemon/nsinsider:app        [90m(version 48541aec5f2c025700e0802144ff124c5b667855)[0m
[33mðŸ”§  build[0m           components/ws-daemon:app                  [90m(version fc5f8ec195c83d54384845c18023e922c15009f7)[0m
[33mðŸ”§  build[0m           components/ws-daemon:content-initializer  [90m(version be37666279b95bf93d75f6eb13e7486b7cc4d3e3)[0m
[33mðŸ”§  build[0m           components/ws-daemon:docker               [90m(version f5630ac5e4fc54e9ffcbb855f8f97c39ab3bd036)[0m

[90m[components/ws-daemon/nsinsider:app] [0m[33mbuild started[0m [0;90m(version 48541aec5f2c025700e0802144ff124c5b667855)[0m
[90m[components/ws-daemon:app] [0m[33mbuild started[0m [0;90m(version fc5f8ec195c83d54384845c18023e922c15009f7)[0m
[90m[components/ws-daemon:content-initializer] [0m[33mbuild started[0m [0;90m(version be37666279b95bf93d75f6eb13e7486b7cc4d3e3)[0m
[90m[components/ws-daemon/nsinsider:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/nsinsider	[no test files]
[90m[components/ws-daemon/nsinsider:app] [0m# github.com/gitpod-io/gitpod/ws-daemon/nsinsider
[90m[components/ws-daemon/nsinsider:app] [0m/usr/bin/ld: /tmp/go-link-4110384934/000004.o: in function `_cgo_6cc2654a8ed3_C2func_getaddrinfo':
[90m[components/ws-daemon/nsinsider:app] [0m/tmp/go-build/cgo-gcc-prolog:58: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
[90m[components/ws-daemon/nsinsider:app] [0m[0;32mpackage build succeded[0m [0;90m(21.90s)[0m
[90m[components/ws-daemon:content-initializer] [0m[0;32mpackage build succeded[0m [0;90m(57.59s)[0m
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/cmd	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/cmd/content-initializer	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/cgroup	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/config	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/container	[no test files]
[90m[components/ws-daemon:app] [0m=== RUN   TestFSShiftMethodUnmarshalJSON
[90m[components/ws-daemon:app] [0m=== RUN   TestFSShiftMethodUnmarshalJSON/shiftfs
[90m[components/ws-daemon:app] [0m=== RUN   TestFSShiftMethodUnmarshalJSON/fuse
[90m[components/ws-daemon:app] [0m--- PASS: TestFSShiftMethodUnmarshalJSON (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestFSShiftMethodUnmarshalJSON/shiftfs (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestFSShiftMethodUnmarshalJSON/fuse (0.00s)
[90m[components/ws-daemon:app] [0mPASS
[90m[components/ws-daemon:app] [0mok  	github.com/gitpod-io/gitpod/ws-daemon/pkg/content	0.030s
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/controller	[no test files]
[90m[components/ws-daemon:app] [0m=== RUN   TestCfsSetLimit
[90m[components/ws-daemon:app] [0m--- PASS: TestCfsSetLimit (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestReadCfsQuota
[90m[components/ws-daemon:app] [0m--- PASS: TestReadCfsQuota (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestReadCfsPeriod
[90m[components/ws-daemon:app] [0m--- PASS: TestReadCfsPeriod (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestReadCpuUsage
[90m[components/ws-daemon:app] [0m--- PASS: TestReadCpuUsage (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuotaAndPeriod
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuotaAndPeriod/0
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuotaAndPeriod/mag10_period
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuotaAndPeriod/non_mag10_period
[90m[components/ws-daemon:app] [0m--- PASS: TestBandwidthFromQuotaAndPeriod (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuotaAndPeriod/0 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuotaAndPeriod/mag10_period (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuotaAndPeriod/non_mag10_period (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuantity
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuantity/0
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuantity/full_CPUs
[90m[components/ws-daemon:app] [0m=== RUN   TestBandwidthFromQuantity/milli_CPUs
[90m[components/ws-daemon:app] [0m--- PASS: TestBandwidthFromQuantity (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuantity/0 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuantity/full_CPUs (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBandwidthFromQuantity/milli_CPUs (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/0
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/0_period
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/1_to_1ms
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/1_to_100ms
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/mag10
[90m[components/ws-daemon:app] [0m=== RUN   TestQuota/not_mag10
[90m[components/ws-daemon:app] [0m--- PASS: TestQuota (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/0 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/0_period (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/1_to_1ms (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/1_to_100ms (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/mag10 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestQuota/not_mag10 (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestIntegrate
[90m[components/ws-daemon:app] [0m=== RUN   TestIntegrate/0
[90m[components/ws-daemon:app] [0m=== RUN   TestIntegrate/1_CPU_second
[90m[components/ws-daemon:app] [0m=== RUN   TestIntegrate/1_CPU_minute
[90m[components/ws-daemon:app] [0m--- PASS: TestIntegrate (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestIntegrate/0 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestIntegrate/1_CPU_second (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestIntegrate/1_CPU_minute (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsEatAll
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsEatAll (0.04s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsSine
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsSine (0.03s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsMiner
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsMiner (0.15s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsMixedQoS
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsMixedQoS (0.16s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsMaxConsumer
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsMaxConsumer (0.16s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimitsNewProdBehaviour
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimitsNewProdBehaviour (0.14s)
[90m[components/ws-daemon:app] [0m=== RUN   TestProdBehaviour
[90m[components/ws-daemon:app] [0m--- PASS: TestProdBehaviour (0.12s)
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/empty_bucket_list
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/in_first_bucket
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/in_second_bucket
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/in_third_bucket
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/in_last_bucket
[90m[components/ws-daemon:app] [0m=== RUN   TestBucketLimiter/beyond_total_budget
[90m[components/ws-daemon:app] [0m--- PASS: TestBucketLimiter (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/empty_bucket_list (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/in_first_bucket (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/in_second_bucket (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/in_third_bucket (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/in_last_bucket (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestBucketLimiter/beyond_total_budget (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestUnmarshalBucket
[90m[components/ws-daemon:app] [0m=== RUN   TestUnmarshalBucket/0
[90m[components/ws-daemon:app] [0m--- PASS: TestUnmarshalBucket (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestUnmarshalBucket/0 (0.00s)
[90m[components/ws-daemon:app] [0mPASS
[90m[components/ws-daemon:app] [0mok  	github.com/gitpod-io/gitpod/ws-daemon/pkg/cpulimit	0.838s
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/daemon	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/diskguard	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/dispatch	[no test files]
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping/empty_store
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping/with_state_file
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping/no_state_file
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping/daemon_dir_with_state_file
[90m[components/ws-daemon:app] [0m=== RUN   TestDoHousekeeping/daemon_dir_no_state_file
[90m[components/ws-daemon:app] [0m--- PASS: TestDoHousekeeping (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestDoHousekeeping/empty_store (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestDoHousekeeping/with_state_file (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestDoHousekeeping/no_state_file (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestDoHousekeeping/daemon_dir_with_state_file (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestDoHousekeeping/daemon_dir_no_state_file (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestPersistAndLoadWorkspace
[90m[components/ws-daemon:app] [0m--- PASS: TestPersistAndLoadWorkspace (0.01s)
[90m[components/ws-daemon:app] [0m=== RUN   TestWaitForInit
[90m[components/ws-daemon:app] [0m--- PASS: TestWaitForInit (1.50s)
[90m[components/ws-daemon:app] [0m=== RUN   TestWaitOrMarkForDisposalRace
[90m[components/ws-daemon:app] [0m    workspace_test.go:224: num go routines: 1002
[90m[components/ws-daemon:app] [0m--- PASS: TestWaitOrMarkForDisposalRace (1.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestWaitOrMarkForDisposal
[90m[components/ws-daemon:app] [0m--- PASS: TestWaitOrMarkForDisposal (1.00s)
[90m[components/ws-daemon:app] [0mPASS
[90m[components/ws-daemon:app] [0mok  	github.com/gitpod-io/gitpod/ws-daemon/pkg/internal/session	3.531s
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/iws	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/netlimit	[no test files]
[90m[components/ws-daemon:app] [0m?   	github.com/gitpod-io/gitpod/ws-daemon/pkg/nsinsider	[no test files]
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs/no_projects
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs/single_project
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs/multiple_projects_none_used
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs/multiple_projects_in_use
[90m[components/ws-daemon:app] [0m=== RUN   TestGetUsedProjectIDs/exec_failure
[90m[components/ws-daemon:app] [0m--- PASS: TestGetUsedProjectIDs (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestGetUsedProjectIDs/no_projects (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestGetUsedProjectIDs/single_project (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestGetUsedProjectIDs/multiple_projects_none_used (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestGetUsedProjectIDs/multiple_projects_in_use (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestGetUsedProjectIDs/exec_failure (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestSetQuota
[90m[components/ws-daemon:app] [0m=== RUN   TestSetQuota/happpy_path
[90m[components/ws-daemon:app] [0m=== RUN   TestSetQuota/with_soft_limit
[90m[components/ws-daemon:app] [0m=== RUN   TestSetQuota/with_other_prj
[90m[components/ws-daemon:app] [0m=== RUN   TestSetQuota/prj_creation_failure
[90m[components/ws-daemon:app] [0m--- PASS: TestSetQuota (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestSetQuota/happpy_path (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestSetQuota/with_soft_limit (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestSetQuota/with_other_prj (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestSetQuota/prj_creation_failure (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/42
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/42k
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/42m
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/42g
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/42t
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/-42m
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/ab-42mcd
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/abc
[90m[components/ws-daemon:app] [0m=== RUN   TestParseSize/99999999999999999999999999999999999999999999999999999999999999999999999999999999
[90m[components/ws-daemon:app] [0m--- PASS: TestParseSize (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/42 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/42k (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/42m (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/42g (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/42t (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/-42m (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/ab-42mcd (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/abc (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestParseSize/99999999999999999999999999999999999999999999999999999999999999999999999999999999 (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/42
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((42).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/42k
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((42k).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/42m
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((42m).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/42g
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((42g).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/42t
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((42t).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/0
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((0).String())
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/0#01
[90m[components/ws-daemon:app] [0m=== RUN   TestStringSize/Parse((0).String())#01
[90m[components/ws-daemon:app] [0m--- PASS: TestStringSize (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/42 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((42).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/42k (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((42k).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/42m (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((42m).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/42g (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((42g).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/42t (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((42t).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/0 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((0).String()) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/0#01 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestStringSize/Parse((0).String())#01 (0.00s)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(42)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("42")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(42k)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("42k")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(42m)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("42m")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(42g)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("42g")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(42t)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("42t")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(0)
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("0")
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(0)#01
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("0")#01
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.marshal(0)#02
[90m[components/ws-daemon:app] [0m=== RUN   TestMarshalUnmarshal/json.unmarshal("")
[90m[components/ws-daemon:app] [0m--- PASS: TestMarshalUnmarshal (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(42) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("42") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(42k) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("42k") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(42m) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("42m") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(42g) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("42g") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(42t) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("42t") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(0) (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("0") (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(0)#01 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("0")#01 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.marshal(0)#02 (0.00s)
[90m[components/ws-daemon:app] [0m    --- PASS: TestMarshalUnmarshal/json.unmarshal("") (0.00s)
[90m[components/ws-daemon:app] [0mPASS
[90m[components/ws-daemon:app] [0mok  	github.com/gitpod-io/gitpod/ws-daemon/pkg/quota	0.019s
[90m[components/ws-daemon:app] [0m[0;32mpackage build succeded[0m [0;90m(140.23s)[0m
[90m[components/ws-daemon:docker] [0m[33mbuild started[0m [0;90m(version f5630ac5e4fc54e9ffcbb855f8f97c39ab3bd036)[0m
[90m[components/ws-daemon:docker] [0m#1 [internal] load .dockerignore
[90m[components/ws-daemon:docker] [0m#1 transferring context: 2B done
[90m[components/ws-daemon:docker] [0m#1 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/ws-daemon:docker] [0m#2 transferring dockerfile: 2.91kB 0.0s done
[90m[components/ws-daemon:docker] [0m#2 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-daemon:docker] [0m#3 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#4 [internal] load metadata for docker.io/library/ubuntu:22.04
[90m[components/ws-daemon:docker] [0m#4 DONE 1.7s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#5 [dl 1/3] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-daemon:docker] [0m#5 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#6 [stage-1 1/9] FROM docker.io/library/ubuntu:22.04@sha256:dfd64a3b4296d8c9b62aa3309984f8620b98d87e47492599ee20739e8eb54fbf
[90m[components/ws-daemon:docker] [0m#6 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#7 [internal] load build context
[90m[components/ws-daemon:docker] [0m#7 transferring context: 124.63MB 1.3s done
[90m[components/ws-daemon:docker] [0m#7 DONE 1.3s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#8 [stage-1 2/9] RUN apt update   && apt dist-upgrade -y   && apt install -yq --no-install-recommends       software-properties-common gnupg   && add-apt-repository ppa:git-core/ppa -y   && apt install -yq --no-install-recommends       git git-lfs openssh-client lz4 e2fsprogs coreutils tar strace xfsprogs curl ca-certificates       apt-transport-https       python3-crcmod       aria2       lvm2   && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list   && curl -sSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -   && apt update && apt install -y --no-install-recommends  google-cloud-sdk=402.0.0-0   && gcloud config set core/disable_usage_reporting true   && gcloud config set component_manager/disable_update_check true   && gcloud config set metrics/environment github_docker_image   && gcloud --version   && apt-get clean -y   && rm -rf     /var/cache/debconf/*     /var/lib/apt/lists/*     /tmp/*     /var/tmp/*
[90m[components/ws-daemon:docker] [0m#8 CACHED
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#9 [dl 2/3] WORKDIR /dl
[90m[components/ws-daemon:docker] [0m#9 CACHED
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#10 [dl 3/3] RUN apk add --no-cache curl file   && curl -OsSL https://github.com/opencontainers/runc/releases/download/v1.1.6/runc.amd64   && chmod +x runc.amd64   && if ! file runc.amd64 | grep -iq "ELF 64-bit LSB executable"; then echo "runc.amd64 is not a binary file"; exit 1;fi
[90m[components/ws-daemon:docker] [0m#10 CACHED
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#11 [stage-1 3/9] COPY --from=dl /dl/runc.amd64 /usr/bin/runc
[90m[components/ws-daemon:docker] [0m#11 CACHED
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#12 [stage-1 4/9] RUN groupadd -r -g 33333 gitpod   && useradd -r -u 33333 -md /home/gitpod -s /bin/bash -g gitpod gitpod   && usermod -a -G gitpod gitpod
[90m[components/ws-daemon:docker] [0m#12 CACHED
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#13 [stage-1 5/9] COPY components-ws-daemon--app/ws-daemon /app/ws-daemond
[90m[components/ws-daemon:docker] [0m#13 DONE 1.2s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#14 [stage-1 6/9] COPY components-ws-daemon--content-initializer/ws-daemon /app/content-initializer
[90m[components/ws-daemon:docker] [0m#14 DONE 0.1s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#15 [stage-1 7/9] COPY components-ws-daemon-nsinsider--app/nsinsider /app/nsinsider
[90m[components/ws-daemon:docker] [0m#15 DONE 0.1s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#16 [stage-1 8/9] COPY default.gitconfig /etc/gitconfig
[90m[components/ws-daemon:docker] [0m#16 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#17 [stage-1 9/9] COPY default.gitconfig /home/gitpod/.gitconfig
[90m[components/ws-daemon:docker] [0m#17 DONE 0.0s
[90m[components/ws-daemon:docker] [0m
[90m[components/ws-daemon:docker] [0m#18 exporting to image
[90m[components/ws-daemon:docker] [0m#18 exporting layers
[90m[components/ws-daemon:docker] [0m#18 exporting layers 0.6s done
[90m[components/ws-daemon:docker] [0m#18 writing image sha256:b0c68876ee6b6d73b950dfbf581144dc0934ca6e3f14a11a0107f90851046679 done
[90m[components/ws-daemon:docker] [0m#18 naming to docker.io/library/f5630ac5e4fc54e9ffcbb855f8f97c39ab3bd036 done
[90m[components/ws-daemon:docker] [0m#18 DONE 0.6s
[90m[components/ws-daemon:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-daemon]
[90m[components/ws-daemon:docker] [0me2ab3d530ea1: Preparing
[90m[components/ws-daemon:docker] [0ma5a0433062f1: Preparing
[90m[components/ws-daemon:docker] [0m80b9e428bca1: Preparing
[90m[components/ws-daemon:docker] [0mce3e130e8ee1: Preparing
[90m[components/ws-daemon:docker] [0m8767ff1eaf05: Preparing
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Preparing
[90m[components/ws-daemon:docker] [0me2a4d166593e: Preparing
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Preparing
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Preparing
[90m[components/ws-daemon:docker] [0me2a4d166593e: Waiting
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Waiting
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Waiting
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Waiting
[90m[components/ws-daemon:docker] [0ma5a0433062f1: Pushed
[90m[components/ws-daemon:docker] [0me2ab3d530ea1: Pushed
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Layer already exists
[90m[components/ws-daemon:docker] [0me2a4d166593e: Layer already exists
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Layer already exists
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Layer already exists
[90m[components/ws-daemon:docker] [0m80b9e428bca1: Pushed
[90m[components/ws-daemon:docker] [0mce3e130e8ee1: Pushed
[90m[components/ws-daemon:docker] [0m8767ff1eaf05: Pushed
[90m[components/ws-daemon:docker] [0m20230515: digest: sha256:378d46f4093e003dd6736a10f7e45085ad8a6e367b72a9f2add5472c283b9c08 size: 2210
[90m[components/ws-daemon:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-daemon]
[90m[components/ws-daemon:docker] [0me2ab3d530ea1: Preparing
[90m[components/ws-daemon:docker] [0ma5a0433062f1: Preparing
[90m[components/ws-daemon:docker] [0m80b9e428bca1: Preparing
[90m[components/ws-daemon:docker] [0mce3e130e8ee1: Preparing
[90m[components/ws-daemon:docker] [0m8767ff1eaf05: Preparing
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Preparing
[90m[components/ws-daemon:docker] [0me2a4d166593e: Preparing
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Preparing
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Preparing
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Waiting
[90m[components/ws-daemon:docker] [0me2a4d166593e: Waiting
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Waiting
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Waiting
[90m[components/ws-daemon:docker] [0me2ab3d530ea1: Layer already exists
[90m[components/ws-daemon:docker] [0m8767ff1eaf05: Layer already exists
[90m[components/ws-daemon:docker] [0m80b9e428bca1: Layer already exists
[90m[components/ws-daemon:docker] [0mce3e130e8ee1: Layer already exists
[90m[components/ws-daemon:docker] [0ma5a0433062f1: Layer already exists
[90m[components/ws-daemon:docker] [0mb8a36d10656a: Layer already exists
[90m[components/ws-daemon:docker] [0me5d2b6ef4f2b: Layer already exists
[90m[components/ws-daemon:docker] [0m795bae7e80c3: Layer already exists
[90m[components/ws-daemon:docker] [0me2a4d166593e: Layer already exists
[90m[components/ws-daemon:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-f5630ac5e4fc54e9ffcbb855f8f97c39ab3bd036: digest: sha256:378d46f4093e003dd6736a10f7e45085ad8a6e367b72a9f2add5472c283b9c08 size: 2210
[90m[components/ws-daemon:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-daemon:20230515
[90m[components/ws-daemon:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-daemon:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-f5630ac5e4fc54e9ffcbb855f8f97c39ab3bd036
[90m[components/ws-daemon:docker] [0m[0;32mpackage build succeded[0m [0;90m(36.22s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-manager-bridge:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/content-service-api/typescript:lib    [90m(version 9ef15aaf91ff92ab526adaf82b20c90e8ae9e2c3)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-db:lib                         [90m(version 9630afcc77897703d41588ebca3b6117492da292)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-messagebus:lib                 [90m(version d7f6ece1d434c2298f9046c3136f4cdab25faf0b)[0m
[32mðŸ“¦  cached locally[0m  components/gitpod-protocol:lib                   [90m(version f89cd89f0266c6b19b4387d1e4f85d4f073fa0a6)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/typescript:lib         [90m(version d0ca896150ef526e348b918f811f673adcd8e800)[0m
[33mðŸ”§  build[0m           components/ws-daemon-api/typescript:lib          [90m(version 0d35a969a3abd01f99615460fdd29a9266366414)[0m
[33mðŸ”§  build[0m           components/ws-manager-bridge-api/typescript:lib  [90m(version 5b4f6442cd1069c2d4563d5fc4a0ff9c78d736fe)[0m
[33mðŸ”§  build[0m           components/ws-manager-bridge:app                 [90m(version 5af75bf9392efe199da3dd59759848d7070e446b)[0m
[33mðŸ”§  build[0m           components/ws-manager-bridge:docker              [90m(version 6f1e9aa44b3b61e730562bb24845fb20869eae71)[0m

[90m[components/ws-daemon-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version 0d35a969a3abd01f99615460fdd29a9266366414)[0m
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[33mbuild started[0m [0;90m(version 5b4f6442cd1069c2d4563d5fc4a0ff9c78d736fe)[0m
[90m[components/ws-manager-bridge-api/typescript:lib] [0myarn install v1.22.19
[90m[components/ws-daemon-api/typescript:lib] [0myarn install v1.22.19
[90m[components/ws-manager-bridge-api/typescript:lib] [0mwarning Waiting for the other yarn instance to finish (143666)
[90m[components/ws-daemon-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/ws-daemon-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/ws-daemon-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/ws-daemon-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/ws-daemon-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/ws-daemon-api/typescript:lib] [0mDone in 7.77s.
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[1/4] Resolving packages...
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[2/4] Fetching packages...
[90m[components/ws-daemon-api/typescript:lib] [0myarn run v1.22.19
[90m[components/ws-daemon-api/typescript:lib] [0m$ tsc && cp -f src/*.js src/*d.ts lib
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[3/4] Linking dependencies...
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[4/4] Building fresh packages...
[90m[components/ws-daemon-api/typescript:lib] [0mDone in 2.54s.
[90m[components/ws-daemon-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/ws-daemon-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/0d35a969a3abd01f99615460fdd29a9266366414.tar.gz".
[90m[components/ws-daemon-api/typescript:lib] [0mDone in 0.15s.
[90m[components/ws-manager-bridge-api/typescript:lib] [0msuccess Saved lockfile.
[90m[components/ws-manager-bridge-api/typescript:lib] [0mDone in 11.56s.
[90m[components/ws-daemon-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(11.83s)[0m
[90m[components/ws-manager-bridge-api/typescript:lib] [0myarn run v1.22.19
[90m[components/ws-manager-bridge-api/typescript:lib] [0m$ mkdir -p lib; tsc && cp -f src/*.js src/*d.ts lib
[90m[components/ws-manager-bridge-api/typescript:lib] [0mDone in 2.30s.
[90m[components/ws-manager-bridge-api/typescript:lib] [0myarn pack v1.22.19
[90m[components/ws-manager-bridge-api/typescript:lib] [0msuccess Wrote tarball to "/tmp/cache/5b4f6442cd1069c2d4563d5fc4a0ff9c78d736fe.tar.gz".
[90m[components/ws-manager-bridge-api/typescript:lib] [0mDone in 0.15s.
[90m[components/ws-manager-bridge-api/typescript:lib] [0m[0;32mpackage build succeded[0m [0;90m(15.27s)[0m
[90m[components/ws-manager-bridge:app] [0m[33mbuild started[0m [0;90m(version 5af75bf9392efe199da3dd59759848d7070e446b)[0m
[90m[components/ws-manager-bridge:app] [0myarn install v1.22.19
[90m[components/ws-manager-bridge:app] [0m[1/4] Resolving packages...
[90m[components/ws-manager-bridge:app] [0m[2/4] Fetching packages...
[90m[components/ws-manager-bridge:app] [0m[3/4] Linking dependencies...
[90m[components/ws-manager-bridge:app] [0m[4/4] Building fresh packages...
[90m[components/ws-manager-bridge:app] [0msuccess Saved lockfile.
[90m[components/ws-manager-bridge:app] [0m$ yarn clean && yarn build
[90m[components/ws-manager-bridge:app] [0myarn run v1.22.19
[90m[components/ws-manager-bridge:app] [0m$ rimraf dist
[90m[components/ws-manager-bridge:app] [0mDone in 0.20s.
[90m[components/ws-manager-bridge:app] [0myarn run v1.22.19
[90m[components/ws-manager-bridge:app] [0m$ npx tsc
[90m[components/ws-manager-bridge:app] [0mDone in 6.54s.
[90m[components/ws-manager-bridge:app] [0mDone in 23.75s.
[90m[components/ws-manager-bridge:app] [0myarn run v1.22.19
[90m[components/ws-manager-bridge:app] [0m$ npx tsc
[90m[components/ws-manager-bridge:app] [0mDone in 6.44s.
[90m[components/ws-manager-bridge:app] [0myarn run v1.22.19
[90m[components/ws-manager-bridge:app] [0m$ mocha --opts mocha.opts './**/*.spec.ts' --exclude './node_modules/**'
[90m[components/ws-manager-bridge:app] [0m
[90m[components/ws-manager-bridge:app] [0m
[90m[components/ws-manager-bridge:app] [0m  TestPrebuildStateMapper
[90m[components/ws-manager-bridge:app] [0m    âœ“ testAll
[90m[components/ws-manager-bridge:app] [0m
[90m[components/ws-manager-bridge:app] [0m
[90m[components/ws-manager-bridge:app] [0m  1 passing (9ms)
[90m[components/ws-manager-bridge:app] [0m
[90m[components/ws-manager-bridge:app] [0mDone in 5.45s.
[90m[components/ws-manager-bridge:app] [0myarn pack v1.22.19
[90m[components/ws-manager-bridge:app] [0msuccess Wrote tarball to "_mirror/components-ws-manager-bridge--app.tar.gz".
[90m[components/ws-manager-bridge:app] [0mDone in 0.23s.
[90m[components/ws-manager-bridge:app] [0m[0;32mpackage build succeded[0m [0;90m(39.04s)[0m
[90m[components/ws-manager-bridge:docker] [0m[33mbuild started[0m [0;90m(version 6f1e9aa44b3b61e730562bb24845fb20869eae71)[0m
[90m[components/ws-manager-bridge:docker] [0m#1 [internal] load .dockerignore
[90m[components/ws-manager-bridge:docker] [0m#1 transferring context: 2B done
[90m[components/ws-manager-bridge:docker] [0m#1 DONE 0.0s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#2 [internal] load build definition from Dockerfile
[90m[components/ws-manager-bridge:docker] [0m#2 transferring dockerfile: 837B done
[90m[components/ws-manager-bridge:docker] [0m#2 DONE 0.0s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#3 [internal] load metadata for docker.io/library/node:16.13.0-slim
[90m[components/ws-manager-bridge:docker] [0m#3 DONE 1.7s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#4 [builder 1/4] FROM docker.io/library/node:16.13.0-slim@sha256:a5eecf2ee53935cb7974dfff42260d97289d61be9d7a2062c693be93c0cdcd7a
[90m[components/ws-manager-bridge:docker] [0m#4 DONE 0.0s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#5 [internal] load build context
[90m[components/ws-manager-bridge:docker] [0m#5 transferring context: 27.81MB 0.4s done
[90m[components/ws-manager-bridge:docker] [0m#5 DONE 0.4s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#4 [builder 1/4] FROM docker.io/library/node:16.13.0-slim@sha256:a5eecf2ee53935cb7974dfff42260d97289d61be9d7a2062c693be93c0cdcd7a
[90m[components/ws-manager-bridge:docker] [0m#4 CACHED
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#6 [builder 2/4] COPY components-ws-manager-bridge--app /installer/
[90m[components/ws-manager-bridge:docker] [0m#6 DONE 0.4s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#7 [builder 3/4] WORKDIR /app
[90m[components/ws-manager-bridge:docker] [0m#7 DONE 0.0s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#8 [builder 4/4] RUN /installer/install.sh
[90m[components/ws-manager-bridge:docker] [0m#8 0.857 yarn install v1.22.15
[90m[components/ws-manager-bridge:docker] [0m#8 0.991 [1/4] Resolving packages...
[90m[components/ws-manager-bridge:docker] [0m#8 1.263 [2/4] Fetching packages...
[90m[components/ws-manager-bridge:docker] [0m#8 14.31 [3/4] Linking dependencies...
[90m[components/ws-manager-bridge:docker] [0m#8 18.72 [4/4] Building fresh packages...
[90m[components/ws-manager-bridge:docker] [0m#8 18.94 success Saved lockfile.
[90m[components/ws-manager-bridge:docker] [0m#8 18.94 Done in 18.09s.
[90m[components/ws-manager-bridge:docker] [0m#8 DONE 19.6s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#9 [stage-1 2/4] RUN useradd --no-log-init --create-home --uid 31002 --home-dir /app/ unode
[90m[components/ws-manager-bridge:docker] [0m#9 CACHED
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#10 [stage-1 3/4] COPY --from=builder /app /app/
[90m[components/ws-manager-bridge:docker] [0m#10 DONE 2.3s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#11 [stage-1 4/4] WORKDIR /app/node_modules/@gitpod/ws-manager-bridge
[90m[components/ws-manager-bridge:docker] [0m#11 DONE 0.0s
[90m[components/ws-manager-bridge:docker] [0m
[90m[components/ws-manager-bridge:docker] [0m#12 exporting to image
[90m[components/ws-manager-bridge:docker] [0m#12 exporting layers
[90m[components/ws-manager-bridge:docker] [0m#12 exporting layers 2.2s done
[90m[components/ws-manager-bridge:docker] [0m#12 writing image sha256:7fa49fb1b3db6e8fe58335f04f7f312867a580a2d13988e727d25c4331d6e655 done
[90m[components/ws-manager-bridge:docker] [0m#12 naming to docker.io/library/6f1e9aa44b3b61e730562bb24845fb20869eae71 done
[90m[components/ws-manager-bridge:docker] [0m#12 DONE 2.2s
[90m[components/ws-manager-bridge:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-bridge]
[90m[components/ws-manager-bridge:docker] [0m5f70bf18a086: Preparing
[90m[components/ws-manager-bridge:docker] [0m9ab158b87f2c: Preparing
[90m[components/ws-manager-bridge:docker] [0m37118d9ebdb8: Preparing
[90m[components/ws-manager-bridge:docker] [0m136969bf8ce0: Preparing
[90m[components/ws-manager-bridge:docker] [0m13fbff443a13: Preparing
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Preparing
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Waiting
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Preparing
[90m[components/ws-manager-bridge:docker] [0m77b323d4ec74: Preparing
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Waiting
[90m[components/ws-manager-bridge:docker] [0m5f70bf18a086: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m136969bf8ce0: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m37118d9ebdb8: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m13fbff443a13: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m77b323d4ec74: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m9ab158b87f2c: Pushed
[90m[components/ws-manager-bridge:docker] [0m20230515: digest: sha256:192919817bae271c2433e2e6758360ce6cd114544832c82fde4337726ab6db2a size: 1993
[90m[components/ws-manager-bridge:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-bridge]
[90m[components/ws-manager-bridge:docker] [0m5f70bf18a086: Preparing
[90m[components/ws-manager-bridge:docker] [0m9ab158b87f2c: Preparing
[90m[components/ws-manager-bridge:docker] [0m37118d9ebdb8: Preparing
[90m[components/ws-manager-bridge:docker] [0m136969bf8ce0: Preparing
[90m[components/ws-manager-bridge:docker] [0m13fbff443a13: Preparing
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Preparing
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Preparing
[90m[components/ws-manager-bridge:docker] [0m77b323d4ec74: Preparing
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Waiting
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Waiting
[90m[components/ws-manager-bridge:docker] [0m77b323d4ec74: Waiting
[90m[components/ws-manager-bridge:docker] [0m9ab158b87f2c: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m5f70bf18a086: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m136969bf8ce0: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m37118d9ebdb8: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m13fbff443a13: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m77b323d4ec74: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m04c1192e5a97: Layer already exists
[90m[components/ws-manager-bridge:docker] [0m273a11942b27: Layer already exists
[90m[components/ws-manager-bridge:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297: digest: sha256:192919817bae271c2433e2e6758360ce6cd114544832c82fde4337726ab6db2a size: 1993
[90m[components/ws-manager-bridge:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-bridge:20230515
[90m[components/ws-manager-bridge:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-bridge:commit-2d17e04d750c74d2078d1e9a8d40dee820199297
[90m[components/ws-manager-bridge:docker] [0m[0;32mpackage build succeded[0m [0;90m(56.50s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-manager-mk2:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:lib         [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[32mðŸ“¦  cached locally[0m  components/image-builder-api/go:lib    [90m(version f3356a7c025f2a15bb686b61c78ab5a090ad51ff)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/go:lib       [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[33mðŸ”§  build[0m           components/ws-manager-mk2:app          [90m(version aafff066c61b4ce13bf3ef5027834a061e5d88d4)[0m
[33mðŸ”§  build[0m           components/ws-manager-mk2:docker       [90m(version 7e0346142127f5bdae368bb713711ff07efa2f1f)[0m

[90m[components/ws-manager-mk2:app] [0m[33mbuild started[0m [0;90m(version aafff066c61b4ce13bf3ef5027834a061e5d88d4)[0m
[90m[components/ws-manager-mk2:app] [0m[0;32mpackage build succeded[0m [0;90m(20.34s)[0m
[90m[components/ws-manager-mk2:docker] [0m[33mbuild started[0m [0;90m(version 7e0346142127f5bdae368bb713711ff07efa2f1f)[0m
[90m[components/ws-manager-mk2:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/ws-manager-mk2:docker] [0m#1 transferring dockerfile: 665B done
[90m[components/ws-manager-mk2:docker] [0m#1 DONE 0.0s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#2 [internal] load .dockerignore
[90m[components/ws-manager-mk2:docker] [0m#2 transferring context: 2B done
[90m[components/ws-manager-mk2:docker] [0m#2 DONE 0.0s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#3 [internal] load metadata for docker.io/library/alpine:3.15
[90m[components/ws-manager-mk2:docker] [0m#3 DONE 2.4s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#4 [1/3] FROM docker.io/library/alpine:3.15@sha256:ecbdce53b2c2f43ab1b19418bcbd3f120a23547d9497030c8d978114512b883e
[90m[components/ws-manager-mk2:docker] [0m#4 DONE 0.0s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#5 [internal] load build context
[90m[components/ws-manager-mk2:docker] [0m#5 transferring context: 38.42MB 0.4s done
[90m[components/ws-manager-mk2:docker] [0m#5 DONE 0.4s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#6 [2/3] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates bash tar
[90m[components/ws-manager-mk2:docker] [0m#6 CACHED
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#7 [3/3] COPY components-ws-manager-mk2--app/ws-manager-mk2 /app/ws-manager
[90m[components/ws-manager-mk2:docker] [0m#7 DONE 0.6s
[90m[components/ws-manager-mk2:docker] [0m
[90m[components/ws-manager-mk2:docker] [0m#8 exporting to image
[90m[components/ws-manager-mk2:docker] [0m#8 exporting layers
[90m[components/ws-manager-mk2:docker] [0m#8 exporting layers 0.2s done
[90m[components/ws-manager-mk2:docker] [0m#8 writing image sha256:eadd37e01a79176cf34a564d63522955db0ad5696bb2ae57ae4a0e91b343508e done
[90m[components/ws-manager-mk2:docker] [0m#8 naming to docker.io/library/7e0346142127f5bdae368bb713711ff07efa2f1f done
[90m[components/ws-manager-mk2:docker] [0m#8 DONE 0.2s
[90m[components/ws-manager-mk2:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-mk2]
[90m[components/ws-manager-mk2:docker] [0mffdad89297fb: Preparing
[90m[components/ws-manager-mk2:docker] [0m6634aab84ac7: Preparing
[90m[components/ws-manager-mk2:docker] [0m49f62469da76: Preparing
[90m[components/ws-manager-mk2:docker] [0m6634aab84ac7: Layer already exists
[90m[components/ws-manager-mk2:docker] [0m49f62469da76: Layer already exists
[90m[components/ws-manager-mk2:docker] [0mffdad89297fb: Pushed
[90m[components/ws-manager-mk2:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-7e0346142127f5bdae368bb713711ff07efa2f1f: digest: sha256:6ce403b82200b4753c9b90eb80683733682553dd5f94d67ec0605a28d9ea1c92 size: 951
[90m[components/ws-manager-mk2:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager-mk2:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-7e0346142127f5bdae368bb713711ff07efa2f1f
[90m[components/ws-manager-mk2:docker] [0m[0;32mpackage build succeded[0m [0;90m(22.34s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-manager:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:lib         [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[32mðŸ“¦  cached locally[0m  components/image-builder-api/go:lib    [90m(version f3356a7c025f2a15bb686b61c78ab5a090ad51ff)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/ws-daemon-api/go:lib        [90m(version 5e30c7f23629b55906fc61687ac866eb31e30f94)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/go:lib       [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[33mðŸ”§  build[0m           components/ws-manager:app              [90m(version cd2853d4a15164b6d656e5b4cc2a96ce5abdd976)[0m
[33mðŸ”§  build[0m           components/ws-manager:docker           [90m(version e93349375336f41d79c4fc54135bd3fc3249a563)[0m

[90m[components/ws-manager:app] [0m[33mbuild started[0m [0;90m(version cd2853d4a15164b6d656e5b4cc2a96ce5abdd976)[0m
[90m[components/ws-manager:app] [0m[0;32mpackage build succeded[0m [0;90m(25.45s)[0m
[90m[components/ws-manager:docker] [0m[33mbuild started[0m [0;90m(version e93349375336f41d79c4fc54135bd3fc3249a563)[0m
[90m[components/ws-manager:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/ws-manager:docker] [0m#1 transferring dockerfile: 697B done
[90m[components/ws-manager:docker] [0m#1 DONE 0.0s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#2 [internal] load .dockerignore
[90m[components/ws-manager:docker] [0m#2 transferring context: 2B done
[90m[components/ws-manager:docker] [0m#2 DONE 0.0s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-manager:docker] [0m#3 DONE 0.0s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#4 [1/3] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-manager:docker] [0m#4 DONE 0.0s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#5 [internal] load build context
[90m[components/ws-manager:docker] [0m#5 transferring context: 52.74MB 0.5s done
[90m[components/ws-manager:docker] [0m#5 DONE 0.5s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#6 [2/3] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates
[90m[components/ws-manager:docker] [0m#6 CACHED
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#7 [3/3] COPY components-ws-manager--app/ws-manager /app/ws-manager
[90m[components/ws-manager:docker] [0m#7 DONE 0.6s
[90m[components/ws-manager:docker] [0m
[90m[components/ws-manager:docker] [0m#8 exporting to image
[90m[components/ws-manager:docker] [0m#8 exporting layers
[90m[components/ws-manager:docker] [0m#8 exporting layers 0.3s done
[90m[components/ws-manager:docker] [0m#8 writing image sha256:a763c90f06fc112a740b1d47b4e03b2f0611b5d19b64fbe2cc4f856350e45dee done
[90m[components/ws-manager:docker] [0m#8 naming to docker.io/library/e93349375336f41d79c4fc54135bd3fc3249a563 done
[90m[components/ws-manager:docker] [0m#8 DONE 0.3s
[90m[components/ws-manager:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager]
[90m[components/ws-manager:docker] [0m56790081e68c: Preparing
[90m[components/ws-manager:docker] [0m3b84c1aca3d0: Preparing
[90m[components/ws-manager:docker] [0m099cf1c15629: Preparing
[90m[components/ws-manager:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/ws-manager:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-manager:docker] [0m56790081e68c: Pushed
[90m[components/ws-manager:docker] [0m20230515: digest: sha256:7119937d1aec8a5dacc526be9b5de4dbfff931f5d67fa5bf8e7a802771ce9621 size: 950
[90m[components/ws-manager:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager]
[90m[components/ws-manager:docker] [0m56790081e68c: Preparing
[90m[components/ws-manager:docker] [0m3b84c1aca3d0: Preparing
[90m[components/ws-manager:docker] [0m099cf1c15629: Preparing
[90m[components/ws-manager:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-manager:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/ws-manager:docker] [0m56790081e68c: Layer already exists
[90m[components/ws-manager:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-e93349375336f41d79c4fc54135bd3fc3249a563: digest: sha256:7119937d1aec8a5dacc526be9b5de4dbfff931f5d67fa5bf8e7a802771ce9621 size: 950
[90m[components/ws-manager:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager:20230515
[90m[components/ws-manager:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-manager:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-e93349375336f41d79c4fc54135bd3fc3249a563
[90m[components/ws-manager:docker] [0m[0;32mpackage build succeded[0m [0;90m(25.77s)[0m

[0;32mbuild succeded[0m
leeway build components/ws-proxy:docker -Dversion=20230515
[32mðŸ“¦  cached locally[0m  components/common-go:lib               [90m(version 8136003076d66b7de3e6b017c46fd546692d7429)[0m
[32mðŸ“¦  cached locally[0m  components/content-service-api/go:lib  [90m(version f0ff53a61a85e04ee8fb591074e0a4c328db0f6c)[0m
[32mðŸ“¦  cached locally[0m  components/content-service:lib         [90m(version a5620795d39da64c1529d257e33b9550d5bbf58f)[0m
[32mðŸ“¦  cached locally[0m  components/registry-facade-api/go:lib  [90m(version 8abb6bd888d6a3016d07d6402fb25705a3f2d7bf)[0m
[32mðŸ“¦  cached locally[0m  components/supervisor-api/go:lib       [90m(version c11d472467d7bdc0dda2d2d82e897ac320d34489)[0m
[32mðŸ“¦  cached locally[0m  components/ws-manager-api/go:lib       [90m(version 759bd2055aeac1a81a6d8529d7f84e1b625e0301)[0m
[33mðŸ”§  build[0m           components/ws-proxy:app                [90m(version 198c7109591050344bd32d396accc39d11220219)[0m
[33mðŸ”§  build[0m           components/ws-proxy:docker             [90m(version 65aadea64e8a64a1f81a48f0f5ac2dca980366ee)[0m

[90m[components/ws-proxy:app] [0m[33mbuild started[0m [0;90m(version 198c7109591050344bd32d396accc39d11220219)[0m
[90m[components/ws-proxy:app] [0m?   	github.com/gitpod-io/gitpod/ws-proxy	[no test files]
[90m[components/ws-proxy:app] [0m?   	github.com/gitpod-io/gitpod/ws-proxy/cmd	[no test files]
[90m[components/ws-proxy:app] [0m?   	github.com/gitpod-io/gitpod/ws-proxy/pkg/analytics	[no test files]
[90m[components/ws-proxy:app] [0m?   	github.com/gitpod-io/gitpod/ws-proxy/pkg/config	[no test files]
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/workspace_not_found
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/no_workspace
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/no_credentials
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/wrong_credentials
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/broken_credentials
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/correct_credentials
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/admit_everyone_without_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/admit_everyone_with_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/admit_everyone_with_wrong_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/private_port
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/private_port_without_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/private_port_with_wrong_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/public_port
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/broken_port
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceAuthHandler/broken_port_without_cookie
[90m[components/ws-proxy:app] [0m--- PASS: TestWorkspaceAuthHandler (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/workspace_not_found (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/no_workspace (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/no_credentials (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/wrong_credentials (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/broken_credentials (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/correct_credentials (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/admit_everyone_without_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/admit_everyone_with_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/admit_everyone_with_wrong_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/private_port (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/private_port_without_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/private_port_with_wrong_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/public_port (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/broken_port (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceAuthHandler/broken_port_without_cookie (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies/no_cookies
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies/session_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies/portAuth_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies/owner_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestReadCookies/misc_cookie
[90m[components/ws-proxy:app] [0m--- PASS: TestReadCookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestReadCookies/no_cookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestReadCookies/session_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestReadCookies/portAuth_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestReadCookies/owner_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestReadCookies/misc_cookie (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/favicon
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_unauthorized_GET_/
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_unauthorized_navigate_/
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_unauthorized_same-origin_/
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_authorized_GET_/?foobar
[90m[components/ws-proxy:app] [0mtime="2023-05-15T09:39:13.392071635Z" level=error msg="could not preload supervisor" func="github.com/gitpod-io/gitpod/ws-proxy/pkg/proxy.(*ideRoutes).HandleRoot.func1.1" file="/tmp/build/components-ws-proxy--app.198c7109591050344bd32d396accc39d11220219/pkg/proxy/routes.go:299" error="dial tcp [::1]:20003: connect: connection refused" serviceContext="{ws-proxy-test }" supervisorURL="http://localhost:20003/gitpod-io/supervisor:latest"
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_authorized_GET_/not-from-blobserve
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_IDE_authorized_GET_/not-from-failed-blobserve
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_foreign_resource
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_foreign_resource
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/debug_foreign_resource
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_debug_foreign_resource
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/CORS_preflight
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/unauthenticated_supervisor_API_(supervisor_status)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/unauthenticated_supervisor_API_(IDE_status)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/unauthenticated_supervisor_API_(content_status)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/authenticated_supervisor_API_(content_status)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/non-existent_authorized_GET_/
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/non-existent_unauthorized_GET_/
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_supervisor_frontend_/worker-proxy.js
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_supervisor_frontend_/main.js
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/blobserve_supervisor_frontend_/main.js_retry_on_timeout
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_GET_404
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/debug_port_GET_404
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_GET_unexposed
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_cookies
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/port_GET_200_w/o_X-Frame-Options_header
[90m[components/ws-proxy:app] [0m2023/05/15 09:39:13 http: superfluous response.WriteHeader call from github.com/gitpod-io/gitpod/ws-proxy/pkg/proxy.TestRoutes.func8 (routes_test.go:684)
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/debug_IDE_authorized_GE
[90m[components/ws-proxy:app] [0m=== RUN   TestRoutes/debug_supervisor_frontend_/main.js
[90m[components/ws-proxy:app] [0m--- PASS: TestRoutes (0.07s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/favicon (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_unauthorized_GET_/ (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_unauthorized_navigate_/ (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_unauthorized_same-origin_/ (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_authorized_GET_/?foobar (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_authorized_GET_/not-from-blobserve (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_IDE_authorized_GET_/not-from-failed-blobserve (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_foreign_resource (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_foreign_resource (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/debug_foreign_resource (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_debug_foreign_resource (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/CORS_preflight (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/unauthenticated_supervisor_API_(supervisor_status) (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/unauthenticated_supervisor_API_(IDE_status) (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/unauthenticated_supervisor_API_(content_status) (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/authenticated_supervisor_API_(content_status) (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/non-existent_authorized_GET_/ (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/non-existent_unauthorized_GET_/ (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_supervisor_frontend_/worker-proxy.js (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_supervisor_frontend_/main.js (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/blobserve_supervisor_frontend_/main.js_retry_on_timeout (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_GET_404 (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/debug_port_GET_404 (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_GET_unexposed (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_cookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/port_GET_200_w/o_X-Frame-Options_header (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/debug_IDE_authorized_GE (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRoutes/debug_supervisor_frontend_/main.js (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestSSHGatewayRouter
[90m[components/ws-proxy:app] [0m=== RUN   TestSSHGatewayRouter/one_hostkey
[90m[components/ws-proxy:app] [0m[{"type":"ssh-rsa","host_key":"AAAAB3NzaC1yc2EAAAADAQABAAABAQCubFSjOfiRio3HiMUVFVcAqd4CIa0amkNrthyCJbGRFr+JN31DlD4AKD4ji+/gzCWhZofdOypMNWhtloVREPAvYC3inCH047dNbE1xuzZ4pE1Tc9N/4Ij3UPrX3by0hxb82YEJO1Fn3xjH7H56DwjfhtdOZ3std6XDjF6lMm8lWq7A0Xe3oAGTxua+gx7MtX2c9L0M5IS+jBNT/drL5Syu/y96XbpfVJySGP4Mdkp6cnehrb1j+2cE46L9QVgO6JBVL3aaMYpsKkHRHNt7Ew0Xkg+MEQNorIiktA3Felyje3y2DcQDrsxA9nM2vjT50XRna1FQ2du2NbfqBRaM3Kej"}]
[90m[components/ws-proxy:app] [0m    routes_test.go:930: [map[host_key:AAAAB3NzaC1yc2EAAAADAQABAAABAQCubFSjOfiRio3HiMUVFVcAqd4CIa0amkNrthyCJbGRFr+JN31DlD4AKD4ji+/gzCWhZofdOypMNWhtloVREPAvYC3inCH047dNbE1xuzZ4pE1Tc9N/4Ij3UPrX3by0hxb82YEJO1Fn3xjH7H56DwjfhtdOZ3std6XDjF6lMm8lWq7A0Xe3oAGTxua+gx7MtX2c9L0M5IS+jBNT/drL5Syu/y96XbpfVJySGP4Mdkp6cnehrb1j+2cE46L9QVgO6JBVL3aaMYpsKkHRHNt7Ew0Xkg+MEQNorIiktA3Felyje3y2DcQDrsxA9nM2vjT50XRna1FQ2du2NbfqBRaM3Kej type:ssh-rsa]] 1 1
[90m[components/ws-proxy:app] [0m=== RUN   TestSSHGatewayRouter/multi_hostkey
[90m[components/ws-proxy:app] [0m[{"type":"ssh-rsa","host_key":"AAAAB3NzaC1yc2EAAAADAQABAAABAQC3avAj2wiLOBGBDSM+Z+FsacRL59f0V9ibSRMVNWaYX2A0tbTmJsB8QbHWF87SmwDl0f+3vsy2WlWPgwqCK8U2rQHh9iF1b85em1NXBvUrTLVef9ODEAEcR1SKJ5CnyZIKrOILSqI5Gl9XW+tCELE1CDx81EoTWEknqSMYSaJ1tm/VoxXZ9ZCmiENrjBRirwuqc61SZmj9N46v7gIoBAJyKl3xnkrz0XyaBJHbjuuqRdwQXMQowGUJyydx3Jvwa713T29IYkeZYLqWeYxv8UKSW/zuxh9X1HD5e2T+gnwLnZBTLJK+UXmIwMeaBdADy+JUqJH846IAIuUcfQa1Fth3"},{"type":"ssh-rsa","host_key":"AAAAB3NzaC1yc2EAAAADAQABAAABAQDXelwMeOOFyqScxPSiHXssj8vBoR+LErT6XY3Tb6BoItIytVFUG+bzNJRY3ESWusTTN2R7gtM7V3ELGxUntwil9gVBdggNLu1ZI7LIL5maaK/gz147giUgoCpDZf8Op1hhNv+PUMztFQS60FqylRi0WJcyb5Atqr+4b/7g7Or49ydtZqSEkAY0ed62Tl49ZkuL2axvwZk9H/E/ACEl3LSgYmK4/vQxg9ru0R9ynlqy7BAzm1vhnonOTOLXbSQ8XpsDUJOVYfKSAanZt0nwVCMUuZNwuCkq5t/AisSjnjq8aFzU39EGC6FP028J6jmhpOat/3Eqm5BzfGrk9TSdHZzD"}]
[90m[components/ws-proxy:app] [0m    routes_test.go:930: [map[host_key:AAAAB3NzaC1yc2EAAAADAQABAAABAQC3avAj2wiLOBGBDSM+Z+FsacRL59f0V9ibSRMVNWaYX2A0tbTmJsB8QbHWF87SmwDl0f+3vsy2WlWPgwqCK8U2rQHh9iF1b85em1NXBvUrTLVef9ODEAEcR1SKJ5CnyZIKrOILSqI5Gl9XW+tCELE1CDx81EoTWEknqSMYSaJ1tm/VoxXZ9ZCmiENrjBRirwuqc61SZmj9N46v7gIoBAJyKl3xnkrz0XyaBJHbjuuqRdwQXMQowGUJyydx3Jvwa713T29IYkeZYLqWeYxv8UKSW/zuxh9X1HD5e2T+gnwLnZBTLJK+UXmIwMeaBdADy+JUqJH846IAIuUcfQa1Fth3 type:ssh-rsa] map[host_key:AAAAB3NzaC1yc2EAAAADAQABAAABAQDXelwMeOOFyqScxPSiHXssj8vBoR+LErT6XY3Tb6BoItIytVFUG+bzNJRY3ESWusTTN2R7gtM7V3ELGxUntwil9gVBdggNLu1ZI7LIL5maaK/gz147giUgoCpDZf8Op1hhNv+PUMztFQS60FqylRi0WJcyb5Atqr+4b/7g7Or49ydtZqSEkAY0ed62Tl49ZkuL2axvwZk9H/E/ACEl3LSgYmK4/vQxg9ru0R9ynlqy7BAzm1vhnonOTOLXbSQ8XpsDUJOVYfKSAanZt0nwVCMUuZNwuCkq5t/AisSjnjq8aFzU39EGC6FP028J6jmhpOat/3Eqm5BzfGrk9TSdHZzD type:ssh-rsa]] 2 2
[90m[components/ws-proxy:app] [0m--- PASS: TestSSHGatewayRouter (1.16s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestSSHGatewayRouter/one_hostkey (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestSSHGatewayRouter/multi_hostkey (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestNoSSHGatewayRouter
[90m[components/ws-proxy:app] [0m=== RUN   TestNoSSHGatewayRouter/TestNoSSHGatewayRouter
[90m[components/ws-proxy:app] [0m--- PASS: TestNoSSHGatewayRouter (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestNoSSHGatewayRouter/TestNoSSHGatewayRouter (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/no_cookies
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/session_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/portAuth_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/owner_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/misc_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestRemoveSensitiveCookies/invalid_cookie_name
[90m[components/ws-proxy:app] [0m--- PASS: TestRemoveSensitiveCookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/no_cookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/session_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/portAuth_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/owner_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/misc_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestRemoveSensitiveCookies/invalid_cookie_name (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestSensitiveCookieHandler
[90m[components/ws-proxy:app] [0m=== RUN   TestSensitiveCookieHandler/no_cookies
[90m[components/ws-proxy:app] [0m=== RUN   TestSensitiveCookieHandler/valid_cookie
[90m[components/ws-proxy:app] [0m=== RUN   TestSensitiveCookieHandler/invalid_cookie
[90m[components/ws-proxy:app] [0m--- PASS: TestSensitiveCookieHandler (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestSensitiveCookieHandler/no_cookies (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestSensitiveCookieHandler/valid_cookie (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestSensitiveCookieHandler/invalid_cookie (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceRouter
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceRouter/host-based_workspace_access
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceRouter/host-based_debug_workspace_access
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceRouter/host-based_port_access
[90m[components/ws-proxy:app] [0m=== RUN   TestWorkspaceRouter/host-based_debug_port_access
[90m[components/ws-proxy:app] [0m--- PASS: TestWorkspaceRouter (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceRouter/host-based_workspace_access (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceRouter/host-based_debug_workspace_access (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceRouter/host-based_port_access (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestWorkspaceRouter/host-based_debug_port_access (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/no_match
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/no_host
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/no_match_2
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/no_match_3
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/workspace_match
[90m[components/ws-proxy:app] [0m=== RUN   TestMatchWorkspaceHostHeader/port_match
[90m[components/ws-proxy:app] [0m--- PASS: TestMatchWorkspaceHostHeader (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/no_match (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/no_host (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/no_match_2 (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/no_match_3 (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/workspace_match (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestMatchWorkspaceHostHeader/port_match (0.00s)
[90m[components/ws-proxy:app] [0m=== RUN   TestAcmeHandler
[90m[components/ws-proxy:app] [0m=== RUN   TestAcmeHandler/Valid_acme_request
[90m[components/ws-proxy:app] [0m=== RUN   TestAcmeHandler/Not_an_acme_request
[90m[components/ws-proxy:app] [0m=== RUN   TestAcmeHandler/Valid_acme_request#01
[90m[components/ws-proxy:app] [0m--- PASS: TestAcmeHandler (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestAcmeHandler/Valid_acme_request (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestAcmeHandler/Not_an_acme_request (0.00s)
[90m[components/ws-proxy:app] [0m    --- PASS: TestAcmeHandler/Valid_acme_request#01 (0.00s)
[90m[components/ws-proxy:app] [0mPASS
[90m[components/ws-proxy:app] [0mok  	github.com/gitpod-io/gitpod/ws-proxy/pkg/proxy	1.280s
[90m[components/ws-proxy:app] [0m?   	github.com/gitpod-io/gitpod/ws-proxy/pkg/sshproxy	[no test files]
[90m[components/ws-proxy:app] [0m[0;32mpackage build succeded[0m [0;90m(20.87s)[0m
[90m[components/ws-proxy:docker] [0m[33mbuild started[0m [0;90m(version 65aadea64e8a64a1f81a48f0f5ac2dca980366ee)[0m
[90m[components/ws-proxy:docker] [0m#1 [internal] load build definition from Dockerfile
[90m[components/ws-proxy:docker] [0m#1 transferring dockerfile: 798B done
[90m[components/ws-proxy:docker] [0m#1 DONE 0.0s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#2 [internal] load .dockerignore
[90m[components/ws-proxy:docker] [0m#2 transferring context: 2B done
[90m[components/ws-proxy:docker] [0m#2 DONE 0.0s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#3 [internal] load metadata for cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-proxy:docker] [0m#3 DONE 0.0s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#4 [1/6] FROM cgr.dev/chainguard/wolfi-base:latest@sha256:153c0ba4dd4ef9272ed7440e8f2ffa233b09de3e24a36b490d2a10d750aaaddf
[90m[components/ws-proxy:docker] [0m#4 DONE 0.0s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#5 [internal] load build context
[90m[components/ws-proxy:docker] [0m#5 transferring context: 57.47MB 0.6s done
[90m[components/ws-proxy:docker] [0m#5 DONE 0.6s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#6 [2/6] RUN  apk upgrade --no-cache   && apk add --no-cache ca-certificates
[90m[components/ws-proxy:docker] [0m#6 CACHED
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#7 [3/6] RUN adduser -S -D -H -h /app -u 1000 appuser
[90m[components/ws-proxy:docker] [0m#7 CACHED
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#8 [4/6] COPY components-ws-proxy--app/ws-proxy /app/ws-proxy
[90m[components/ws-proxy:docker] [0m#8 DONE 0.7s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#9 [5/6] COPY public /app/public
[90m[components/ws-proxy:docker] [0m#9 DONE 0.0s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#10 [6/6] RUN chown -R appuser /app
[90m[components/ws-proxy:docker] [0m#10 DONE 0.7s
[90m[components/ws-proxy:docker] [0m
[90m[components/ws-proxy:docker] [0m#11 exporting to image
[90m[components/ws-proxy:docker] [0m#11 exporting layers
[90m[components/ws-proxy:docker] [0m#11 exporting layers 0.4s done
[90m[components/ws-proxy:docker] [0m#11 writing image sha256:ec8d9c546e8a2ee062914794a226f55caed154356cdf552a986779734fbf74b2 done
[90m[components/ws-proxy:docker] [0m#11 naming to docker.io/library/65aadea64e8a64a1f81a48f0f5ac2dca980366ee done
[90m[components/ws-proxy:docker] [0m#11 DONE 0.4s
[90m[components/ws-proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-proxy]
[90m[components/ws-proxy:docker] [0mbd4a94cb6042: Preparing
[90m[components/ws-proxy:docker] [0m79fb5cb98615: Preparing
[90m[components/ws-proxy:docker] [0m0fd44231ab53: Preparing
[90m[components/ws-proxy:docker] [0me83b3674197f: Preparing
[90m[components/ws-proxy:docker] [0m3b84c1aca3d0: Preparing
[90m[components/ws-proxy:docker] [0m099cf1c15629: Preparing
[90m[components/ws-proxy:docker] [0m099cf1c15629: Waiting
[90m[components/ws-proxy:docker] [0me83b3674197f: Layer already exists
[90m[components/ws-proxy:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/ws-proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-proxy:docker] [0m79fb5cb98615: Pushed
[90m[components/ws-proxy:docker] [0m0fd44231ab53: Pushed
[90m[components/ws-proxy:docker] [0mbd4a94cb6042: Pushed
[90m[components/ws-proxy:docker] [0m20230515: digest: sha256:99383cf010c0df6202f852ad0e9afd0ea84cc37fba818d0396b2fa6e4cb91a0e size: 1578
[90m[components/ws-proxy:docker] [0mThe push refers to repository [registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-proxy]
[90m[components/ws-proxy:docker] [0mbd4a94cb6042: Preparing
[90m[components/ws-proxy:docker] [0m79fb5cb98615: Preparing
[90m[components/ws-proxy:docker] [0m0fd44231ab53: Preparing
[90m[components/ws-proxy:docker] [0me83b3674197f: Preparing
[90m[components/ws-proxy:docker] [0m3b84c1aca3d0: Preparing
[90m[components/ws-proxy:docker] [0m099cf1c15629: Preparing
[90m[components/ws-proxy:docker] [0m099cf1c15629: Waiting
[90m[components/ws-proxy:docker] [0m79fb5cb98615: Layer already exists
[90m[components/ws-proxy:docker] [0me83b3674197f: Layer already exists
[90m[components/ws-proxy:docker] [0mbd4a94cb6042: Layer already exists
[90m[components/ws-proxy:docker] [0m3b84c1aca3d0: Layer already exists
[90m[components/ws-proxy:docker] [0m099cf1c15629: Layer already exists
[90m[components/ws-proxy:docker] [0m0fd44231ab53: Layer already exists
[90m[components/ws-proxy:docker] [0mcommit-2d17e04d750c74d2078d1e9a8d40dee820199297-65aadea64e8a64a1f81a48f0f5ac2dca980366ee: digest: sha256:99383cf010c0df6202f852ad0e9afd0ea84cc37fba818d0396b2fa6e4cb91a0e size: 1578
[90m[components/ws-proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-proxy:20230515
[90m[components/ws-proxy:docker] [0mbuilt image: registry.cn-beijing.aliyuncs.com/self-build-gitpod/ws-proxy:commit-2d17e04d750c74d2078d1e9a8d40dee820199297-65aadea64e8a64a1f81a48f0f5ac2dca980366ee
[90m[components/ws-proxy:docker] [0m[0;32mpackage build succeded[0m [0;90m(28.98s)[0m

[0;32mbuild succeded[0m
