apiVersion: apps/v1
data:
  spec:
    template:
      $patch: replace
      metadata:
        annotations:
          checksum/configuration: 37e3943f161e7ddf74433d5e5ddd1a4042eed1436b9e35832a62accc68860c1b
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: primary
          app.kubernetes.io/instance: mysql
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: mysql
          helm.sh/chart: mysql-9.4.5
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: gitpod.io/workload_meta
                  operator: Exists
        containers:
        - env:
          - name: BITNAMI_DEBUG
            value: "false"
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-root-password
                name: db-password
          - name: MYSQL_USER
            value: gitpod
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: mysql-password
                name: db-password
          - name: MYSQL_DATABASE
            value: gitpod
          - name: MYSQL_EXTRA_FLAGS
            value: --explicit-defaults-for-timestamp=OFF
          image: docker.io/bitnami/mysql:5.7.34-debian-10-r55
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -ec
              - |
                password_aux="${MYSQL_ROOT_PASSWORD:-}"
                if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                    password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                fi
                mysqladmin status -uroot -p"${password_aux}"
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -ec
              - |
                password_aux="${MYSQL_ROOT_PASSWORD:-}"
                if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
                    password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
                fi
                mysqladmin status -uroot -p"${password_aux}"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 128Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mysql
            name: data
          - mountPath: /docker-entrypoint-initdb.d
            name: custom-init-scripts
          - mountPath: /opt/bitnami/mysql/conf/my.cnf
            name: config
            subPath: my.cnf
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -ec
          - |
            mkdir -p "/bitnami/mysql"
            chown "1001:1001" "/bitnami/mysql"
            find "/bitnami/mysql" -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R "1001:1001"
          image: docker.io/bitnami/bitnami-shell:11-debian-11-r60
          imagePullPolicy: IfNotPresent
          name: volume-permissions
          resources: {}
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/mysql
            name: data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: db
        serviceAccountName: db
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: mysql
          name: config
        - configMap:
            defaultMode: 420
            name: db-init-scripts
          name: custom-init-scripts
kind: ControllerRevision
metadata:
  annotations:
    meta.helm.sh/release-name: gitpod
    meta.helm.sh/release-namespace: gitpod
  creationTimestamp: "2023-05-09T09:31:14Z"
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    controller.kubernetes.io/hash: 594c5859
    helm.sh/chart: mysql-9.4.5
  name: mysql-594c5859
  namespace: gitpod
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: mysql
    uid: 9f1546ab-f4bb-4956-a5df-f27cdbb8b076
  resourceVersion: "3775"
  uid: d39e3660-0905-482a-bca8-ca6f12d274ae
revision: 1
